{"id":"165f6e1d67ec1ba0cbc757b89e5a392a","_format":"hh-sol-build-info-1","solcVersion":"0.8.19","solcLongVersion":"0.8.19+commit.7dd6d404","input":{"language":"Solidity","sources":{"@openzeppelin/contracts/access/Ownable.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.0) (access/Ownable.sol)\n\npragma solidity ^0.8.0;\n\nimport \"../utils/Context.sol\";\n\n/**\n * @dev Contract module which provides a basic access control mechanism, where\n * there is an account (an owner) that can be granted exclusive access to\n * specific functions.\n *\n * By default, the owner account will be the one that deploys the contract. This\n * can later be changed with {transferOwnership}.\n *\n * This module is used through inheritance. It will make available the modifier\n * `onlyOwner`, which can be applied to your functions to restrict their use to\n * the owner.\n */\nabstract contract Ownable is Context {\n    address private _owner;\n\n    event OwnershipTransferred(address indexed previousOwner, address indexed newOwner);\n\n    /**\n     * @dev Initializes the contract setting the deployer as the initial owner.\n     */\n    constructor() {\n        _transferOwnership(_msgSender());\n    }\n\n    /**\n     * @dev Throws if called by any account other than the owner.\n     */\n    modifier onlyOwner() {\n        _checkOwner();\n        _;\n    }\n\n    /**\n     * @dev Returns the address of the current owner.\n     */\n    function owner() public view virtual returns (address) {\n        return _owner;\n    }\n\n    /**\n     * @dev Throws if the sender is not the owner.\n     */\n    function _checkOwner() internal view virtual {\n        require(owner() == _msgSender(), \"Ownable: caller is not the owner\");\n    }\n\n    /**\n     * @dev Leaves the contract without owner. It will not be possible to call\n     * `onlyOwner` functions. Can only be called by the current owner.\n     *\n     * NOTE: Renouncing ownership will leave the contract without an owner,\n     * thereby disabling any functionality that is only available to the owner.\n     */\n    function renounceOwnership() public virtual onlyOwner {\n        _transferOwnership(address(0));\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Can only be called by the current owner.\n     */\n    function transferOwnership(address newOwner) public virtual onlyOwner {\n        require(newOwner != address(0), \"Ownable: new owner is the zero address\");\n        _transferOwnership(newOwner);\n    }\n\n    /**\n     * @dev Transfers ownership of the contract to a new account (`newOwner`).\n     * Internal function without access restriction.\n     */\n    function _transferOwnership(address newOwner) internal virtual {\n        address oldOwner = _owner;\n        _owner = newOwner;\n        emit OwnershipTransferred(oldOwner, newOwner);\n    }\n}\n"},"@openzeppelin/contracts/utils/Context.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.9.4) (utils/Context.sol)\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Provides information about the current execution context, including the\n * sender of the transaction and its data. While these are generally available\n * via msg.sender and msg.data, they should not be accessed in such a direct\n * manner, since when dealing with meta-transactions the account sending and\n * paying for execution may not be the actual sender (as far as an application\n * is concerned).\n *\n * This contract is only required for intermediate, library-like contracts.\n */\nabstract contract Context {\n    function _msgSender() internal view virtual returns (address) {\n        return msg.sender;\n    }\n\n    function _msgData() internal view virtual returns (bytes calldata) {\n        return msg.data;\n    }\n\n    function _contextSuffixLength() internal view virtual returns (uint256) {\n        return 0;\n    }\n}\n"},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"content":"// SPDX-License-Identifier: MIT\n// OpenZeppelin Contracts (last updated v4.8.0) (utils/math/SafeCast.sol)\n// This file was procedurally generated from scripts/generate/templates/SafeCast.js.\n\npragma solidity ^0.8.0;\n\n/**\n * @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n * checks.\n *\n * Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n * easily result in undesired exploitation or bugs, since developers usually\n * assume that overflows raise errors. `SafeCast` restores this intuition by\n * reverting the transaction when such an operation overflows.\n *\n * Using this library instead of the unchecked operations eliminates an entire\n * class of bugs, so it's recommended to use it always.\n *\n * Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n * all math on `uint256` and `int256` and then downcasting.\n */\nlibrary SafeCast {\n    /**\n     * @dev Returns the downcasted uint248 from uint256, reverting on\n     * overflow (when the input is greater than largest uint248).\n     *\n     * Counterpart to Solidity's `uint248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint248(uint256 value) internal pure returns (uint248) {\n        require(value <= type(uint248).max, \"SafeCast: value doesn't fit in 248 bits\");\n        return uint248(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint240 from uint256, reverting on\n     * overflow (when the input is greater than largest uint240).\n     *\n     * Counterpart to Solidity's `uint240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint240(uint256 value) internal pure returns (uint240) {\n        require(value <= type(uint240).max, \"SafeCast: value doesn't fit in 240 bits\");\n        return uint240(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint232 from uint256, reverting on\n     * overflow (when the input is greater than largest uint232).\n     *\n     * Counterpart to Solidity's `uint232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint232(uint256 value) internal pure returns (uint232) {\n        require(value <= type(uint232).max, \"SafeCast: value doesn't fit in 232 bits\");\n        return uint232(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint224 from uint256, reverting on\n     * overflow (when the input is greater than largest uint224).\n     *\n     * Counterpart to Solidity's `uint224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint224(uint256 value) internal pure returns (uint224) {\n        require(value <= type(uint224).max, \"SafeCast: value doesn't fit in 224 bits\");\n        return uint224(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint216 from uint256, reverting on\n     * overflow (when the input is greater than largest uint216).\n     *\n     * Counterpart to Solidity's `uint216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint216(uint256 value) internal pure returns (uint216) {\n        require(value <= type(uint216).max, \"SafeCast: value doesn't fit in 216 bits\");\n        return uint216(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint208 from uint256, reverting on\n     * overflow (when the input is greater than largest uint208).\n     *\n     * Counterpart to Solidity's `uint208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint208(uint256 value) internal pure returns (uint208) {\n        require(value <= type(uint208).max, \"SafeCast: value doesn't fit in 208 bits\");\n        return uint208(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint200 from uint256, reverting on\n     * overflow (when the input is greater than largest uint200).\n     *\n     * Counterpart to Solidity's `uint200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint200(uint256 value) internal pure returns (uint200) {\n        require(value <= type(uint200).max, \"SafeCast: value doesn't fit in 200 bits\");\n        return uint200(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint192 from uint256, reverting on\n     * overflow (when the input is greater than largest uint192).\n     *\n     * Counterpart to Solidity's `uint192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint192(uint256 value) internal pure returns (uint192) {\n        require(value <= type(uint192).max, \"SafeCast: value doesn't fit in 192 bits\");\n        return uint192(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint184 from uint256, reverting on\n     * overflow (when the input is greater than largest uint184).\n     *\n     * Counterpart to Solidity's `uint184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint184(uint256 value) internal pure returns (uint184) {\n        require(value <= type(uint184).max, \"SafeCast: value doesn't fit in 184 bits\");\n        return uint184(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint176 from uint256, reverting on\n     * overflow (when the input is greater than largest uint176).\n     *\n     * Counterpart to Solidity's `uint176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint176(uint256 value) internal pure returns (uint176) {\n        require(value <= type(uint176).max, \"SafeCast: value doesn't fit in 176 bits\");\n        return uint176(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint168 from uint256, reverting on\n     * overflow (when the input is greater than largest uint168).\n     *\n     * Counterpart to Solidity's `uint168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint168(uint256 value) internal pure returns (uint168) {\n        require(value <= type(uint168).max, \"SafeCast: value doesn't fit in 168 bits\");\n        return uint168(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint160 from uint256, reverting on\n     * overflow (when the input is greater than largest uint160).\n     *\n     * Counterpart to Solidity's `uint160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint160(uint256 value) internal pure returns (uint160) {\n        require(value <= type(uint160).max, \"SafeCast: value doesn't fit in 160 bits\");\n        return uint160(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint152 from uint256, reverting on\n     * overflow (when the input is greater than largest uint152).\n     *\n     * Counterpart to Solidity's `uint152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint152(uint256 value) internal pure returns (uint152) {\n        require(value <= type(uint152).max, \"SafeCast: value doesn't fit in 152 bits\");\n        return uint152(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint144 from uint256, reverting on\n     * overflow (when the input is greater than largest uint144).\n     *\n     * Counterpart to Solidity's `uint144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint144(uint256 value) internal pure returns (uint144) {\n        require(value <= type(uint144).max, \"SafeCast: value doesn't fit in 144 bits\");\n        return uint144(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint136 from uint256, reverting on\n     * overflow (when the input is greater than largest uint136).\n     *\n     * Counterpart to Solidity's `uint136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint136(uint256 value) internal pure returns (uint136) {\n        require(value <= type(uint136).max, \"SafeCast: value doesn't fit in 136 bits\");\n        return uint136(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint128 from uint256, reverting on\n     * overflow (when the input is greater than largest uint128).\n     *\n     * Counterpart to Solidity's `uint128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint128(uint256 value) internal pure returns (uint128) {\n        require(value <= type(uint128).max, \"SafeCast: value doesn't fit in 128 bits\");\n        return uint128(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint120 from uint256, reverting on\n     * overflow (when the input is greater than largest uint120).\n     *\n     * Counterpart to Solidity's `uint120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint120(uint256 value) internal pure returns (uint120) {\n        require(value <= type(uint120).max, \"SafeCast: value doesn't fit in 120 bits\");\n        return uint120(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint112 from uint256, reverting on\n     * overflow (when the input is greater than largest uint112).\n     *\n     * Counterpart to Solidity's `uint112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint112(uint256 value) internal pure returns (uint112) {\n        require(value <= type(uint112).max, \"SafeCast: value doesn't fit in 112 bits\");\n        return uint112(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint104 from uint256, reverting on\n     * overflow (when the input is greater than largest uint104).\n     *\n     * Counterpart to Solidity's `uint104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint104(uint256 value) internal pure returns (uint104) {\n        require(value <= type(uint104).max, \"SafeCast: value doesn't fit in 104 bits\");\n        return uint104(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint96 from uint256, reverting on\n     * overflow (when the input is greater than largest uint96).\n     *\n     * Counterpart to Solidity's `uint96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.2._\n     */\n    function toUint96(uint256 value) internal pure returns (uint96) {\n        require(value <= type(uint96).max, \"SafeCast: value doesn't fit in 96 bits\");\n        return uint96(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint88 from uint256, reverting on\n     * overflow (when the input is greater than largest uint88).\n     *\n     * Counterpart to Solidity's `uint88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint88(uint256 value) internal pure returns (uint88) {\n        require(value <= type(uint88).max, \"SafeCast: value doesn't fit in 88 bits\");\n        return uint88(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint80 from uint256, reverting on\n     * overflow (when the input is greater than largest uint80).\n     *\n     * Counterpart to Solidity's `uint80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint80(uint256 value) internal pure returns (uint80) {\n        require(value <= type(uint80).max, \"SafeCast: value doesn't fit in 80 bits\");\n        return uint80(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint72 from uint256, reverting on\n     * overflow (when the input is greater than largest uint72).\n     *\n     * Counterpart to Solidity's `uint72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint72(uint256 value) internal pure returns (uint72) {\n        require(value <= type(uint72).max, \"SafeCast: value doesn't fit in 72 bits\");\n        return uint72(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint64 from uint256, reverting on\n     * overflow (when the input is greater than largest uint64).\n     *\n     * Counterpart to Solidity's `uint64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint64(uint256 value) internal pure returns (uint64) {\n        require(value <= type(uint64).max, \"SafeCast: value doesn't fit in 64 bits\");\n        return uint64(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint56 from uint256, reverting on\n     * overflow (when the input is greater than largest uint56).\n     *\n     * Counterpart to Solidity's `uint56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint56(uint256 value) internal pure returns (uint56) {\n        require(value <= type(uint56).max, \"SafeCast: value doesn't fit in 56 bits\");\n        return uint56(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint48 from uint256, reverting on\n     * overflow (when the input is greater than largest uint48).\n     *\n     * Counterpart to Solidity's `uint48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint48(uint256 value) internal pure returns (uint48) {\n        require(value <= type(uint48).max, \"SafeCast: value doesn't fit in 48 bits\");\n        return uint48(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint40 from uint256, reverting on\n     * overflow (when the input is greater than largest uint40).\n     *\n     * Counterpart to Solidity's `uint40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint40(uint256 value) internal pure returns (uint40) {\n        require(value <= type(uint40).max, \"SafeCast: value doesn't fit in 40 bits\");\n        return uint40(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint32 from uint256, reverting on\n     * overflow (when the input is greater than largest uint32).\n     *\n     * Counterpart to Solidity's `uint32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint32(uint256 value) internal pure returns (uint32) {\n        require(value <= type(uint32).max, \"SafeCast: value doesn't fit in 32 bits\");\n        return uint32(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint24 from uint256, reverting on\n     * overflow (when the input is greater than largest uint24).\n     *\n     * Counterpart to Solidity's `uint24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toUint24(uint256 value) internal pure returns (uint24) {\n        require(value <= type(uint24).max, \"SafeCast: value doesn't fit in 24 bits\");\n        return uint24(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint16 from uint256, reverting on\n     * overflow (when the input is greater than largest uint16).\n     *\n     * Counterpart to Solidity's `uint16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint16(uint256 value) internal pure returns (uint16) {\n        require(value <= type(uint16).max, \"SafeCast: value doesn't fit in 16 bits\");\n        return uint16(value);\n    }\n\n    /**\n     * @dev Returns the downcasted uint8 from uint256, reverting on\n     * overflow (when the input is greater than largest uint8).\n     *\n     * Counterpart to Solidity's `uint8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v2.5._\n     */\n    function toUint8(uint256 value) internal pure returns (uint8) {\n        require(value <= type(uint8).max, \"SafeCast: value doesn't fit in 8 bits\");\n        return uint8(value);\n    }\n\n    /**\n     * @dev Converts a signed int256 into an unsigned uint256.\n     *\n     * Requirements:\n     *\n     * - input must be greater than or equal to 0.\n     *\n     * _Available since v3.0._\n     */\n    function toUint256(int256 value) internal pure returns (uint256) {\n        require(value >= 0, \"SafeCast: value must be positive\");\n        return uint256(value);\n    }\n\n    /**\n     * @dev Returns the downcasted int248 from int256, reverting on\n     * overflow (when the input is less than smallest int248 or\n     * greater than largest int248).\n     *\n     * Counterpart to Solidity's `int248` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 248 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt248(int256 value) internal pure returns (int248 downcasted) {\n        downcasted = int248(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 248 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int240 from int256, reverting on\n     * overflow (when the input is less than smallest int240 or\n     * greater than largest int240).\n     *\n     * Counterpart to Solidity's `int240` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 240 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt240(int256 value) internal pure returns (int240 downcasted) {\n        downcasted = int240(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 240 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int232 from int256, reverting on\n     * overflow (when the input is less than smallest int232 or\n     * greater than largest int232).\n     *\n     * Counterpart to Solidity's `int232` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 232 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt232(int256 value) internal pure returns (int232 downcasted) {\n        downcasted = int232(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 232 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int224 from int256, reverting on\n     * overflow (when the input is less than smallest int224 or\n     * greater than largest int224).\n     *\n     * Counterpart to Solidity's `int224` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 224 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt224(int256 value) internal pure returns (int224 downcasted) {\n        downcasted = int224(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 224 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int216 from int256, reverting on\n     * overflow (when the input is less than smallest int216 or\n     * greater than largest int216).\n     *\n     * Counterpart to Solidity's `int216` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 216 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt216(int256 value) internal pure returns (int216 downcasted) {\n        downcasted = int216(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 216 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int208 from int256, reverting on\n     * overflow (when the input is less than smallest int208 or\n     * greater than largest int208).\n     *\n     * Counterpart to Solidity's `int208` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 208 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt208(int256 value) internal pure returns (int208 downcasted) {\n        downcasted = int208(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 208 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int200 from int256, reverting on\n     * overflow (when the input is less than smallest int200 or\n     * greater than largest int200).\n     *\n     * Counterpart to Solidity's `int200` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 200 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt200(int256 value) internal pure returns (int200 downcasted) {\n        downcasted = int200(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 200 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int192 from int256, reverting on\n     * overflow (when the input is less than smallest int192 or\n     * greater than largest int192).\n     *\n     * Counterpart to Solidity's `int192` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 192 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt192(int256 value) internal pure returns (int192 downcasted) {\n        downcasted = int192(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 192 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int184 from int256, reverting on\n     * overflow (when the input is less than smallest int184 or\n     * greater than largest int184).\n     *\n     * Counterpart to Solidity's `int184` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 184 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt184(int256 value) internal pure returns (int184 downcasted) {\n        downcasted = int184(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 184 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int176 from int256, reverting on\n     * overflow (when the input is less than smallest int176 or\n     * greater than largest int176).\n     *\n     * Counterpart to Solidity's `int176` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 176 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt176(int256 value) internal pure returns (int176 downcasted) {\n        downcasted = int176(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 176 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int168 from int256, reverting on\n     * overflow (when the input is less than smallest int168 or\n     * greater than largest int168).\n     *\n     * Counterpart to Solidity's `int168` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 168 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt168(int256 value) internal pure returns (int168 downcasted) {\n        downcasted = int168(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 168 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int160 from int256, reverting on\n     * overflow (when the input is less than smallest int160 or\n     * greater than largest int160).\n     *\n     * Counterpart to Solidity's `int160` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 160 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt160(int256 value) internal pure returns (int160 downcasted) {\n        downcasted = int160(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 160 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int152 from int256, reverting on\n     * overflow (when the input is less than smallest int152 or\n     * greater than largest int152).\n     *\n     * Counterpart to Solidity's `int152` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 152 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt152(int256 value) internal pure returns (int152 downcasted) {\n        downcasted = int152(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 152 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int144 from int256, reverting on\n     * overflow (when the input is less than smallest int144 or\n     * greater than largest int144).\n     *\n     * Counterpart to Solidity's `int144` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 144 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt144(int256 value) internal pure returns (int144 downcasted) {\n        downcasted = int144(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 144 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int136 from int256, reverting on\n     * overflow (when the input is less than smallest int136 or\n     * greater than largest int136).\n     *\n     * Counterpart to Solidity's `int136` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 136 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt136(int256 value) internal pure returns (int136 downcasted) {\n        downcasted = int136(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 136 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int128 from int256, reverting on\n     * overflow (when the input is less than smallest int128 or\n     * greater than largest int128).\n     *\n     * Counterpart to Solidity's `int128` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 128 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt128(int256 value) internal pure returns (int128 downcasted) {\n        downcasted = int128(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 128 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int120 from int256, reverting on\n     * overflow (when the input is less than smallest int120 or\n     * greater than largest int120).\n     *\n     * Counterpart to Solidity's `int120` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 120 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt120(int256 value) internal pure returns (int120 downcasted) {\n        downcasted = int120(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 120 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int112 from int256, reverting on\n     * overflow (when the input is less than smallest int112 or\n     * greater than largest int112).\n     *\n     * Counterpart to Solidity's `int112` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 112 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt112(int256 value) internal pure returns (int112 downcasted) {\n        downcasted = int112(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 112 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int104 from int256, reverting on\n     * overflow (when the input is less than smallest int104 or\n     * greater than largest int104).\n     *\n     * Counterpart to Solidity's `int104` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 104 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt104(int256 value) internal pure returns (int104 downcasted) {\n        downcasted = int104(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 104 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int96 from int256, reverting on\n     * overflow (when the input is less than smallest int96 or\n     * greater than largest int96).\n     *\n     * Counterpart to Solidity's `int96` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 96 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt96(int256 value) internal pure returns (int96 downcasted) {\n        downcasted = int96(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 96 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int88 from int256, reverting on\n     * overflow (when the input is less than smallest int88 or\n     * greater than largest int88).\n     *\n     * Counterpart to Solidity's `int88` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 88 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt88(int256 value) internal pure returns (int88 downcasted) {\n        downcasted = int88(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 88 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int80 from int256, reverting on\n     * overflow (when the input is less than smallest int80 or\n     * greater than largest int80).\n     *\n     * Counterpart to Solidity's `int80` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 80 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt80(int256 value) internal pure returns (int80 downcasted) {\n        downcasted = int80(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 80 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int72 from int256, reverting on\n     * overflow (when the input is less than smallest int72 or\n     * greater than largest int72).\n     *\n     * Counterpart to Solidity's `int72` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 72 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt72(int256 value) internal pure returns (int72 downcasted) {\n        downcasted = int72(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 72 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int64 from int256, reverting on\n     * overflow (when the input is less than smallest int64 or\n     * greater than largest int64).\n     *\n     * Counterpart to Solidity's `int64` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 64 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt64(int256 value) internal pure returns (int64 downcasted) {\n        downcasted = int64(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 64 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int56 from int256, reverting on\n     * overflow (when the input is less than smallest int56 or\n     * greater than largest int56).\n     *\n     * Counterpart to Solidity's `int56` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 56 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt56(int256 value) internal pure returns (int56 downcasted) {\n        downcasted = int56(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 56 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int48 from int256, reverting on\n     * overflow (when the input is less than smallest int48 or\n     * greater than largest int48).\n     *\n     * Counterpart to Solidity's `int48` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 48 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt48(int256 value) internal pure returns (int48 downcasted) {\n        downcasted = int48(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 48 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int40 from int256, reverting on\n     * overflow (when the input is less than smallest int40 or\n     * greater than largest int40).\n     *\n     * Counterpart to Solidity's `int40` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 40 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt40(int256 value) internal pure returns (int40 downcasted) {\n        downcasted = int40(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 40 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int32 from int256, reverting on\n     * overflow (when the input is less than smallest int32 or\n     * greater than largest int32).\n     *\n     * Counterpart to Solidity's `int32` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 32 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt32(int256 value) internal pure returns (int32 downcasted) {\n        downcasted = int32(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 32 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int24 from int256, reverting on\n     * overflow (when the input is less than smallest int24 or\n     * greater than largest int24).\n     *\n     * Counterpart to Solidity's `int24` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 24 bits\n     *\n     * _Available since v4.7._\n     */\n    function toInt24(int256 value) internal pure returns (int24 downcasted) {\n        downcasted = int24(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 24 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int16 from int256, reverting on\n     * overflow (when the input is less than smallest int16 or\n     * greater than largest int16).\n     *\n     * Counterpart to Solidity's `int16` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 16 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt16(int256 value) internal pure returns (int16 downcasted) {\n        downcasted = int16(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 16 bits\");\n    }\n\n    /**\n     * @dev Returns the downcasted int8 from int256, reverting on\n     * overflow (when the input is less than smallest int8 or\n     * greater than largest int8).\n     *\n     * Counterpart to Solidity's `int8` operator.\n     *\n     * Requirements:\n     *\n     * - input must fit into 8 bits\n     *\n     * _Available since v3.1._\n     */\n    function toInt8(int256 value) internal pure returns (int8 downcasted) {\n        downcasted = int8(value);\n        require(downcasted == value, \"SafeCast: value doesn't fit in 8 bits\");\n    }\n\n    /**\n     * @dev Converts an unsigned uint256 into a signed int256.\n     *\n     * Requirements:\n     *\n     * - input must be less than or equal to maxInt256.\n     *\n     * _Available since v3.0._\n     */\n    function toInt256(uint256 value) internal pure returns (int256) {\n        // Note: Unsafe cast below is okay because `type(int256).max` is guaranteed to be positive\n        require(value <= uint256(type(int256).max), \"SafeCast: value doesn't fit in an int256\");\n        return int256(value);\n    }\n}\n"},"contracts/insurance.sol":{"content":"// SPDX-License-Identifier: MIT\r\npragma solidity ^0.8.19;\r\n\r\n// OpenZeppelin contracts for basic functionality\r\nimport \"@openzeppelin/contracts/access/Ownable.sol\";\r\nimport \"@openzeppelin/contracts/utils/math/SafeCast.sol\";\r\n\r\n// IPFS library for demonstration purposes\r\n//import \"./IPFSStorage.sol\";\r\n\r\ncontract InsuranceContract is Ownable {\r\n    using SafeCast for uint256;\r\n\r\n    // Define a structure to represent a document\r\n    struct Document {\r\n        uint256 indexNumber; // Unique identifier for each document within a client's array\r\n        address InsuranceFirm;\r\n        address clientAddress;\r\n        string documentHash;  // IPFS hash of the document\r\n        uint256 timestamp;\r\n        bool isValid;\r\n        uint256[] traceabilityIndexes;  // Array of traceability indexes\r\n    }\r\n\r\n    // Define a structure to represent traceability information\r\n    struct Traceability {\r\n        address user;\r\n        uint256 timestamp;\r\n        string reason;\r\n        bool success; // Whether the access attempt was successful\r\n    }\r\n    struct documentGenerated {\r\n        address insuranceCompany;\r\n        address intendedClient;\r\n        uint256 Index;\r\n    }\r\n\r\n    //broker Dashboard info\r\n    mapping(address => documentGenerated[]) private broker;\r\n\r\n    // Mapping to store documents associated with each client\r\n    mapping(address => Document[]) private clientDocuments;\r\n\r\n    // Mapping to store access control for each document\r\n    mapping(address => mapping(uint256 => mapping(address => bool))) private documentAccessControl;\r\n\r\n    // Mapping to track which insurance company shared documents with which clients\r\n    mapping(address => mapping(address => bool)) private sharedDocuments;\r\n\r\n    // Mapping to track client access rights\r\n    mapping(address => mapping(address => bool)) private clientAccessRights;\r\n\r\n    // Mapping to store traceability for each document access attempt\r\n    mapping(address => mapping(uint256 => Traceability[])) private documentTraceability;\r\n\r\n    // Events for traceability\r\n    event DocumentAccessed(address indexed user, address indexed documentOwner, uint256 timestamp, string reason, string documentHash, bool success);\r\n\r\n    //Event emitting info, which insurance firm has generated what document for a respective client!\r\n    event DocumentGenerated(address indexed InsuranceFirm, address indexed clientAddress, uint256 Index); \r\n\r\n    // Modifiers for access control\r\n    modifier onlyBroker() {\r\n        require(msg.sender == owner(), \"Only the broker can call this function\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyDocumentOwner(address clientAddress) {\r\n        require(msg.sender == clientAddress, \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    modifier onlyDocumentOwnerOrAuthorized(address clientAddress) {\r\n        require(msg.sender == owner() || msg.sender == clientAddress || clientAccessRights[clientAddress][msg.sender], \"Not authorized\");\r\n        _;\r\n    }\r\n\r\n    // Function to submit a document to IPFS and store details on the blockchain\r\n    function submitDocument(address insuranceCompany, address clientAddress, string memory documentHash) external onlyDocumentOwner(insuranceCompany) {\r\n        //require(sharedDocuments[insuranceCompany][clientAddress] == false, \"Access already granted\");\r\n        uint256 timestamp = block.timestamp;\r\n        uint256 indexNumber = clientDocuments[msg.sender].length; // Unique identifier for each document\r\n        Document memory newDocument = Document(indexNumber, insuranceCompany, clientAddress, documentHash, timestamp, true, new uint256[](0));\r\n        clientDocuments[msg.sender].push(newDocument);\r\n        // Mark that the insurance company has shared documents with this client\r\n        sharedDocuments[insuranceCompany][clientAddress] = true;\r\n        // Grant access to the client\r\n        clientAccessRights[insuranceCompany][clientAddress] = true;\r\n        documentTraceability[msg.sender][indexNumber].push(Traceability(msg.sender, block.timestamp, \"Insurance Firm Generates Insurance Claim for clIENT!\", true));\r\n        documentGenerated memory newDoc = documentGenerated(insuranceCompany, clientAddress, indexNumber);\r\n        broker[owner()].push(newDoc);\r\n        emit DocumentGenerated(insuranceCompany, clientAddress, indexNumber);\r\n    }\r\n\r\n    // Function to set access control for a document\r\n    function setAccessControl(address InsuranceFirm, uint256 index, address user, bool hasAccess) external onlyBroker {\r\n        require(index < clientDocuments[InsuranceFirm].length, \"Invalid index\");\r\n\r\n        // Only the document owner can set access control\r\n        //require(msg.sender == clientDocuments[InsuranceFirm][index].clientAddress, \"Not authorized to set access control\");\r\n\r\n        // Set access control\r\n        documentAccessControl[InsuranceFirm][index][user] = hasAccess;\r\n        documentTraceability[InsuranceFirm][index].push(Traceability(msg.sender, block.timestamp, \"Broker Giving Document Access to Respective Client!\", true));\r\n    }\r\n\r\n    // Function to get access control for a document\r\n    function getAccessControl(address InsuranceFirm, uint256 index, address user) external view onlyDocumentOwnerOrAuthorized(InsuranceFirm) returns (bool) {\r\n        require(index < clientDocuments[InsuranceFirm].length, \"Invalid index\");\r\n\r\n        // Only the document owner or authorized users can get access control\r\n        require(msg.sender == clientDocuments[InsuranceFirm][index].clientAddress || clientAccessRights[InsuranceFirm][msg.sender], \"Not authorized to get access control\");\r\n\r\n        // Get access control\r\n        return documentAccessControl[InsuranceFirm][index][user];\r\n    }\r\n\r\n    // Function to revoke access from a client or insurance company\r\n    function revokeAccess(address clientAddress, address insuranceCompany) external onlyBroker {\r\n        require(sharedDocuments[insuranceCompany][clientAddress] == true, \"Access not granted\");\r\n\r\n        // Logic to revoke access\r\n        // You can implement a more sophisticated access control mechanism here\r\n\r\n        // Mark that the access has been revoked\r\n        sharedDocuments[insuranceCompany][clientAddress] = false;\r\n        // Revoke access from the client\r\n        clientAccessRights[clientAddress][insuranceCompany] = false;\r\n    }\r\n\r\n    // Function to mark a document as invalid\r\n    function markDocumentAsInvalid(address clientAddress, uint256 index) external onlyBroker {\r\n        require(index < clientDocuments[clientAddress].length, \"Invalid index\");\r\n        clientDocuments[clientAddress][index].isValid = false;\r\n    }\r\n\r\n    // Function to get all documents of a client\r\n    function getClientDocuments(address insuranceCompany) external view onlyDocumentOwner(insuranceCompany) returns (Document[] memory) {\r\n        return clientDocuments[insuranceCompany];\r\n    }\r\n\r\n    function brokerDashboard() external view onlyBroker returns (documentGenerated[] memory) {\r\n        return broker[msg.sender];\r\n    }\r\n\r\n    // Function to get all documents (for the broker's dashboard)\r\n    function getAllDocuments(address user) external view onlyBroker returns (Document[] memory) {\r\n        // Return all documents from all clients\r\n        // You may want to implement pagination or other optimizations for a real-world scenario\r\n        return clientDocuments[user];\r\n    }\r\n\r\n    // Function to get document details by index for a specific client\r\n    function getDocumentDetails(address clientAddress, uint256 index) external view onlyDocumentOwnerOrAuthorized(clientAddress) returns (Document memory) {\r\n        require(index < clientDocuments[clientAddress].length, \"Invalid index\");\r\n        return clientDocuments[clientAddress][index];\r\n    }\r\n\r\n    // Function to access a document, emitting an event for traceability\r\n    function accessDocument(address InsuranceFirmAddress, uint256 index, string memory reason) external {\r\n        require(index < clientDocuments[InsuranceFirmAddress].length, \"Invalid index\");\r\n\r\n        Document storage document = clientDocuments[InsuranceFirmAddress][index];\r\n        bool success;\r\n        success = clientAccessRights[InsuranceFirmAddress][msg.sender] && documentAccessControl[InsuranceFirmAddress][index][msg.sender];\r\n        if (document.isValid) {\r\n            // Check if access is granted\r\n            require(success,\"Access not granted to view document\");\r\n                  // Add traceability information\r\n            uint256 traceIndex = document.traceabilityIndexes.length;\r\n            document.traceabilityIndexes.push(traceIndex);\r\n            documentTraceability[InsuranceFirmAddress][index].push(Traceability(msg.sender, block.timestamp, reason, success));\r\n\r\n            emit DocumentAccessed(msg.sender, InsuranceFirmAddress, block.timestamp, reason, document.documentHash, success);\r\n    \r\n        } else {\r\n            if(document.isValid){\r\n            documentTraceability[InsuranceFirmAddress][index].push(Traceability(msg.sender, block.timestamp, \"Document Fetched Not valid!\", success));\r\n            emit DocumentAccessed(msg.sender, InsuranceFirmAddress, block.timestamp, reason, \"Document Fetched Not valid!\", success);\r\n            }else{            \r\n            success = false;\r\n              uint256 traceIndex = document.traceabilityIndexes.length;\r\n            document.traceabilityIndexes.push(traceIndex);\r\n            documentTraceability[InsuranceFirmAddress][index].push(Traceability(msg.sender, block.timestamp, \"cLIENT Not allowed to Access!\", success));\r\n            emit DocumentAccessed(msg.sender, InsuranceFirmAddress, block.timestamp, reason, \"Cant Access Hash\", success);\r\n            }\r\n        }\r\n    }\r\n\r\n    // Function to get traceability for a document access attempts\r\n    function getDocumentTraceability(address InsuranceFirm, uint256 index) external view onlyBroker returns (Traceability[] memory) {\r\n        require(index < clientDocuments[InsuranceFirm].length, \"Invalid index\");\r\n        return documentTraceability[InsuranceFirm][index];\r\n    }\r\n\r\n    // Function to check if a client has access to a specific insurance company's documents\r\n    function hasAccessToInsurance(address insuranceCompany, address clientAddress) external view returns (bool) {\r\n        return clientAccessRights[insuranceCompany][clientAddress];\r\n    }\r\n}\r\n"}},"settings":{"optimizer":{"enabled":false,"runs":200},"outputSelection":{"*":{"*":["abi","evm.bytecode","evm.deployedBytecode","evm.methodIdentifiers","metadata"],"":["ast"]}}}},"output":{"sources":{"@openzeppelin/contracts/access/Ownable.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","exportedSymbols":{"Context":[142],"Ownable":[112]},"id":113,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"102:23:0"},{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","file":"../utils/Context.sol","id":2,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":113,"sourceUnit":143,"src":"127:30:0","symbolAliases":[],"unitAlias":""},{"abstract":true,"baseContracts":[{"baseName":{"id":4,"name":"Context","nameLocations":["683:7:0"],"nodeType":"IdentifierPath","referencedDeclaration":142,"src":"683:7:0"},"id":5,"nodeType":"InheritanceSpecifier","src":"683:7:0"}],"canonicalName":"Ownable","contractDependencies":[],"contractKind":"contract","documentation":{"id":3,"nodeType":"StructuredDocumentation","src":"159:494:0","text":" @dev Contract module which provides a basic access control mechanism, where\n there is an account (an owner) that can be granted exclusive access to\n specific functions.\n By default, the owner account will be the one that deploys the contract. This\n can later be changed with {transferOwnership}.\n This module is used through inheritance. It will make available the modifier\n `onlyOwner`, which can be applied to your functions to restrict their use to\n the owner."},"fullyImplemented":true,"id":112,"linearizedBaseContracts":[112,142],"name":"Ownable","nameLocation":"672:7:0","nodeType":"ContractDefinition","nodes":[{"constant":false,"id":7,"mutability":"mutable","name":"_owner","nameLocation":"713:6:0","nodeType":"VariableDeclaration","scope":112,"src":"697:22:0","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":6,"name":"address","nodeType":"ElementaryTypeName","src":"697:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"private"},{"anonymous":false,"eventSelector":"8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e0","id":13,"name":"OwnershipTransferred","nameLocation":"732:20:0","nodeType":"EventDefinition","parameters":{"id":12,"nodeType":"ParameterList","parameters":[{"constant":false,"id":9,"indexed":true,"mutability":"mutable","name":"previousOwner","nameLocation":"769:13:0","nodeType":"VariableDeclaration","scope":13,"src":"753:29:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":8,"name":"address","nodeType":"ElementaryTypeName","src":"753:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":11,"indexed":true,"mutability":"mutable","name":"newOwner","nameLocation":"800:8:0","nodeType":"VariableDeclaration","scope":13,"src":"784:24:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":10,"name":"address","nodeType":"ElementaryTypeName","src":"784:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"752:57:0"},"src":"726:84:0"},{"body":{"id":22,"nodeType":"Block","src":"926:49:0","statements":[{"expression":{"arguments":[{"arguments":[],"expression":{"argumentTypes":[],"id":18,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"955:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":19,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"955:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":17,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"936:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":20,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"936:32:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":21,"nodeType":"ExpressionStatement","src":"936:32:0"}]},"documentation":{"id":14,"nodeType":"StructuredDocumentation","src":"816:91:0","text":" @dev Initializes the contract setting the deployer as the initial owner."},"id":23,"implemented":true,"kind":"constructor","modifiers":[],"name":"","nameLocation":"-1:-1:-1","nodeType":"FunctionDefinition","parameters":{"id":15,"nodeType":"ParameterList","parameters":[],"src":"923:2:0"},"returnParameters":{"id":16,"nodeType":"ParameterList","parameters":[],"src":"926:0:0"},"scope":112,"src":"912:63:0","stateMutability":"nonpayable","virtual":false,"visibility":"internal"},{"body":{"id":30,"nodeType":"Block","src":"1084:41:0","statements":[{"expression":{"arguments":[],"expression":{"argumentTypes":[],"id":26,"name":"_checkOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":54,"src":"1094:11:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$__$","typeString":"function () view"}},"id":27,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1094:13:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":28,"nodeType":"ExpressionStatement","src":"1094:13:0"},{"id":29,"nodeType":"PlaceholderStatement","src":"1117:1:0"}]},"documentation":{"id":24,"nodeType":"StructuredDocumentation","src":"981:77:0","text":" @dev Throws if called by any account other than the owner."},"id":31,"name":"onlyOwner","nameLocation":"1072:9:0","nodeType":"ModifierDefinition","parameters":{"id":25,"nodeType":"ParameterList","parameters":[],"src":"1081:2:0"},"src":"1063:62:0","virtual":false,"visibility":"internal"},{"body":{"id":39,"nodeType":"Block","src":"1256:30:0","statements":[{"expression":{"id":37,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"1273:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":36,"id":38,"nodeType":"Return","src":"1266:13:0"}]},"documentation":{"id":32,"nodeType":"StructuredDocumentation","src":"1131:65:0","text":" @dev Returns the address of the current owner."},"functionSelector":"8da5cb5b","id":40,"implemented":true,"kind":"function","modifiers":[],"name":"owner","nameLocation":"1210:5:0","nodeType":"FunctionDefinition","parameters":{"id":33,"nodeType":"ParameterList","parameters":[],"src":"1215:2:0"},"returnParameters":{"id":36,"nodeType":"ParameterList","parameters":[{"constant":false,"id":35,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":40,"src":"1247:7:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":34,"name":"address","nodeType":"ElementaryTypeName","src":"1247:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"1246:9:0"},"scope":112,"src":"1201:85:0","stateMutability":"view","virtual":true,"visibility":"public"},{"body":{"id":53,"nodeType":"Block","src":"1404:85:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":49,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":45,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"1422:5:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":46,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1422:7:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":47,"name":"_msgSender","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":124,"src":"1433:10:0","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":48,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1433:12:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"1422:23:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","id":50,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1447:34:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""},"value":"Ownable: caller is not the owner"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","typeString":"literal_string \"Ownable: caller is not the owner\""}],"id":44,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1414:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":51,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1414:68:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":52,"nodeType":"ExpressionStatement","src":"1414:68:0"}]},"documentation":{"id":41,"nodeType":"StructuredDocumentation","src":"1292:62:0","text":" @dev Throws if the sender is not the owner."},"id":54,"implemented":true,"kind":"function","modifiers":[],"name":"_checkOwner","nameLocation":"1368:11:0","nodeType":"FunctionDefinition","parameters":{"id":42,"nodeType":"ParameterList","parameters":[],"src":"1379:2:0"},"returnParameters":{"id":43,"nodeType":"ParameterList","parameters":[],"src":"1404:0:0"},"scope":112,"src":"1359:130:0","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":67,"nodeType":"Block","src":"1878:47:0","statements":[{"expression":{"arguments":[{"arguments":[{"hexValue":"30","id":63,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"1915:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":62,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1907:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":61,"name":"address","nodeType":"ElementaryTypeName","src":"1907:7:0","typeDescriptions":{}}},"id":64,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1907:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":60,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"1888:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":65,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1888:30:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":66,"nodeType":"ExpressionStatement","src":"1888:30:0"}]},"documentation":{"id":55,"nodeType":"StructuredDocumentation","src":"1495:324:0","text":" @dev Leaves the contract without owner. It will not be possible to call\n `onlyOwner` functions. Can only be called by the current owner.\n NOTE: Renouncing ownership will leave the contract without an owner,\n thereby disabling any functionality that is only available to the owner."},"functionSelector":"715018a6","id":68,"implemented":true,"kind":"function","modifiers":[{"id":58,"kind":"modifierInvocation","modifierName":{"id":57,"name":"onlyOwner","nameLocations":["1868:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"1868:9:0"},"nodeType":"ModifierInvocation","src":"1868:9:0"}],"name":"renounceOwnership","nameLocation":"1833:17:0","nodeType":"FunctionDefinition","parameters":{"id":56,"nodeType":"ParameterList","parameters":[],"src":"1850:2:0"},"returnParameters":{"id":59,"nodeType":"ParameterList","parameters":[],"src":"1878:0:0"},"scope":112,"src":"1824:101:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":90,"nodeType":"Block","src":"2144:128:0","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":82,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":77,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2162:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"!=","rightExpression":{"arguments":[{"hexValue":"30","id":80,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"2182:1:0","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":79,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2174:7:0","typeDescriptions":{"typeIdentifier":"t_type$_t_address_$","typeString":"type(address)"},"typeName":{"id":78,"name":"address","nodeType":"ElementaryTypeName","src":"2174:7:0","typeDescriptions":{}}},"id":81,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2174:10:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2162:22:0","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061646472657373","id":83,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2186:40:0","typeDescriptions":{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""},"value":"Ownable: new owner is the zero address"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","typeString":"literal_string \"Ownable: new owner is the zero address\""}],"id":76,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2154:7:0","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":84,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2154:73:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":85,"nodeType":"ExpressionStatement","src":"2154:73:0"},{"expression":{"arguments":[{"id":87,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":71,"src":"2256:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"}],"id":86,"name":"_transferOwnership","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":111,"src":"2237:18:0","typeDescriptions":{"typeIdentifier":"t_function_internal_nonpayable$_t_address_$returns$__$","typeString":"function (address)"}},"id":88,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2237:28:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":89,"nodeType":"ExpressionStatement","src":"2237:28:0"}]},"documentation":{"id":69,"nodeType":"StructuredDocumentation","src":"1931:138:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Can only be called by the current owner."},"functionSelector":"f2fde38b","id":91,"implemented":true,"kind":"function","modifiers":[{"id":74,"kind":"modifierInvocation","modifierName":{"id":73,"name":"onlyOwner","nameLocations":["2134:9:0"],"nodeType":"IdentifierPath","referencedDeclaration":31,"src":"2134:9:0"},"nodeType":"ModifierInvocation","src":"2134:9:0"}],"name":"transferOwnership","nameLocation":"2083:17:0","nodeType":"FunctionDefinition","parameters":{"id":72,"nodeType":"ParameterList","parameters":[{"constant":false,"id":71,"mutability":"mutable","name":"newOwner","nameLocation":"2109:8:0","nodeType":"VariableDeclaration","scope":91,"src":"2101:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":70,"name":"address","nodeType":"ElementaryTypeName","src":"2101:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2100:18:0"},"returnParameters":{"id":75,"nodeType":"ParameterList","parameters":[],"src":"2144:0:0"},"scope":112,"src":"2074:198:0","stateMutability":"nonpayable","virtual":true,"visibility":"public"},{"body":{"id":110,"nodeType":"Block","src":"2489:124:0","statements":[{"assignments":[98],"declarations":[{"constant":false,"id":98,"mutability":"mutable","name":"oldOwner","nameLocation":"2507:8:0","nodeType":"VariableDeclaration","scope":110,"src":"2499:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":97,"name":"address","nodeType":"ElementaryTypeName","src":"2499:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"id":100,"initialValue":{"id":99,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2518:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"VariableDeclarationStatement","src":"2499:25:0"},{"expression":{"id":103,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":101,"name":"_owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":7,"src":"2534:6:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":102,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2543:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2534:17:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"id":104,"nodeType":"ExpressionStatement","src":"2534:17:0"},{"eventCall":{"arguments":[{"id":106,"name":"oldOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":98,"src":"2587:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":107,"name":"newOwner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":94,"src":"2597:8:0","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"}],"id":105,"name":"OwnershipTransferred","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":13,"src":"2566:20:0","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$returns$__$","typeString":"function (address,address)"}},"id":108,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2566:40:0","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":109,"nodeType":"EmitStatement","src":"2561:45:0"}]},"documentation":{"id":92,"nodeType":"StructuredDocumentation","src":"2278:143:0","text":" @dev Transfers ownership of the contract to a new account (`newOwner`).\n Internal function without access restriction."},"id":111,"implemented":true,"kind":"function","modifiers":[],"name":"_transferOwnership","nameLocation":"2435:18:0","nodeType":"FunctionDefinition","parameters":{"id":95,"nodeType":"ParameterList","parameters":[{"constant":false,"id":94,"mutability":"mutable","name":"newOwner","nameLocation":"2462:8:0","nodeType":"VariableDeclaration","scope":111,"src":"2454:16:0","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":93,"name":"address","nodeType":"ElementaryTypeName","src":"2454:7:0","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2453:18:0"},"returnParameters":{"id":96,"nodeType":"ParameterList","parameters":[],"src":"2489:0:0"},"scope":112,"src":"2426:187:0","stateMutability":"nonpayable","virtual":true,"visibility":"internal"}],"scope":113,"src":"654:1961:0","usedErrors":[]}],"src":"102:2514:0"},"id":0},"@openzeppelin/contracts/utils/Context.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/Context.sol","exportedSymbols":{"Context":[142]},"id":143,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":114,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"101:23:1"},{"abstract":true,"baseContracts":[],"canonicalName":"Context","contractDependencies":[],"contractKind":"contract","documentation":{"id":115,"nodeType":"StructuredDocumentation","src":"126:496:1","text":" @dev Provides information about the current execution context, including the\n sender of the transaction and its data. While these are generally available\n via msg.sender and msg.data, they should not be accessed in such a direct\n manner, since when dealing with meta-transactions the account sending and\n paying for execution may not be the actual sender (as far as an application\n is concerned).\n This contract is only required for intermediate, library-like contracts."},"fullyImplemented":true,"id":142,"linearizedBaseContracts":[142],"name":"Context","nameLocation":"641:7:1","nodeType":"ContractDefinition","nodes":[{"body":{"id":123,"nodeType":"Block","src":"717:34:1","statements":[{"expression":{"expression":{"id":120,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"734:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":121,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"738:6:1","memberName":"sender","nodeType":"MemberAccess","src":"734:10:1","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"functionReturnParameters":119,"id":122,"nodeType":"Return","src":"727:17:1"}]},"id":124,"implemented":true,"kind":"function","modifiers":[],"name":"_msgSender","nameLocation":"664:10:1","nodeType":"FunctionDefinition","parameters":{"id":116,"nodeType":"ParameterList","parameters":[],"src":"674:2:1"},"returnParameters":{"id":119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":118,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":124,"src":"708:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":117,"name":"address","nodeType":"ElementaryTypeName","src":"708:7:1","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"707:9:1"},"scope":142,"src":"655:96:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":132,"nodeType":"Block","src":"824:32:1","statements":[{"expression":{"expression":{"id":129,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"841:3:1","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":130,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"845:4:1","memberName":"data","nodeType":"MemberAccess","src":"841:8:1","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes calldata"}},"functionReturnParameters":128,"id":131,"nodeType":"Return","src":"834:15:1"}]},"id":133,"implemented":true,"kind":"function","modifiers":[],"name":"_msgData","nameLocation":"766:8:1","nodeType":"FunctionDefinition","parameters":{"id":125,"nodeType":"ParameterList","parameters":[],"src":"774:2:1"},"returnParameters":{"id":128,"nodeType":"ParameterList","parameters":[{"constant":false,"id":127,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":133,"src":"808:14:1","stateVariable":false,"storageLocation":"calldata","typeDescriptions":{"typeIdentifier":"t_bytes_calldata_ptr","typeString":"bytes"},"typeName":{"id":126,"name":"bytes","nodeType":"ElementaryTypeName","src":"808:5:1","typeDescriptions":{"typeIdentifier":"t_bytes_storage_ptr","typeString":"bytes"}},"visibility":"internal"}],"src":"807:16:1"},"scope":142,"src":"757:99:1","stateMutability":"view","virtual":true,"visibility":"internal"},{"body":{"id":140,"nodeType":"Block","src":"934:25:1","statements":[{"expression":{"hexValue":"30","id":138,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"951:1:1","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"functionReturnParameters":137,"id":139,"nodeType":"Return","src":"944:8:1"}]},"id":141,"implemented":true,"kind":"function","modifiers":[],"name":"_contextSuffixLength","nameLocation":"871:20:1","nodeType":"FunctionDefinition","parameters":{"id":134,"nodeType":"ParameterList","parameters":[],"src":"891:2:1"},"returnParameters":{"id":137,"nodeType":"ParameterList","parameters":[{"constant":false,"id":136,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":141,"src":"925:7:1","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":135,"name":"uint256","nodeType":"ElementaryTypeName","src":"925:7:1","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"924:9:1"},"scope":142,"src":"862:97:1","stateMutability":"view","virtual":true,"visibility":"internal"}],"scope":143,"src":"623:338:1","usedErrors":[]}],"src":"101:861:1"},"id":1},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"ast":{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","exportedSymbols":{"SafeCast":[1683]},"id":1684,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":144,"literals":["solidity","^","0.8",".0"],"nodeType":"PragmaDirective","src":"192:23:2"},{"abstract":false,"baseContracts":[],"canonicalName":"SafeCast","contractDependencies":[],"contractKind":"library","documentation":{"id":145,"nodeType":"StructuredDocumentation","src":"217:709:2","text":" @dev Wrappers over Solidity's uintXX/intXX casting operators with added overflow\n checks.\n Downcasting from uint256/int256 in Solidity does not revert on overflow. This can\n easily result in undesired exploitation or bugs, since developers usually\n assume that overflows raise errors. `SafeCast` restores this intuition by\n reverting the transaction when such an operation overflows.\n Using this library instead of the unchecked operations eliminates an entire\n class of bugs, so it's recommended to use it always.\n Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing\n all math on `uint256` and `int256` and then downcasting."},"fullyImplemented":true,"id":1683,"linearizedBaseContracts":[1683],"name":"SafeCast","nameLocation":"935:8:2","nodeType":"ContractDefinition","nodes":[{"body":{"id":169,"nodeType":"Block","src":"1339:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":160,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":154,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1357:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":157,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1371:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":156,"name":"uint248","nodeType":"ElementaryTypeName","src":"1371:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"}],"id":155,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1366:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":158,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1366:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint248","typeString":"type(uint248)"}},"id":159,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1380:3:2","memberName":"max","nodeType":"MemberAccess","src":"1366:17:2","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"src":"1357:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":161,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1385:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":153,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1349:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":162,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1349:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":163,"nodeType":"ExpressionStatement","src":"1349:78:2"},{"expression":{"arguments":[{"id":166,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":148,"src":"1452:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":165,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1444:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint248_$","typeString":"type(uint248)"},"typeName":{"id":164,"name":"uint248","nodeType":"ElementaryTypeName","src":"1444:7:2","typeDescriptions":{}}},"id":167,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1444:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"functionReturnParameters":152,"id":168,"nodeType":"Return","src":"1437:21:2"}]},"documentation":{"id":146,"nodeType":"StructuredDocumentation","src":"950:318:2","text":" @dev Returns the downcasted uint248 from uint256, reverting on\n overflow (when the input is greater than largest uint248).\n Counterpart to Solidity's `uint248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":170,"implemented":true,"kind":"function","modifiers":[],"name":"toUint248","nameLocation":"1282:9:2","nodeType":"FunctionDefinition","parameters":{"id":149,"nodeType":"ParameterList","parameters":[{"constant":false,"id":148,"mutability":"mutable","name":"value","nameLocation":"1300:5:2","nodeType":"VariableDeclaration","scope":170,"src":"1292:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":147,"name":"uint256","nodeType":"ElementaryTypeName","src":"1292:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1291:15:2"},"returnParameters":{"id":152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":151,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":170,"src":"1330:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"},"typeName":{"id":150,"name":"uint248","nodeType":"ElementaryTypeName","src":"1330:7:2","typeDescriptions":{"typeIdentifier":"t_uint248","typeString":"uint248"}},"visibility":"internal"}],"src":"1329:9:2"},"scope":1683,"src":"1273:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":194,"nodeType":"Block","src":"1860:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":185,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":179,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1878:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":182,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1892:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":181,"name":"uint240","nodeType":"ElementaryTypeName","src":"1892:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"}],"id":180,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"1887:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":183,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1887:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint240","typeString":"type(uint240)"}},"id":184,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"1901:3:2","memberName":"max","nodeType":"MemberAccess","src":"1887:17:2","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"src":"1878:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":186,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"1906:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":178,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"1870:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":187,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1870:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":188,"nodeType":"ExpressionStatement","src":"1870:78:2"},{"expression":{"arguments":[{"id":191,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":173,"src":"1973:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":190,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"1965:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint240_$","typeString":"type(uint240)"},"typeName":{"id":189,"name":"uint240","nodeType":"ElementaryTypeName","src":"1965:7:2","typeDescriptions":{}}},"id":192,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"1965:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"functionReturnParameters":177,"id":193,"nodeType":"Return","src":"1958:21:2"}]},"documentation":{"id":171,"nodeType":"StructuredDocumentation","src":"1471:318:2","text":" @dev Returns the downcasted uint240 from uint256, reverting on\n overflow (when the input is greater than largest uint240).\n Counterpart to Solidity's `uint240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":195,"implemented":true,"kind":"function","modifiers":[],"name":"toUint240","nameLocation":"1803:9:2","nodeType":"FunctionDefinition","parameters":{"id":174,"nodeType":"ParameterList","parameters":[{"constant":false,"id":173,"mutability":"mutable","name":"value","nameLocation":"1821:5:2","nodeType":"VariableDeclaration","scope":195,"src":"1813:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":172,"name":"uint256","nodeType":"ElementaryTypeName","src":"1813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"1812:15:2"},"returnParameters":{"id":177,"nodeType":"ParameterList","parameters":[{"constant":false,"id":176,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":195,"src":"1851:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"},"typeName":{"id":175,"name":"uint240","nodeType":"ElementaryTypeName","src":"1851:7:2","typeDescriptions":{"typeIdentifier":"t_uint240","typeString":"uint240"}},"visibility":"internal"}],"src":"1850:9:2"},"scope":1683,"src":"1794:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":219,"nodeType":"Block","src":"2381:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":210,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":204,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2399:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":207,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2413:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":206,"name":"uint232","nodeType":"ElementaryTypeName","src":"2413:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"}],"id":205,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2408:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":208,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2408:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint232","typeString":"type(uint232)"}},"id":209,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2422:3:2","memberName":"max","nodeType":"MemberAccess","src":"2408:17:2","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"src":"2399:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":211,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2427:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2391:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":212,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2391:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":213,"nodeType":"ExpressionStatement","src":"2391:78:2"},{"expression":{"arguments":[{"id":216,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":198,"src":"2494:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":215,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2486:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint232_$","typeString":"type(uint232)"},"typeName":{"id":214,"name":"uint232","nodeType":"ElementaryTypeName","src":"2486:7:2","typeDescriptions":{}}},"id":217,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2486:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"functionReturnParameters":202,"id":218,"nodeType":"Return","src":"2479:21:2"}]},"documentation":{"id":196,"nodeType":"StructuredDocumentation","src":"1992:318:2","text":" @dev Returns the downcasted uint232 from uint256, reverting on\n overflow (when the input is greater than largest uint232).\n Counterpart to Solidity's `uint232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":220,"implemented":true,"kind":"function","modifiers":[],"name":"toUint232","nameLocation":"2324:9:2","nodeType":"FunctionDefinition","parameters":{"id":199,"nodeType":"ParameterList","parameters":[{"constant":false,"id":198,"mutability":"mutable","name":"value","nameLocation":"2342:5:2","nodeType":"VariableDeclaration","scope":220,"src":"2334:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":197,"name":"uint256","nodeType":"ElementaryTypeName","src":"2334:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2333:15:2"},"returnParameters":{"id":202,"nodeType":"ParameterList","parameters":[{"constant":false,"id":201,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":220,"src":"2372:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"},"typeName":{"id":200,"name":"uint232","nodeType":"ElementaryTypeName","src":"2372:7:2","typeDescriptions":{"typeIdentifier":"t_uint232","typeString":"uint232"}},"visibility":"internal"}],"src":"2371:9:2"},"scope":1683,"src":"2315:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":244,"nodeType":"Block","src":"2902:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":229,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"2920:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":232,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"2934:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":231,"name":"uint224","nodeType":"ElementaryTypeName","src":"2934:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"}],"id":230,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"2929:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":233,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2929:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint224","typeString":"type(uint224)"}},"id":234,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"2943:3:2","memberName":"max","nodeType":"MemberAccess","src":"2929:17:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"src":"2920:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2948:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":228,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2912:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2912:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":238,"nodeType":"ExpressionStatement","src":"2912:78:2"},{"expression":{"arguments":[{"id":241,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":223,"src":"3015:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":240,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3007:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint224_$","typeString":"type(uint224)"},"typeName":{"id":239,"name":"uint224","nodeType":"ElementaryTypeName","src":"3007:7:2","typeDescriptions":{}}},"id":242,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3007:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"functionReturnParameters":227,"id":243,"nodeType":"Return","src":"3000:21:2"}]},"documentation":{"id":221,"nodeType":"StructuredDocumentation","src":"2513:318:2","text":" @dev Returns the downcasted uint224 from uint256, reverting on\n overflow (when the input is greater than largest uint224).\n Counterpart to Solidity's `uint224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.2._"},"id":245,"implemented":true,"kind":"function","modifiers":[],"name":"toUint224","nameLocation":"2845:9:2","nodeType":"FunctionDefinition","parameters":{"id":224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":223,"mutability":"mutable","name":"value","nameLocation":"2863:5:2","nodeType":"VariableDeclaration","scope":245,"src":"2855:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":222,"name":"uint256","nodeType":"ElementaryTypeName","src":"2855:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2854:15:2"},"returnParameters":{"id":227,"nodeType":"ParameterList","parameters":[{"constant":false,"id":226,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":245,"src":"2893:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"},"typeName":{"id":225,"name":"uint224","nodeType":"ElementaryTypeName","src":"2893:7:2","typeDescriptions":{"typeIdentifier":"t_uint224","typeString":"uint224"}},"visibility":"internal"}],"src":"2892:9:2"},"scope":1683,"src":"2836:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":269,"nodeType":"Block","src":"3423:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":254,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3441:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":257,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3455:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":256,"name":"uint216","nodeType":"ElementaryTypeName","src":"3455:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"}],"id":255,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3450:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":258,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3450:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint216","typeString":"type(uint216)"}},"id":259,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3464:3:2","memberName":"max","nodeType":"MemberAccess","src":"3450:17:2","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"src":"3441:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":261,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3469:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":253,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3433:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3433:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":263,"nodeType":"ExpressionStatement","src":"3433:78:2"},{"expression":{"arguments":[{"id":266,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":248,"src":"3536:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":265,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3528:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint216_$","typeString":"type(uint216)"},"typeName":{"id":264,"name":"uint216","nodeType":"ElementaryTypeName","src":"3528:7:2","typeDescriptions":{}}},"id":267,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3528:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"functionReturnParameters":252,"id":268,"nodeType":"Return","src":"3521:21:2"}]},"documentation":{"id":246,"nodeType":"StructuredDocumentation","src":"3034:318:2","text":" @dev Returns the downcasted uint216 from uint256, reverting on\n overflow (when the input is greater than largest uint216).\n Counterpart to Solidity's `uint216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":270,"implemented":true,"kind":"function","modifiers":[],"name":"toUint216","nameLocation":"3366:9:2","nodeType":"FunctionDefinition","parameters":{"id":249,"nodeType":"ParameterList","parameters":[{"constant":false,"id":248,"mutability":"mutable","name":"value","nameLocation":"3384:5:2","nodeType":"VariableDeclaration","scope":270,"src":"3376:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":247,"name":"uint256","nodeType":"ElementaryTypeName","src":"3376:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3375:15:2"},"returnParameters":{"id":252,"nodeType":"ParameterList","parameters":[{"constant":false,"id":251,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":270,"src":"3414:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"},"typeName":{"id":250,"name":"uint216","nodeType":"ElementaryTypeName","src":"3414:7:2","typeDescriptions":{"typeIdentifier":"t_uint216","typeString":"uint216"}},"visibility":"internal"}],"src":"3413:9:2"},"scope":1683,"src":"3357:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":294,"nodeType":"Block","src":"3944:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":279,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"3962:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":282,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"3976:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":281,"name":"uint208","nodeType":"ElementaryTypeName","src":"3976:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"}],"id":280,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"3971:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":283,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3971:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint208","typeString":"type(uint208)"}},"id":284,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"3985:3:2","memberName":"max","nodeType":"MemberAccess","src":"3971:17:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"src":"3962:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":286,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3990:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"3954:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":287,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3954:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":288,"nodeType":"ExpressionStatement","src":"3954:78:2"},{"expression":{"arguments":[{"id":291,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":273,"src":"4057:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":290,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4049:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint208_$","typeString":"type(uint208)"},"typeName":{"id":289,"name":"uint208","nodeType":"ElementaryTypeName","src":"4049:7:2","typeDescriptions":{}}},"id":292,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4049:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"functionReturnParameters":277,"id":293,"nodeType":"Return","src":"4042:21:2"}]},"documentation":{"id":271,"nodeType":"StructuredDocumentation","src":"3555:318:2","text":" @dev Returns the downcasted uint208 from uint256, reverting on\n overflow (when the input is greater than largest uint208).\n Counterpart to Solidity's `uint208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":295,"implemented":true,"kind":"function","modifiers":[],"name":"toUint208","nameLocation":"3887:9:2","nodeType":"FunctionDefinition","parameters":{"id":274,"nodeType":"ParameterList","parameters":[{"constant":false,"id":273,"mutability":"mutable","name":"value","nameLocation":"3905:5:2","nodeType":"VariableDeclaration","scope":295,"src":"3897:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":272,"name":"uint256","nodeType":"ElementaryTypeName","src":"3897:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"3896:15:2"},"returnParameters":{"id":277,"nodeType":"ParameterList","parameters":[{"constant":false,"id":276,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":295,"src":"3935:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"},"typeName":{"id":275,"name":"uint208","nodeType":"ElementaryTypeName","src":"3935:7:2","typeDescriptions":{"typeIdentifier":"t_uint208","typeString":"uint208"}},"visibility":"internal"}],"src":"3934:9:2"},"scope":1683,"src":"3878:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":319,"nodeType":"Block","src":"4465:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":310,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":304,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"4483:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":307,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4497:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":306,"name":"uint200","nodeType":"ElementaryTypeName","src":"4497:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"}],"id":305,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"4492:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":308,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4492:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint200","typeString":"type(uint200)"}},"id":309,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"4506:3:2","memberName":"max","nodeType":"MemberAccess","src":"4492:17:2","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"src":"4483:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":311,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4511:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":303,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4475:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":312,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4475:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":313,"nodeType":"ExpressionStatement","src":"4475:78:2"},{"expression":{"arguments":[{"id":316,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":298,"src":"4578:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":315,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"4570:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint200_$","typeString":"type(uint200)"},"typeName":{"id":314,"name":"uint200","nodeType":"ElementaryTypeName","src":"4570:7:2","typeDescriptions":{}}},"id":317,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4570:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"functionReturnParameters":302,"id":318,"nodeType":"Return","src":"4563:21:2"}]},"documentation":{"id":296,"nodeType":"StructuredDocumentation","src":"4076:318:2","text":" @dev Returns the downcasted uint200 from uint256, reverting on\n overflow (when the input is greater than largest uint200).\n Counterpart to Solidity's `uint200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":320,"implemented":true,"kind":"function","modifiers":[],"name":"toUint200","nameLocation":"4408:9:2","nodeType":"FunctionDefinition","parameters":{"id":299,"nodeType":"ParameterList","parameters":[{"constant":false,"id":298,"mutability":"mutable","name":"value","nameLocation":"4426:5:2","nodeType":"VariableDeclaration","scope":320,"src":"4418:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":297,"name":"uint256","nodeType":"ElementaryTypeName","src":"4418:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4417:15:2"},"returnParameters":{"id":302,"nodeType":"ParameterList","parameters":[{"constant":false,"id":301,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":320,"src":"4456:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"},"typeName":{"id":300,"name":"uint200","nodeType":"ElementaryTypeName","src":"4456:7:2","typeDescriptions":{"typeIdentifier":"t_uint200","typeString":"uint200"}},"visibility":"internal"}],"src":"4455:9:2"},"scope":1683,"src":"4399:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":344,"nodeType":"Block","src":"4986:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":335,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":329,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5004:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":332,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5018:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":331,"name":"uint192","nodeType":"ElementaryTypeName","src":"5018:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"}],"id":330,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5013:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":333,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5013:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint192","typeString":"type(uint192)"}},"id":334,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5027:3:2","memberName":"max","nodeType":"MemberAccess","src":"5013:17:2","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"src":"5004:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":336,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5032:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":328,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4996:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":337,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4996:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":338,"nodeType":"ExpressionStatement","src":"4996:78:2"},{"expression":{"arguments":[{"id":341,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":323,"src":"5099:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":340,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5091:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint192_$","typeString":"type(uint192)"},"typeName":{"id":339,"name":"uint192","nodeType":"ElementaryTypeName","src":"5091:7:2","typeDescriptions":{}}},"id":342,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5091:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"functionReturnParameters":327,"id":343,"nodeType":"Return","src":"5084:21:2"}]},"documentation":{"id":321,"nodeType":"StructuredDocumentation","src":"4597:318:2","text":" @dev Returns the downcasted uint192 from uint256, reverting on\n overflow (when the input is greater than largest uint192).\n Counterpart to Solidity's `uint192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":345,"implemented":true,"kind":"function","modifiers":[],"name":"toUint192","nameLocation":"4929:9:2","nodeType":"FunctionDefinition","parameters":{"id":324,"nodeType":"ParameterList","parameters":[{"constant":false,"id":323,"mutability":"mutable","name":"value","nameLocation":"4947:5:2","nodeType":"VariableDeclaration","scope":345,"src":"4939:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":322,"name":"uint256","nodeType":"ElementaryTypeName","src":"4939:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"4938:15:2"},"returnParameters":{"id":327,"nodeType":"ParameterList","parameters":[{"constant":false,"id":326,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":345,"src":"4977:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"},"typeName":{"id":325,"name":"uint192","nodeType":"ElementaryTypeName","src":"4977:7:2","typeDescriptions":{"typeIdentifier":"t_uint192","typeString":"uint192"}},"visibility":"internal"}],"src":"4976:9:2"},"scope":1683,"src":"4920:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":369,"nodeType":"Block","src":"5507:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":360,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":354,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"5525:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":357,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5539:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":356,"name":"uint184","nodeType":"ElementaryTypeName","src":"5539:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"}],"id":355,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"5534:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":358,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5534:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint184","typeString":"type(uint184)"}},"id":359,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"5548:3:2","memberName":"max","nodeType":"MemberAccess","src":"5534:17:2","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"src":"5525:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":361,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5553:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":353,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5517:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":362,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5517:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":363,"nodeType":"ExpressionStatement","src":"5517:78:2"},{"expression":{"arguments":[{"id":366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":348,"src":"5620:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"5612:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint184_$","typeString":"type(uint184)"},"typeName":{"id":364,"name":"uint184","nodeType":"ElementaryTypeName","src":"5612:7:2","typeDescriptions":{}}},"id":367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5612:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"functionReturnParameters":352,"id":368,"nodeType":"Return","src":"5605:21:2"}]},"documentation":{"id":346,"nodeType":"StructuredDocumentation","src":"5118:318:2","text":" @dev Returns the downcasted uint184 from uint256, reverting on\n overflow (when the input is greater than largest uint184).\n Counterpart to Solidity's `uint184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":370,"implemented":true,"kind":"function","modifiers":[],"name":"toUint184","nameLocation":"5450:9:2","nodeType":"FunctionDefinition","parameters":{"id":349,"nodeType":"ParameterList","parameters":[{"constant":false,"id":348,"mutability":"mutable","name":"value","nameLocation":"5468:5:2","nodeType":"VariableDeclaration","scope":370,"src":"5460:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":347,"name":"uint256","nodeType":"ElementaryTypeName","src":"5460:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5459:15:2"},"returnParameters":{"id":352,"nodeType":"ParameterList","parameters":[{"constant":false,"id":351,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":370,"src":"5498:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"},"typeName":{"id":350,"name":"uint184","nodeType":"ElementaryTypeName","src":"5498:7:2","typeDescriptions":{"typeIdentifier":"t_uint184","typeString":"uint184"}},"visibility":"internal"}],"src":"5497:9:2"},"scope":1683,"src":"5441:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":394,"nodeType":"Block","src":"6028:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":385,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":379,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"6046:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":382,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6060:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":381,"name":"uint176","nodeType":"ElementaryTypeName","src":"6060:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"}],"id":380,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6055:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":383,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6055:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint176","typeString":"type(uint176)"}},"id":384,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6069:3:2","memberName":"max","nodeType":"MemberAccess","src":"6055:17:2","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"src":"6046:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":386,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6074:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":378,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6038:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":387,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6038:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":388,"nodeType":"ExpressionStatement","src":"6038:78:2"},{"expression":{"arguments":[{"id":391,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":373,"src":"6141:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":390,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6133:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint176_$","typeString":"type(uint176)"},"typeName":{"id":389,"name":"uint176","nodeType":"ElementaryTypeName","src":"6133:7:2","typeDescriptions":{}}},"id":392,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6133:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"functionReturnParameters":377,"id":393,"nodeType":"Return","src":"6126:21:2"}]},"documentation":{"id":371,"nodeType":"StructuredDocumentation","src":"5639:318:2","text":" @dev Returns the downcasted uint176 from uint256, reverting on\n overflow (when the input is greater than largest uint176).\n Counterpart to Solidity's `uint176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":395,"implemented":true,"kind":"function","modifiers":[],"name":"toUint176","nameLocation":"5971:9:2","nodeType":"FunctionDefinition","parameters":{"id":374,"nodeType":"ParameterList","parameters":[{"constant":false,"id":373,"mutability":"mutable","name":"value","nameLocation":"5989:5:2","nodeType":"VariableDeclaration","scope":395,"src":"5981:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":372,"name":"uint256","nodeType":"ElementaryTypeName","src":"5981:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"5980:15:2"},"returnParameters":{"id":377,"nodeType":"ParameterList","parameters":[{"constant":false,"id":376,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":395,"src":"6019:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"},"typeName":{"id":375,"name":"uint176","nodeType":"ElementaryTypeName","src":"6019:7:2","typeDescriptions":{"typeIdentifier":"t_uint176","typeString":"uint176"}},"visibility":"internal"}],"src":"6018:9:2"},"scope":1683,"src":"5962:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":419,"nodeType":"Block","src":"6549:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":410,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":404,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6567:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":407,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6581:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":406,"name":"uint168","nodeType":"ElementaryTypeName","src":"6581:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"}],"id":405,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"6576:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":408,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6576:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint168","typeString":"type(uint168)"}},"id":409,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"6590:3:2","memberName":"max","nodeType":"MemberAccess","src":"6576:17:2","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"src":"6567:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":411,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6595:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":403,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6559:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":412,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6559:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":413,"nodeType":"ExpressionStatement","src":"6559:78:2"},{"expression":{"arguments":[{"id":416,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":398,"src":"6662:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":415,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"6654:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint168_$","typeString":"type(uint168)"},"typeName":{"id":414,"name":"uint168","nodeType":"ElementaryTypeName","src":"6654:7:2","typeDescriptions":{}}},"id":417,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6654:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"functionReturnParameters":402,"id":418,"nodeType":"Return","src":"6647:21:2"}]},"documentation":{"id":396,"nodeType":"StructuredDocumentation","src":"6160:318:2","text":" @dev Returns the downcasted uint168 from uint256, reverting on\n overflow (when the input is greater than largest uint168).\n Counterpart to Solidity's `uint168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":420,"implemented":true,"kind":"function","modifiers":[],"name":"toUint168","nameLocation":"6492:9:2","nodeType":"FunctionDefinition","parameters":{"id":399,"nodeType":"ParameterList","parameters":[{"constant":false,"id":398,"mutability":"mutable","name":"value","nameLocation":"6510:5:2","nodeType":"VariableDeclaration","scope":420,"src":"6502:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":397,"name":"uint256","nodeType":"ElementaryTypeName","src":"6502:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6501:15:2"},"returnParameters":{"id":402,"nodeType":"ParameterList","parameters":[{"constant":false,"id":401,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":420,"src":"6540:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"},"typeName":{"id":400,"name":"uint168","nodeType":"ElementaryTypeName","src":"6540:7:2","typeDescriptions":{"typeIdentifier":"t_uint168","typeString":"uint168"}},"visibility":"internal"}],"src":"6539:9:2"},"scope":1683,"src":"6483:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":444,"nodeType":"Block","src":"7070:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":435,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":429,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"7088:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":432,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7102:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":431,"name":"uint160","nodeType":"ElementaryTypeName","src":"7102:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"}],"id":430,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7097:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":433,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7097:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint160","typeString":"type(uint160)"}},"id":434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7111:3:2","memberName":"max","nodeType":"MemberAccess","src":"7097:17:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"src":"7088:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":436,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7116:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":428,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7080:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":437,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7080:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":438,"nodeType":"ExpressionStatement","src":"7080:78:2"},{"expression":{"arguments":[{"id":441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":423,"src":"7183:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":440,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7175:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint160_$","typeString":"type(uint160)"},"typeName":{"id":439,"name":"uint160","nodeType":"ElementaryTypeName","src":"7175:7:2","typeDescriptions":{}}},"id":442,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7175:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"functionReturnParameters":427,"id":443,"nodeType":"Return","src":"7168:21:2"}]},"documentation":{"id":421,"nodeType":"StructuredDocumentation","src":"6681:318:2","text":" @dev Returns the downcasted uint160 from uint256, reverting on\n overflow (when the input is greater than largest uint160).\n Counterpart to Solidity's `uint160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":445,"implemented":true,"kind":"function","modifiers":[],"name":"toUint160","nameLocation":"7013:9:2","nodeType":"FunctionDefinition","parameters":{"id":424,"nodeType":"ParameterList","parameters":[{"constant":false,"id":423,"mutability":"mutable","name":"value","nameLocation":"7031:5:2","nodeType":"VariableDeclaration","scope":445,"src":"7023:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":422,"name":"uint256","nodeType":"ElementaryTypeName","src":"7023:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7022:15:2"},"returnParameters":{"id":427,"nodeType":"ParameterList","parameters":[{"constant":false,"id":426,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":445,"src":"7061:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"},"typeName":{"id":425,"name":"uint160","nodeType":"ElementaryTypeName","src":"7061:7:2","typeDescriptions":{"typeIdentifier":"t_uint160","typeString":"uint160"}},"visibility":"internal"}],"src":"7060:9:2"},"scope":1683,"src":"7004:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":469,"nodeType":"Block","src":"7591:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":454,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7609:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7623:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":456,"name":"uint152","nodeType":"ElementaryTypeName","src":"7623:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"}],"id":455,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"7618:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":458,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7618:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint152","typeString":"type(uint152)"}},"id":459,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"7632:3:2","memberName":"max","nodeType":"MemberAccess","src":"7618:17:2","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"src":"7609:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":461,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7637:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":453,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7601:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":462,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7601:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":463,"nodeType":"ExpressionStatement","src":"7601:78:2"},{"expression":{"arguments":[{"id":466,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":448,"src":"7704:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":465,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"7696:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint152_$","typeString":"type(uint152)"},"typeName":{"id":464,"name":"uint152","nodeType":"ElementaryTypeName","src":"7696:7:2","typeDescriptions":{}}},"id":467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7696:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"functionReturnParameters":452,"id":468,"nodeType":"Return","src":"7689:21:2"}]},"documentation":{"id":446,"nodeType":"StructuredDocumentation","src":"7202:318:2","text":" @dev Returns the downcasted uint152 from uint256, reverting on\n overflow (when the input is greater than largest uint152).\n Counterpart to Solidity's `uint152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":470,"implemented":true,"kind":"function","modifiers":[],"name":"toUint152","nameLocation":"7534:9:2","nodeType":"FunctionDefinition","parameters":{"id":449,"nodeType":"ParameterList","parameters":[{"constant":false,"id":448,"mutability":"mutable","name":"value","nameLocation":"7552:5:2","nodeType":"VariableDeclaration","scope":470,"src":"7544:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":447,"name":"uint256","nodeType":"ElementaryTypeName","src":"7544:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7543:15:2"},"returnParameters":{"id":452,"nodeType":"ParameterList","parameters":[{"constant":false,"id":451,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":470,"src":"7582:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"},"typeName":{"id":450,"name":"uint152","nodeType":"ElementaryTypeName","src":"7582:7:2","typeDescriptions":{"typeIdentifier":"t_uint152","typeString":"uint152"}},"visibility":"internal"}],"src":"7581:9:2"},"scope":1683,"src":"7525:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":494,"nodeType":"Block","src":"8112:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":485,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":479,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8130:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":482,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8144:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":481,"name":"uint144","nodeType":"ElementaryTypeName","src":"8144:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"}],"id":480,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8139:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":483,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8139:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint144","typeString":"type(uint144)"}},"id":484,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8153:3:2","memberName":"max","nodeType":"MemberAccess","src":"8139:17:2","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"src":"8130:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":486,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8158:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":478,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8122:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":487,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8122:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":488,"nodeType":"ExpressionStatement","src":"8122:78:2"},{"expression":{"arguments":[{"id":491,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":473,"src":"8225:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":490,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8217:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint144_$","typeString":"type(uint144)"},"typeName":{"id":489,"name":"uint144","nodeType":"ElementaryTypeName","src":"8217:7:2","typeDescriptions":{}}},"id":492,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8217:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"functionReturnParameters":477,"id":493,"nodeType":"Return","src":"8210:21:2"}]},"documentation":{"id":471,"nodeType":"StructuredDocumentation","src":"7723:318:2","text":" @dev Returns the downcasted uint144 from uint256, reverting on\n overflow (when the input is greater than largest uint144).\n Counterpart to Solidity's `uint144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":495,"implemented":true,"kind":"function","modifiers":[],"name":"toUint144","nameLocation":"8055:9:2","nodeType":"FunctionDefinition","parameters":{"id":474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":473,"mutability":"mutable","name":"value","nameLocation":"8073:5:2","nodeType":"VariableDeclaration","scope":495,"src":"8065:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":472,"name":"uint256","nodeType":"ElementaryTypeName","src":"8065:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8064:15:2"},"returnParameters":{"id":477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":476,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":495,"src":"8103:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"},"typeName":{"id":475,"name":"uint144","nodeType":"ElementaryTypeName","src":"8103:7:2","typeDescriptions":{"typeIdentifier":"t_uint144","typeString":"uint144"}},"visibility":"internal"}],"src":"8102:9:2"},"scope":1683,"src":"8046:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":519,"nodeType":"Block","src":"8633:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":510,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"8651:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":507,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8665:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":506,"name":"uint136","nodeType":"ElementaryTypeName","src":"8665:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"}],"id":505,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"8660:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":508,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8660:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint136","typeString":"type(uint136)"}},"id":509,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"8674:3:2","memberName":"max","nodeType":"MemberAccess","src":"8660:17:2","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"src":"8651:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":511,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8679:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":503,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8643:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":512,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8643:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":513,"nodeType":"ExpressionStatement","src":"8643:78:2"},{"expression":{"arguments":[{"id":516,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":498,"src":"8746:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":515,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"8738:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint136_$","typeString":"type(uint136)"},"typeName":{"id":514,"name":"uint136","nodeType":"ElementaryTypeName","src":"8738:7:2","typeDescriptions":{}}},"id":517,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8738:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"functionReturnParameters":502,"id":518,"nodeType":"Return","src":"8731:21:2"}]},"documentation":{"id":496,"nodeType":"StructuredDocumentation","src":"8244:318:2","text":" @dev Returns the downcasted uint136 from uint256, reverting on\n overflow (when the input is greater than largest uint136).\n Counterpart to Solidity's `uint136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":520,"implemented":true,"kind":"function","modifiers":[],"name":"toUint136","nameLocation":"8576:9:2","nodeType":"FunctionDefinition","parameters":{"id":499,"nodeType":"ParameterList","parameters":[{"constant":false,"id":498,"mutability":"mutable","name":"value","nameLocation":"8594:5:2","nodeType":"VariableDeclaration","scope":520,"src":"8586:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":497,"name":"uint256","nodeType":"ElementaryTypeName","src":"8586:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"8585:15:2"},"returnParameters":{"id":502,"nodeType":"ParameterList","parameters":[{"constant":false,"id":501,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":520,"src":"8624:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"},"typeName":{"id":500,"name":"uint136","nodeType":"ElementaryTypeName","src":"8624:7:2","typeDescriptions":{"typeIdentifier":"t_uint136","typeString":"uint136"}},"visibility":"internal"}],"src":"8623:9:2"},"scope":1683,"src":"8567:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":544,"nodeType":"Block","src":"9154:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":535,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":529,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9172:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":532,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9186:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":531,"name":"uint128","nodeType":"ElementaryTypeName","src":"9186:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"}],"id":530,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9181:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":533,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9181:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint128","typeString":"type(uint128)"}},"id":534,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9195:3:2","memberName":"max","nodeType":"MemberAccess","src":"9181:17:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"src":"9172:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":536,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9200:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":528,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9164:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":537,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9164:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":538,"nodeType":"ExpressionStatement","src":"9164:78:2"},{"expression":{"arguments":[{"id":541,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":523,"src":"9267:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":540,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9259:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint128_$","typeString":"type(uint128)"},"typeName":{"id":539,"name":"uint128","nodeType":"ElementaryTypeName","src":"9259:7:2","typeDescriptions":{}}},"id":542,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9259:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"functionReturnParameters":527,"id":543,"nodeType":"Return","src":"9252:21:2"}]},"documentation":{"id":521,"nodeType":"StructuredDocumentation","src":"8765:318:2","text":" @dev Returns the downcasted uint128 from uint256, reverting on\n overflow (when the input is greater than largest uint128).\n Counterpart to Solidity's `uint128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v2.5._"},"id":545,"implemented":true,"kind":"function","modifiers":[],"name":"toUint128","nameLocation":"9097:9:2","nodeType":"FunctionDefinition","parameters":{"id":524,"nodeType":"ParameterList","parameters":[{"constant":false,"id":523,"mutability":"mutable","name":"value","nameLocation":"9115:5:2","nodeType":"VariableDeclaration","scope":545,"src":"9107:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":522,"name":"uint256","nodeType":"ElementaryTypeName","src":"9107:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9106:15:2"},"returnParameters":{"id":527,"nodeType":"ParameterList","parameters":[{"constant":false,"id":526,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":545,"src":"9145:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"},"typeName":{"id":525,"name":"uint128","nodeType":"ElementaryTypeName","src":"9145:7:2","typeDescriptions":{"typeIdentifier":"t_uint128","typeString":"uint128"}},"visibility":"internal"}],"src":"9144:9:2"},"scope":1683,"src":"9088:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":569,"nodeType":"Block","src":"9675:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":560,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":554,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"9693:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":557,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9707:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":556,"name":"uint120","nodeType":"ElementaryTypeName","src":"9707:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"}],"id":555,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"9702:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9702:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint120","typeString":"type(uint120)"}},"id":559,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"9716:3:2","memberName":"max","nodeType":"MemberAccess","src":"9702:17:2","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"src":"9693:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":561,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9721:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":553,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9685:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":562,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9685:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":563,"nodeType":"ExpressionStatement","src":"9685:78:2"},{"expression":{"arguments":[{"id":566,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":548,"src":"9788:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":565,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"9780:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint120_$","typeString":"type(uint120)"},"typeName":{"id":564,"name":"uint120","nodeType":"ElementaryTypeName","src":"9780:7:2","typeDescriptions":{}}},"id":567,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9780:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"functionReturnParameters":552,"id":568,"nodeType":"Return","src":"9773:21:2"}]},"documentation":{"id":546,"nodeType":"StructuredDocumentation","src":"9286:318:2","text":" @dev Returns the downcasted uint120 from uint256, reverting on\n overflow (when the input is greater than largest uint120).\n Counterpart to Solidity's `uint120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":570,"implemented":true,"kind":"function","modifiers":[],"name":"toUint120","nameLocation":"9618:9:2","nodeType":"FunctionDefinition","parameters":{"id":549,"nodeType":"ParameterList","parameters":[{"constant":false,"id":548,"mutability":"mutable","name":"value","nameLocation":"9636:5:2","nodeType":"VariableDeclaration","scope":570,"src":"9628:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":547,"name":"uint256","nodeType":"ElementaryTypeName","src":"9628:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9627:15:2"},"returnParameters":{"id":552,"nodeType":"ParameterList","parameters":[{"constant":false,"id":551,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":570,"src":"9666:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"},"typeName":{"id":550,"name":"uint120","nodeType":"ElementaryTypeName","src":"9666:7:2","typeDescriptions":{"typeIdentifier":"t_uint120","typeString":"uint120"}},"visibility":"internal"}],"src":"9665:9:2"},"scope":1683,"src":"9609:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":594,"nodeType":"Block","src":"10196:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":585,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10214:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":582,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10228:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":581,"name":"uint112","nodeType":"ElementaryTypeName","src":"10228:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"}],"id":580,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10223:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":583,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10223:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint112","typeString":"type(uint112)"}},"id":584,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10237:3:2","memberName":"max","nodeType":"MemberAccess","src":"10223:17:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"src":"10214:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":586,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10242:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":578,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10206:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":587,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10206:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":588,"nodeType":"ExpressionStatement","src":"10206:78:2"},{"expression":{"arguments":[{"id":591,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":573,"src":"10309:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":590,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10301:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint112_$","typeString":"type(uint112)"},"typeName":{"id":589,"name":"uint112","nodeType":"ElementaryTypeName","src":"10301:7:2","typeDescriptions":{}}},"id":592,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10301:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"functionReturnParameters":577,"id":593,"nodeType":"Return","src":"10294:21:2"}]},"documentation":{"id":571,"nodeType":"StructuredDocumentation","src":"9807:318:2","text":" @dev Returns the downcasted uint112 from uint256, reverting on\n overflow (when the input is greater than largest uint112).\n Counterpart to Solidity's `uint112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":595,"implemented":true,"kind":"function","modifiers":[],"name":"toUint112","nameLocation":"10139:9:2","nodeType":"FunctionDefinition","parameters":{"id":574,"nodeType":"ParameterList","parameters":[{"constant":false,"id":573,"mutability":"mutable","name":"value","nameLocation":"10157:5:2","nodeType":"VariableDeclaration","scope":595,"src":"10149:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":572,"name":"uint256","nodeType":"ElementaryTypeName","src":"10149:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10148:15:2"},"returnParameters":{"id":577,"nodeType":"ParameterList","parameters":[{"constant":false,"id":576,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":595,"src":"10187:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"},"typeName":{"id":575,"name":"uint112","nodeType":"ElementaryTypeName","src":"10187:7:2","typeDescriptions":{"typeIdentifier":"t_uint112","typeString":"uint112"}},"visibility":"internal"}],"src":"10186:9:2"},"scope":1683,"src":"10130:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":619,"nodeType":"Block","src":"10717:126:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":610,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":604,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10735:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":607,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10749:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":606,"name":"uint104","nodeType":"ElementaryTypeName","src":"10749:7:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"}],"id":605,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"10744:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":608,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10744:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint104","typeString":"type(uint104)"}},"id":609,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"10758:3:2","memberName":"max","nodeType":"MemberAccess","src":"10744:17:2","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"src":"10735:26:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":611,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"10763:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":603,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"10727:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":612,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10727:78:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":613,"nodeType":"ExpressionStatement","src":"10727:78:2"},{"expression":{"arguments":[{"id":616,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":598,"src":"10830:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":615,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"10822:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint104_$","typeString":"type(uint104)"},"typeName":{"id":614,"name":"uint104","nodeType":"ElementaryTypeName","src":"10822:7:2","typeDescriptions":{}}},"id":617,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"10822:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"functionReturnParameters":602,"id":618,"nodeType":"Return","src":"10815:21:2"}]},"documentation":{"id":596,"nodeType":"StructuredDocumentation","src":"10328:318:2","text":" @dev Returns the downcasted uint104 from uint256, reverting on\n overflow (when the input is greater than largest uint104).\n Counterpart to Solidity's `uint104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":620,"implemented":true,"kind":"function","modifiers":[],"name":"toUint104","nameLocation":"10660:9:2","nodeType":"FunctionDefinition","parameters":{"id":599,"nodeType":"ParameterList","parameters":[{"constant":false,"id":598,"mutability":"mutable","name":"value","nameLocation":"10678:5:2","nodeType":"VariableDeclaration","scope":620,"src":"10670:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":597,"name":"uint256","nodeType":"ElementaryTypeName","src":"10670:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"10669:15:2"},"returnParameters":{"id":602,"nodeType":"ParameterList","parameters":[{"constant":false,"id":601,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":620,"src":"10708:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"},"typeName":{"id":600,"name":"uint104","nodeType":"ElementaryTypeName","src":"10708:7:2","typeDescriptions":{"typeIdentifier":"t_uint104","typeString":"uint104"}},"visibility":"internal"}],"src":"10707:9:2"},"scope":1683,"src":"10651:192:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":644,"nodeType":"Block","src":"11232:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":635,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":629,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"11250:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":632,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11264:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":631,"name":"uint96","nodeType":"ElementaryTypeName","src":"11264:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"}],"id":630,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11259:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":633,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11259:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint96","typeString":"type(uint96)"}},"id":634,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11272:3:2","memberName":"max","nodeType":"MemberAccess","src":"11259:16:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"src":"11250:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":636,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11277:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":628,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11242:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":637,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11242:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":638,"nodeType":"ExpressionStatement","src":"11242:76:2"},{"expression":{"arguments":[{"id":641,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":623,"src":"11342:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":640,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11335:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint96_$","typeString":"type(uint96)"},"typeName":{"id":639,"name":"uint96","nodeType":"ElementaryTypeName","src":"11335:6:2","typeDescriptions":{}}},"id":642,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11335:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"functionReturnParameters":627,"id":643,"nodeType":"Return","src":"11328:20:2"}]},"documentation":{"id":621,"nodeType":"StructuredDocumentation","src":"10849:314:2","text":" @dev Returns the downcasted uint96 from uint256, reverting on\n overflow (when the input is greater than largest uint96).\n Counterpart to Solidity's `uint96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.2._"},"id":645,"implemented":true,"kind":"function","modifiers":[],"name":"toUint96","nameLocation":"11177:8:2","nodeType":"FunctionDefinition","parameters":{"id":624,"nodeType":"ParameterList","parameters":[{"constant":false,"id":623,"mutability":"mutable","name":"value","nameLocation":"11194:5:2","nodeType":"VariableDeclaration","scope":645,"src":"11186:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":622,"name":"uint256","nodeType":"ElementaryTypeName","src":"11186:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11185:15:2"},"returnParameters":{"id":627,"nodeType":"ParameterList","parameters":[{"constant":false,"id":626,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":645,"src":"11224:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"},"typeName":{"id":625,"name":"uint96","nodeType":"ElementaryTypeName","src":"11224:6:2","typeDescriptions":{"typeIdentifier":"t_uint96","typeString":"uint96"}},"visibility":"internal"}],"src":"11223:8:2"},"scope":1683,"src":"11168:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":669,"nodeType":"Block","src":"11744:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":660,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":654,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"11762:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":657,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11776:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":656,"name":"uint88","nodeType":"ElementaryTypeName","src":"11776:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"}],"id":655,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"11771:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":658,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11771:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint88","typeString":"type(uint88)"}},"id":659,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"11784:3:2","memberName":"max","nodeType":"MemberAccess","src":"11771:16:2","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"src":"11762:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":661,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"11789:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":653,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"11754:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":662,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11754:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":663,"nodeType":"ExpressionStatement","src":"11754:76:2"},{"expression":{"arguments":[{"id":666,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":648,"src":"11854:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"11847:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint88_$","typeString":"type(uint88)"},"typeName":{"id":664,"name":"uint88","nodeType":"ElementaryTypeName","src":"11847:6:2","typeDescriptions":{}}},"id":667,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"11847:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"functionReturnParameters":652,"id":668,"nodeType":"Return","src":"11840:20:2"}]},"documentation":{"id":646,"nodeType":"StructuredDocumentation","src":"11361:314:2","text":" @dev Returns the downcasted uint88 from uint256, reverting on\n overflow (when the input is greater than largest uint88).\n Counterpart to Solidity's `uint88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":670,"implemented":true,"kind":"function","modifiers":[],"name":"toUint88","nameLocation":"11689:8:2","nodeType":"FunctionDefinition","parameters":{"id":649,"nodeType":"ParameterList","parameters":[{"constant":false,"id":648,"mutability":"mutable","name":"value","nameLocation":"11706:5:2","nodeType":"VariableDeclaration","scope":670,"src":"11698:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":647,"name":"uint256","nodeType":"ElementaryTypeName","src":"11698:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"11697:15:2"},"returnParameters":{"id":652,"nodeType":"ParameterList","parameters":[{"constant":false,"id":651,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":670,"src":"11736:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"},"typeName":{"id":650,"name":"uint88","nodeType":"ElementaryTypeName","src":"11736:6:2","typeDescriptions":{"typeIdentifier":"t_uint88","typeString":"uint88"}},"visibility":"internal"}],"src":"11735:8:2"},"scope":1683,"src":"11680:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":694,"nodeType":"Block","src":"12256:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":685,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":679,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"12274:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":682,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12288:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":681,"name":"uint80","nodeType":"ElementaryTypeName","src":"12288:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"}],"id":680,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12283:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":683,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12283:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint80","typeString":"type(uint80)"}},"id":684,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12296:3:2","memberName":"max","nodeType":"MemberAccess","src":"12283:16:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"src":"12274:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":686,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12301:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":678,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12266:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":687,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12266:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":688,"nodeType":"ExpressionStatement","src":"12266:76:2"},{"expression":{"arguments":[{"id":691,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":673,"src":"12366:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":690,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12359:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint80_$","typeString":"type(uint80)"},"typeName":{"id":689,"name":"uint80","nodeType":"ElementaryTypeName","src":"12359:6:2","typeDescriptions":{}}},"id":692,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12359:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"functionReturnParameters":677,"id":693,"nodeType":"Return","src":"12352:20:2"}]},"documentation":{"id":671,"nodeType":"StructuredDocumentation","src":"11873:314:2","text":" @dev Returns the downcasted uint80 from uint256, reverting on\n overflow (when the input is greater than largest uint80).\n Counterpart to Solidity's `uint80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":695,"implemented":true,"kind":"function","modifiers":[],"name":"toUint80","nameLocation":"12201:8:2","nodeType":"FunctionDefinition","parameters":{"id":674,"nodeType":"ParameterList","parameters":[{"constant":false,"id":673,"mutability":"mutable","name":"value","nameLocation":"12218:5:2","nodeType":"VariableDeclaration","scope":695,"src":"12210:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":672,"name":"uint256","nodeType":"ElementaryTypeName","src":"12210:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12209:15:2"},"returnParameters":{"id":677,"nodeType":"ParameterList","parameters":[{"constant":false,"id":676,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":695,"src":"12248:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"},"typeName":{"id":675,"name":"uint80","nodeType":"ElementaryTypeName","src":"12248:6:2","typeDescriptions":{"typeIdentifier":"t_uint80","typeString":"uint80"}},"visibility":"internal"}],"src":"12247:8:2"},"scope":1683,"src":"12192:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":719,"nodeType":"Block","src":"12768:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":710,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":704,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"12786:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":707,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12800:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":706,"name":"uint72","nodeType":"ElementaryTypeName","src":"12800:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"}],"id":705,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"12795:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":708,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12795:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint72","typeString":"type(uint72)"}},"id":709,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"12808:3:2","memberName":"max","nodeType":"MemberAccess","src":"12795:16:2","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"src":"12786:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":711,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"12813:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":703,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"12778:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":712,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12778:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":713,"nodeType":"ExpressionStatement","src":"12778:76:2"},{"expression":{"arguments":[{"id":716,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":698,"src":"12878:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":715,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"12871:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint72_$","typeString":"type(uint72)"},"typeName":{"id":714,"name":"uint72","nodeType":"ElementaryTypeName","src":"12871:6:2","typeDescriptions":{}}},"id":717,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"12871:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"functionReturnParameters":702,"id":718,"nodeType":"Return","src":"12864:20:2"}]},"documentation":{"id":696,"nodeType":"StructuredDocumentation","src":"12385:314:2","text":" @dev Returns the downcasted uint72 from uint256, reverting on\n overflow (when the input is greater than largest uint72).\n Counterpart to Solidity's `uint72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":720,"implemented":true,"kind":"function","modifiers":[],"name":"toUint72","nameLocation":"12713:8:2","nodeType":"FunctionDefinition","parameters":{"id":699,"nodeType":"ParameterList","parameters":[{"constant":false,"id":698,"mutability":"mutable","name":"value","nameLocation":"12730:5:2","nodeType":"VariableDeclaration","scope":720,"src":"12722:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":697,"name":"uint256","nodeType":"ElementaryTypeName","src":"12722:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"12721:15:2"},"returnParameters":{"id":702,"nodeType":"ParameterList","parameters":[{"constant":false,"id":701,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":720,"src":"12760:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"},"typeName":{"id":700,"name":"uint72","nodeType":"ElementaryTypeName","src":"12760:6:2","typeDescriptions":{"typeIdentifier":"t_uint72","typeString":"uint72"}},"visibility":"internal"}],"src":"12759:8:2"},"scope":1683,"src":"12704:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":744,"nodeType":"Block","src":"13280:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":735,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":729,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"13298:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":732,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13312:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":731,"name":"uint64","nodeType":"ElementaryTypeName","src":"13312:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"}],"id":730,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13307:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":733,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13307:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint64","typeString":"type(uint64)"}},"id":734,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13320:3:2","memberName":"max","nodeType":"MemberAccess","src":"13307:16:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"src":"13298:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":736,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13325:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":728,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13290:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":737,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13290:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":738,"nodeType":"ExpressionStatement","src":"13290:76:2"},{"expression":{"arguments":[{"id":741,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":723,"src":"13390:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":740,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13383:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint64_$","typeString":"type(uint64)"},"typeName":{"id":739,"name":"uint64","nodeType":"ElementaryTypeName","src":"13383:6:2","typeDescriptions":{}}},"id":742,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13383:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"functionReturnParameters":727,"id":743,"nodeType":"Return","src":"13376:20:2"}]},"documentation":{"id":721,"nodeType":"StructuredDocumentation","src":"12897:314:2","text":" @dev Returns the downcasted uint64 from uint256, reverting on\n overflow (when the input is greater than largest uint64).\n Counterpart to Solidity's `uint64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v2.5._"},"id":745,"implemented":true,"kind":"function","modifiers":[],"name":"toUint64","nameLocation":"13225:8:2","nodeType":"FunctionDefinition","parameters":{"id":724,"nodeType":"ParameterList","parameters":[{"constant":false,"id":723,"mutability":"mutable","name":"value","nameLocation":"13242:5:2","nodeType":"VariableDeclaration","scope":745,"src":"13234:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":722,"name":"uint256","nodeType":"ElementaryTypeName","src":"13234:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13233:15:2"},"returnParameters":{"id":727,"nodeType":"ParameterList","parameters":[{"constant":false,"id":726,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":745,"src":"13272:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"},"typeName":{"id":725,"name":"uint64","nodeType":"ElementaryTypeName","src":"13272:6:2","typeDescriptions":{"typeIdentifier":"t_uint64","typeString":"uint64"}},"visibility":"internal"}],"src":"13271:8:2"},"scope":1683,"src":"13216:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":769,"nodeType":"Block","src":"13792:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":760,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":754,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"13810:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":757,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13824:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":756,"name":"uint56","nodeType":"ElementaryTypeName","src":"13824:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"}],"id":755,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"13819:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":758,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13819:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint56","typeString":"type(uint56)"}},"id":759,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"13832:3:2","memberName":"max","nodeType":"MemberAccess","src":"13819:16:2","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"src":"13810:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":761,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"13837:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":753,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"13802:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":762,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13802:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":763,"nodeType":"ExpressionStatement","src":"13802:76:2"},{"expression":{"arguments":[{"id":766,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":748,"src":"13902:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":765,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"13895:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint56_$","typeString":"type(uint56)"},"typeName":{"id":764,"name":"uint56","nodeType":"ElementaryTypeName","src":"13895:6:2","typeDescriptions":{}}},"id":767,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"13895:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"functionReturnParameters":752,"id":768,"nodeType":"Return","src":"13888:20:2"}]},"documentation":{"id":746,"nodeType":"StructuredDocumentation","src":"13409:314:2","text":" @dev Returns the downcasted uint56 from uint256, reverting on\n overflow (when the input is greater than largest uint56).\n Counterpart to Solidity's `uint56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":770,"implemented":true,"kind":"function","modifiers":[],"name":"toUint56","nameLocation":"13737:8:2","nodeType":"FunctionDefinition","parameters":{"id":749,"nodeType":"ParameterList","parameters":[{"constant":false,"id":748,"mutability":"mutable","name":"value","nameLocation":"13754:5:2","nodeType":"VariableDeclaration","scope":770,"src":"13746:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":747,"name":"uint256","nodeType":"ElementaryTypeName","src":"13746:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"13745:15:2"},"returnParameters":{"id":752,"nodeType":"ParameterList","parameters":[{"constant":false,"id":751,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":770,"src":"13784:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"},"typeName":{"id":750,"name":"uint56","nodeType":"ElementaryTypeName","src":"13784:6:2","typeDescriptions":{"typeIdentifier":"t_uint56","typeString":"uint56"}},"visibility":"internal"}],"src":"13783:8:2"},"scope":1683,"src":"13728:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":794,"nodeType":"Block","src":"14304:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":785,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":779,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"14322:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":782,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14336:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":781,"name":"uint48","nodeType":"ElementaryTypeName","src":"14336:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"}],"id":780,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14331:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":783,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14331:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint48","typeString":"type(uint48)"}},"id":784,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14344:3:2","memberName":"max","nodeType":"MemberAccess","src":"14331:16:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"src":"14322:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":786,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14349:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":778,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14314:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":787,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14314:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":788,"nodeType":"ExpressionStatement","src":"14314:76:2"},{"expression":{"arguments":[{"id":791,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":773,"src":"14414:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":790,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14407:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint48_$","typeString":"type(uint48)"},"typeName":{"id":789,"name":"uint48","nodeType":"ElementaryTypeName","src":"14407:6:2","typeDescriptions":{}}},"id":792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14407:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"functionReturnParameters":777,"id":793,"nodeType":"Return","src":"14400:20:2"}]},"documentation":{"id":771,"nodeType":"StructuredDocumentation","src":"13921:314:2","text":" @dev Returns the downcasted uint48 from uint256, reverting on\n overflow (when the input is greater than largest uint48).\n Counterpart to Solidity's `uint48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":795,"implemented":true,"kind":"function","modifiers":[],"name":"toUint48","nameLocation":"14249:8:2","nodeType":"FunctionDefinition","parameters":{"id":774,"nodeType":"ParameterList","parameters":[{"constant":false,"id":773,"mutability":"mutable","name":"value","nameLocation":"14266:5:2","nodeType":"VariableDeclaration","scope":795,"src":"14258:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":772,"name":"uint256","nodeType":"ElementaryTypeName","src":"14258:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14257:15:2"},"returnParameters":{"id":777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":776,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":795,"src":"14296:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"},"typeName":{"id":775,"name":"uint48","nodeType":"ElementaryTypeName","src":"14296:6:2","typeDescriptions":{"typeIdentifier":"t_uint48","typeString":"uint48"}},"visibility":"internal"}],"src":"14295:8:2"},"scope":1683,"src":"14240:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":819,"nodeType":"Block","src":"14816:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":810,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":804,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"14834:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":807,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14848:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":806,"name":"uint40","nodeType":"ElementaryTypeName","src":"14848:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"}],"id":805,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"14843:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14843:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint40","typeString":"type(uint40)"}},"id":809,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"14856:3:2","memberName":"max","nodeType":"MemberAccess","src":"14843:16:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"src":"14834:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":811,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"14861:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"14826:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":812,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14826:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":813,"nodeType":"ExpressionStatement","src":"14826:76:2"},{"expression":{"arguments":[{"id":816,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":798,"src":"14926:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":815,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"14919:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint40_$","typeString":"type(uint40)"},"typeName":{"id":814,"name":"uint40","nodeType":"ElementaryTypeName","src":"14919:6:2","typeDescriptions":{}}},"id":817,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"14919:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"functionReturnParameters":802,"id":818,"nodeType":"Return","src":"14912:20:2"}]},"documentation":{"id":796,"nodeType":"StructuredDocumentation","src":"14433:314:2","text":" @dev Returns the downcasted uint40 from uint256, reverting on\n overflow (when the input is greater than largest uint40).\n Counterpart to Solidity's `uint40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":820,"implemented":true,"kind":"function","modifiers":[],"name":"toUint40","nameLocation":"14761:8:2","nodeType":"FunctionDefinition","parameters":{"id":799,"nodeType":"ParameterList","parameters":[{"constant":false,"id":798,"mutability":"mutable","name":"value","nameLocation":"14778:5:2","nodeType":"VariableDeclaration","scope":820,"src":"14770:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":797,"name":"uint256","nodeType":"ElementaryTypeName","src":"14770:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"14769:15:2"},"returnParameters":{"id":802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":801,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":820,"src":"14808:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"},"typeName":{"id":800,"name":"uint40","nodeType":"ElementaryTypeName","src":"14808:6:2","typeDescriptions":{"typeIdentifier":"t_uint40","typeString":"uint40"}},"visibility":"internal"}],"src":"14807:8:2"},"scope":1683,"src":"14752:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":844,"nodeType":"Block","src":"15328:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":835,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":829,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"15346:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":832,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15360:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":831,"name":"uint32","nodeType":"ElementaryTypeName","src":"15360:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"}],"id":830,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15355:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":833,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15355:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint32","typeString":"type(uint32)"}},"id":834,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15368:3:2","memberName":"max","nodeType":"MemberAccess","src":"15355:16:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"src":"15346:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":836,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15373:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":828,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15338:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":837,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15338:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":838,"nodeType":"ExpressionStatement","src":"15338:76:2"},{"expression":{"arguments":[{"id":841,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":823,"src":"15438:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":840,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15431:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint32_$","typeString":"type(uint32)"},"typeName":{"id":839,"name":"uint32","nodeType":"ElementaryTypeName","src":"15431:6:2","typeDescriptions":{}}},"id":842,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15431:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"functionReturnParameters":827,"id":843,"nodeType":"Return","src":"15424:20:2"}]},"documentation":{"id":821,"nodeType":"StructuredDocumentation","src":"14945:314:2","text":" @dev Returns the downcasted uint32 from uint256, reverting on\n overflow (when the input is greater than largest uint32).\n Counterpart to Solidity's `uint32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v2.5._"},"id":845,"implemented":true,"kind":"function","modifiers":[],"name":"toUint32","nameLocation":"15273:8:2","nodeType":"FunctionDefinition","parameters":{"id":824,"nodeType":"ParameterList","parameters":[{"constant":false,"id":823,"mutability":"mutable","name":"value","nameLocation":"15290:5:2","nodeType":"VariableDeclaration","scope":845,"src":"15282:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":822,"name":"uint256","nodeType":"ElementaryTypeName","src":"15282:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15281:15:2"},"returnParameters":{"id":827,"nodeType":"ParameterList","parameters":[{"constant":false,"id":826,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":845,"src":"15320:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"},"typeName":{"id":825,"name":"uint32","nodeType":"ElementaryTypeName","src":"15320:6:2","typeDescriptions":{"typeIdentifier":"t_uint32","typeString":"uint32"}},"visibility":"internal"}],"src":"15319:8:2"},"scope":1683,"src":"15264:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":869,"nodeType":"Block","src":"15840:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":860,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":854,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"15858:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":857,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15872:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":856,"name":"uint24","nodeType":"ElementaryTypeName","src":"15872:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"}],"id":855,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"15867:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":858,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15867:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint24","typeString":"type(uint24)"}},"id":859,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"15880:3:2","memberName":"max","nodeType":"MemberAccess","src":"15867:16:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"src":"15858:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":861,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"15885:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":853,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"15850:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":862,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15850:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":863,"nodeType":"ExpressionStatement","src":"15850:76:2"},{"expression":{"arguments":[{"id":866,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":848,"src":"15950:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":865,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"15943:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint24_$","typeString":"type(uint24)"},"typeName":{"id":864,"name":"uint24","nodeType":"ElementaryTypeName","src":"15943:6:2","typeDescriptions":{}}},"id":867,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"15943:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"functionReturnParameters":852,"id":868,"nodeType":"Return","src":"15936:20:2"}]},"documentation":{"id":846,"nodeType":"StructuredDocumentation","src":"15457:314:2","text":" @dev Returns the downcasted uint24 from uint256, reverting on\n overflow (when the input is greater than largest uint24).\n Counterpart to Solidity's `uint24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":870,"implemented":true,"kind":"function","modifiers":[],"name":"toUint24","nameLocation":"15785:8:2","nodeType":"FunctionDefinition","parameters":{"id":849,"nodeType":"ParameterList","parameters":[{"constant":false,"id":848,"mutability":"mutable","name":"value","nameLocation":"15802:5:2","nodeType":"VariableDeclaration","scope":870,"src":"15794:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":847,"name":"uint256","nodeType":"ElementaryTypeName","src":"15794:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"15793:15:2"},"returnParameters":{"id":852,"nodeType":"ParameterList","parameters":[{"constant":false,"id":851,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":870,"src":"15832:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"},"typeName":{"id":850,"name":"uint24","nodeType":"ElementaryTypeName","src":"15832:6:2","typeDescriptions":{"typeIdentifier":"t_uint24","typeString":"uint24"}},"visibility":"internal"}],"src":"15831:8:2"},"scope":1683,"src":"15776:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":894,"nodeType":"Block","src":"16352:123:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":885,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":879,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16370:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":882,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16384:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":881,"name":"uint16","nodeType":"ElementaryTypeName","src":"16384:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"}],"id":880,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16379:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":883,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16379:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint16","typeString":"type(uint16)"}},"id":884,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16392:3:2","memberName":"max","nodeType":"MemberAccess","src":"16379:16:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"src":"16370:25:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":886,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16397:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":878,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16362:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":887,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16362:76:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":888,"nodeType":"ExpressionStatement","src":"16362:76:2"},{"expression":{"arguments":[{"id":891,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":873,"src":"16462:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":890,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16455:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint16_$","typeString":"type(uint16)"},"typeName":{"id":889,"name":"uint16","nodeType":"ElementaryTypeName","src":"16455:6:2","typeDescriptions":{}}},"id":892,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16455:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"functionReturnParameters":877,"id":893,"nodeType":"Return","src":"16448:20:2"}]},"documentation":{"id":871,"nodeType":"StructuredDocumentation","src":"15969:314:2","text":" @dev Returns the downcasted uint16 from uint256, reverting on\n overflow (when the input is greater than largest uint16).\n Counterpart to Solidity's `uint16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v2.5._"},"id":895,"implemented":true,"kind":"function","modifiers":[],"name":"toUint16","nameLocation":"16297:8:2","nodeType":"FunctionDefinition","parameters":{"id":874,"nodeType":"ParameterList","parameters":[{"constant":false,"id":873,"mutability":"mutable","name":"value","nameLocation":"16314:5:2","nodeType":"VariableDeclaration","scope":895,"src":"16306:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":872,"name":"uint256","nodeType":"ElementaryTypeName","src":"16306:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16305:15:2"},"returnParameters":{"id":877,"nodeType":"ParameterList","parameters":[{"constant":false,"id":876,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":895,"src":"16344:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"},"typeName":{"id":875,"name":"uint16","nodeType":"ElementaryTypeName","src":"16344:6:2","typeDescriptions":{"typeIdentifier":"t_uint16","typeString":"uint16"}},"visibility":"internal"}],"src":"16343:8:2"},"scope":1683,"src":"16288:187:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":919,"nodeType":"Block","src":"16858:120:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":910,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":904,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"16876:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"expression":{"arguments":[{"id":907,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16890:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":906,"name":"uint8","nodeType":"ElementaryTypeName","src":"16890:5:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"}],"id":905,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"16885:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":908,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16885:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_uint8","typeString":"type(uint8)"}},"id":909,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"16897:3:2","memberName":"max","nodeType":"MemberAccess","src":"16885:15:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"src":"16876:24:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":911,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"16902:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":903,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"16868:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":912,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16868:74:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":913,"nodeType":"ExpressionStatement","src":"16868:74:2"},{"expression":{"arguments":[{"id":916,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":898,"src":"16965:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":915,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"16959:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint8_$","typeString":"type(uint8)"},"typeName":{"id":914,"name":"uint8","nodeType":"ElementaryTypeName","src":"16959:5:2","typeDescriptions":{}}},"id":917,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"16959:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"functionReturnParameters":902,"id":918,"nodeType":"Return","src":"16952:19:2"}]},"documentation":{"id":896,"nodeType":"StructuredDocumentation","src":"16481:310:2","text":" @dev Returns the downcasted uint8 from uint256, reverting on\n overflow (when the input is greater than largest uint8).\n Counterpart to Solidity's `uint8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v2.5._"},"id":920,"implemented":true,"kind":"function","modifiers":[],"name":"toUint8","nameLocation":"16805:7:2","nodeType":"FunctionDefinition","parameters":{"id":899,"nodeType":"ParameterList","parameters":[{"constant":false,"id":898,"mutability":"mutable","name":"value","nameLocation":"16821:5:2","nodeType":"VariableDeclaration","scope":920,"src":"16813:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":897,"name":"uint256","nodeType":"ElementaryTypeName","src":"16813:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"16812:15:2"},"returnParameters":{"id":902,"nodeType":"ParameterList","parameters":[{"constant":false,"id":901,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":920,"src":"16851:5:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"},"typeName":{"id":900,"name":"uint8","nodeType":"ElementaryTypeName","src":"16851:5:2","typeDescriptions":{"typeIdentifier":"t_uint8","typeString":"uint8"}},"visibility":"internal"}],"src":"16850:7:2"},"scope":1683,"src":"16796:182:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":940,"nodeType":"Block","src":"17252:103:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":931,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":929,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"17270:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"nodeType":"BinaryOperation","operator":">=","rightExpression":{"hexValue":"30","id":930,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"17279:1:2","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"},"src":"17270:10:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c7565206d75737420626520706f736974697665","id":932,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17282:34:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""},"value":"SafeCast: value must be positive"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_74e6d3a4204092bea305532ded31d3763fc378e46be3884a93ceff08a0761807","typeString":"literal_string \"SafeCast: value must be positive\""}],"id":928,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17262:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":933,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17262:55:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":934,"nodeType":"ExpressionStatement","src":"17262:55:2"},{"expression":{"arguments":[{"id":937,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":923,"src":"17342:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":936,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17334:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":935,"name":"uint256","nodeType":"ElementaryTypeName","src":"17334:7:2","typeDescriptions":{}}},"id":938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17334:14:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"functionReturnParameters":927,"id":939,"nodeType":"Return","src":"17327:21:2"}]},"documentation":{"id":921,"nodeType":"StructuredDocumentation","src":"16984:198:2","text":" @dev Converts a signed int256 into an unsigned uint256.\n Requirements:\n - input must be greater than or equal to 0.\n _Available since v3.0._"},"id":941,"implemented":true,"kind":"function","modifiers":[],"name":"toUint256","nameLocation":"17196:9:2","nodeType":"FunctionDefinition","parameters":{"id":924,"nodeType":"ParameterList","parameters":[{"constant":false,"id":923,"mutability":"mutable","name":"value","nameLocation":"17213:5:2","nodeType":"VariableDeclaration","scope":941,"src":"17206:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":922,"name":"int256","nodeType":"ElementaryTypeName","src":"17206:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17205:14:2"},"returnParameters":{"id":927,"nodeType":"ParameterList","parameters":[{"constant":false,"id":926,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":941,"src":"17243:7:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":925,"name":"uint256","nodeType":"ElementaryTypeName","src":"17243:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"17242:9:2"},"scope":1683,"src":"17187:168:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":963,"nodeType":"Block","src":"17790:124:2","statements":[{"expression":{"id":954,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":949,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"17800:10:2","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":952,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"17820:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":951,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"17813:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int248_$","typeString":"type(int248)"},"typeName":{"id":950,"name":"int248","nodeType":"ElementaryTypeName","src":"17813:6:2","typeDescriptions":{}}},"id":953,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17813:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"src":"17800:26:2","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"id":955,"nodeType":"ExpressionStatement","src":"17800:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":959,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":957,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":947,"src":"17844:10:2","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":958,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":944,"src":"17858:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"17844:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234382062697473","id":960,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"17865:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""},"value":"SafeCast: value doesn't fit in 248 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_6ac19bba4607c9b45ff35f54fbc4ca64c29c7457109a16fa180ea77cdbda8593","typeString":"literal_string \"SafeCast: value doesn't fit in 248 bits\""}],"id":956,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"17836:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":961,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"17836:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":962,"nodeType":"ExpressionStatement","src":"17836:71:2"}]},"documentation":{"id":942,"nodeType":"StructuredDocumentation","src":"17361:350:2","text":" @dev Returns the downcasted int248 from int256, reverting on\n overflow (when the input is less than smallest int248 or\n greater than largest int248).\n Counterpart to Solidity's `int248` operator.\n Requirements:\n - input must fit into 248 bits\n _Available since v4.7._"},"id":964,"implemented":true,"kind":"function","modifiers":[],"name":"toInt248","nameLocation":"17725:8:2","nodeType":"FunctionDefinition","parameters":{"id":945,"nodeType":"ParameterList","parameters":[{"constant":false,"id":944,"mutability":"mutable","name":"value","nameLocation":"17741:5:2","nodeType":"VariableDeclaration","scope":964,"src":"17734:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":943,"name":"int256","nodeType":"ElementaryTypeName","src":"17734:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"17733:14:2"},"returnParameters":{"id":948,"nodeType":"ParameterList","parameters":[{"constant":false,"id":947,"mutability":"mutable","name":"downcasted","nameLocation":"17778:10:2","nodeType":"VariableDeclaration","scope":964,"src":"17771:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"},"typeName":{"id":946,"name":"int248","nodeType":"ElementaryTypeName","src":"17771:6:2","typeDescriptions":{"typeIdentifier":"t_int248","typeString":"int248"}},"visibility":"internal"}],"src":"17770:19:2"},"scope":1683,"src":"17716:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":986,"nodeType":"Block","src":"18349:124:2","statements":[{"expression":{"id":977,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":972,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"18359:10:2","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":975,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"18379:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":974,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18372:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int240_$","typeString":"type(int240)"},"typeName":{"id":973,"name":"int240","nodeType":"ElementaryTypeName","src":"18372:6:2","typeDescriptions":{}}},"id":976,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18372:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"src":"18359:26:2","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"id":978,"nodeType":"ExpressionStatement","src":"18359:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":982,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":980,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":970,"src":"18403:10:2","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":981,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":967,"src":"18417:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18403:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203234302062697473","id":983,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18424:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""},"value":"SafeCast: value doesn't fit in 240 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_375fa0f6cb9fb5845d214c630920cedf4424913ed6dc32c297d430efa3d61a87","typeString":"literal_string \"SafeCast: value doesn't fit in 240 bits\""}],"id":979,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18395:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":984,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18395:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":985,"nodeType":"ExpressionStatement","src":"18395:71:2"}]},"documentation":{"id":965,"nodeType":"StructuredDocumentation","src":"17920:350:2","text":" @dev Returns the downcasted int240 from int256, reverting on\n overflow (when the input is less than smallest int240 or\n greater than largest int240).\n Counterpart to Solidity's `int240` operator.\n Requirements:\n - input must fit into 240 bits\n _Available since v4.7._"},"id":987,"implemented":true,"kind":"function","modifiers":[],"name":"toInt240","nameLocation":"18284:8:2","nodeType":"FunctionDefinition","parameters":{"id":968,"nodeType":"ParameterList","parameters":[{"constant":false,"id":967,"mutability":"mutable","name":"value","nameLocation":"18300:5:2","nodeType":"VariableDeclaration","scope":987,"src":"18293:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":966,"name":"int256","nodeType":"ElementaryTypeName","src":"18293:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18292:14:2"},"returnParameters":{"id":971,"nodeType":"ParameterList","parameters":[{"constant":false,"id":970,"mutability":"mutable","name":"downcasted","nameLocation":"18337:10:2","nodeType":"VariableDeclaration","scope":987,"src":"18330:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"},"typeName":{"id":969,"name":"int240","nodeType":"ElementaryTypeName","src":"18330:6:2","typeDescriptions":{"typeIdentifier":"t_int240","typeString":"int240"}},"visibility":"internal"}],"src":"18329:19:2"},"scope":1683,"src":"18275:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1009,"nodeType":"Block","src":"18908:124:2","statements":[{"expression":{"id":1000,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":995,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"18918:10:2","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":998,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"18938:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":997,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"18931:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int232_$","typeString":"type(int232)"},"typeName":{"id":996,"name":"int232","nodeType":"ElementaryTypeName","src":"18931:6:2","typeDescriptions":{}}},"id":999,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18931:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"src":"18918:26:2","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"id":1001,"nodeType":"ExpressionStatement","src":"18918:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1005,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1003,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":993,"src":"18962:10:2","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1004,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":990,"src":"18976:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"18962:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203233322062697473","id":1006,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"18983:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""},"value":"SafeCast: value doesn't fit in 232 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5797fb2c4589bd6a92752ce0eacaac67341e37ab28c96c2284ab897e7ac77957","typeString":"literal_string \"SafeCast: value doesn't fit in 232 bits\""}],"id":1002,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"18954:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1007,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"18954:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1008,"nodeType":"ExpressionStatement","src":"18954:71:2"}]},"documentation":{"id":988,"nodeType":"StructuredDocumentation","src":"18479:350:2","text":" @dev Returns the downcasted int232 from int256, reverting on\n overflow (when the input is less than smallest int232 or\n greater than largest int232).\n Counterpart to Solidity's `int232` operator.\n Requirements:\n - input must fit into 232 bits\n _Available since v4.7._"},"id":1010,"implemented":true,"kind":"function","modifiers":[],"name":"toInt232","nameLocation":"18843:8:2","nodeType":"FunctionDefinition","parameters":{"id":991,"nodeType":"ParameterList","parameters":[{"constant":false,"id":990,"mutability":"mutable","name":"value","nameLocation":"18859:5:2","nodeType":"VariableDeclaration","scope":1010,"src":"18852:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":989,"name":"int256","nodeType":"ElementaryTypeName","src":"18852:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"18851:14:2"},"returnParameters":{"id":994,"nodeType":"ParameterList","parameters":[{"constant":false,"id":993,"mutability":"mutable","name":"downcasted","nameLocation":"18896:10:2","nodeType":"VariableDeclaration","scope":1010,"src":"18889:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"},"typeName":{"id":992,"name":"int232","nodeType":"ElementaryTypeName","src":"18889:6:2","typeDescriptions":{"typeIdentifier":"t_int232","typeString":"int232"}},"visibility":"internal"}],"src":"18888:19:2"},"scope":1683,"src":"18834:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1032,"nodeType":"Block","src":"19467:124:2","statements":[{"expression":{"id":1023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1018,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"19477:10:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1021,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"19497:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1020,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"19490:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int224_$","typeString":"type(int224)"},"typeName":{"id":1019,"name":"int224","nodeType":"ElementaryTypeName","src":"19490:6:2","typeDescriptions":{}}},"id":1022,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19490:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"src":"19477:26:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"id":1024,"nodeType":"ExpressionStatement","src":"19477:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1028,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1026,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1016,"src":"19521:10:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1027,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1013,"src":"19535:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"19521:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203232342062697473","id":1029,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"19542:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""},"value":"SafeCast: value doesn't fit in 224 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_9d2acf551b2466898443b9bc3a403a4d86037386bc5a8960c1bbb0f204e69b79","typeString":"literal_string \"SafeCast: value doesn't fit in 224 bits\""}],"id":1025,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"19513:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1030,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"19513:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1031,"nodeType":"ExpressionStatement","src":"19513:71:2"}]},"documentation":{"id":1011,"nodeType":"StructuredDocumentation","src":"19038:350:2","text":" @dev Returns the downcasted int224 from int256, reverting on\n overflow (when the input is less than smallest int224 or\n greater than largest int224).\n Counterpart to Solidity's `int224` operator.\n Requirements:\n - input must fit into 224 bits\n _Available since v4.7._"},"id":1033,"implemented":true,"kind":"function","modifiers":[],"name":"toInt224","nameLocation":"19402:8:2","nodeType":"FunctionDefinition","parameters":{"id":1014,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1013,"mutability":"mutable","name":"value","nameLocation":"19418:5:2","nodeType":"VariableDeclaration","scope":1033,"src":"19411:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1012,"name":"int256","nodeType":"ElementaryTypeName","src":"19411:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19410:14:2"},"returnParameters":{"id":1017,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1016,"mutability":"mutable","name":"downcasted","nameLocation":"19455:10:2","nodeType":"VariableDeclaration","scope":1033,"src":"19448:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"},"typeName":{"id":1015,"name":"int224","nodeType":"ElementaryTypeName","src":"19448:6:2","typeDescriptions":{"typeIdentifier":"t_int224","typeString":"int224"}},"visibility":"internal"}],"src":"19447:19:2"},"scope":1683,"src":"19393:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1055,"nodeType":"Block","src":"20026:124:2","statements":[{"expression":{"id":1046,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1041,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"20036:10:2","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1044,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"20056:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1043,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20049:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int216_$","typeString":"type(int216)"},"typeName":{"id":1042,"name":"int216","nodeType":"ElementaryTypeName","src":"20049:6:2","typeDescriptions":{}}},"id":1045,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20049:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"src":"20036:26:2","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"id":1047,"nodeType":"ExpressionStatement","src":"20036:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1051,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1049,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1039,"src":"20080:10:2","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1050,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1036,"src":"20094:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20080:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203231362062697473","id":1052,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20101:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""},"value":"SafeCast: value doesn't fit in 216 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8966adc0aad8dc91b207c69c3eb4937e498af8cc706cfe7edd55f3a6ea53488d","typeString":"literal_string \"SafeCast: value doesn't fit in 216 bits\""}],"id":1048,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20072:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1053,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20072:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1054,"nodeType":"ExpressionStatement","src":"20072:71:2"}]},"documentation":{"id":1034,"nodeType":"StructuredDocumentation","src":"19597:350:2","text":" @dev Returns the downcasted int216 from int256, reverting on\n overflow (when the input is less than smallest int216 or\n greater than largest int216).\n Counterpart to Solidity's `int216` operator.\n Requirements:\n - input must fit into 216 bits\n _Available since v4.7._"},"id":1056,"implemented":true,"kind":"function","modifiers":[],"name":"toInt216","nameLocation":"19961:8:2","nodeType":"FunctionDefinition","parameters":{"id":1037,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1036,"mutability":"mutable","name":"value","nameLocation":"19977:5:2","nodeType":"VariableDeclaration","scope":1056,"src":"19970:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1035,"name":"int256","nodeType":"ElementaryTypeName","src":"19970:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"19969:14:2"},"returnParameters":{"id":1040,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1039,"mutability":"mutable","name":"downcasted","nameLocation":"20014:10:2","nodeType":"VariableDeclaration","scope":1056,"src":"20007:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"},"typeName":{"id":1038,"name":"int216","nodeType":"ElementaryTypeName","src":"20007:6:2","typeDescriptions":{"typeIdentifier":"t_int216","typeString":"int216"}},"visibility":"internal"}],"src":"20006:19:2"},"scope":1683,"src":"19952:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1078,"nodeType":"Block","src":"20585:124:2","statements":[{"expression":{"id":1069,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1064,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"20595:10:2","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1067,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"20615:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1066,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"20608:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int208_$","typeString":"type(int208)"},"typeName":{"id":1065,"name":"int208","nodeType":"ElementaryTypeName","src":"20608:6:2","typeDescriptions":{}}},"id":1068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20608:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"src":"20595:26:2","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"id":1070,"nodeType":"ExpressionStatement","src":"20595:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1074,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1072,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1062,"src":"20639:10:2","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1073,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1059,"src":"20653:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"20639:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230382062697473","id":1075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"20660:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""},"value":"SafeCast: value doesn't fit in 208 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_43d81217fa633fa1c6e88855de94fb990f5831ac266b0a90afa660e986ab5e23","typeString":"literal_string \"SafeCast: value doesn't fit in 208 bits\""}],"id":1071,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"20631:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1076,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"20631:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1077,"nodeType":"ExpressionStatement","src":"20631:71:2"}]},"documentation":{"id":1057,"nodeType":"StructuredDocumentation","src":"20156:350:2","text":" @dev Returns the downcasted int208 from int256, reverting on\n overflow (when the input is less than smallest int208 or\n greater than largest int208).\n Counterpart to Solidity's `int208` operator.\n Requirements:\n - input must fit into 208 bits\n _Available since v4.7._"},"id":1079,"implemented":true,"kind":"function","modifiers":[],"name":"toInt208","nameLocation":"20520:8:2","nodeType":"FunctionDefinition","parameters":{"id":1060,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1059,"mutability":"mutable","name":"value","nameLocation":"20536:5:2","nodeType":"VariableDeclaration","scope":1079,"src":"20529:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1058,"name":"int256","nodeType":"ElementaryTypeName","src":"20529:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"20528:14:2"},"returnParameters":{"id":1063,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1062,"mutability":"mutable","name":"downcasted","nameLocation":"20573:10:2","nodeType":"VariableDeclaration","scope":1079,"src":"20566:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"},"typeName":{"id":1061,"name":"int208","nodeType":"ElementaryTypeName","src":"20566:6:2","typeDescriptions":{"typeIdentifier":"t_int208","typeString":"int208"}},"visibility":"internal"}],"src":"20565:19:2"},"scope":1683,"src":"20511:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1101,"nodeType":"Block","src":"21144:124:2","statements":[{"expression":{"id":1092,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1087,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"21154:10:2","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1090,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"21174:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1089,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21167:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int200_$","typeString":"type(int200)"},"typeName":{"id":1088,"name":"int200","nodeType":"ElementaryTypeName","src":"21167:6:2","typeDescriptions":{}}},"id":1091,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21167:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"src":"21154:26:2","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"id":1093,"nodeType":"ExpressionStatement","src":"21154:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1097,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1095,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1085,"src":"21198:10:2","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1096,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1082,"src":"21212:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21198:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203230302062697473","id":1098,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21219:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""},"value":"SafeCast: value doesn't fit in 200 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_df8130f294fe2698967ea9ead82c4da9454490567d976d00551e0174e655314c","typeString":"literal_string \"SafeCast: value doesn't fit in 200 bits\""}],"id":1094,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21190:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1099,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21190:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1100,"nodeType":"ExpressionStatement","src":"21190:71:2"}]},"documentation":{"id":1080,"nodeType":"StructuredDocumentation","src":"20715:350:2","text":" @dev Returns the downcasted int200 from int256, reverting on\n overflow (when the input is less than smallest int200 or\n greater than largest int200).\n Counterpart to Solidity's `int200` operator.\n Requirements:\n - input must fit into 200 bits\n _Available since v4.7._"},"id":1102,"implemented":true,"kind":"function","modifiers":[],"name":"toInt200","nameLocation":"21079:8:2","nodeType":"FunctionDefinition","parameters":{"id":1083,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1082,"mutability":"mutable","name":"value","nameLocation":"21095:5:2","nodeType":"VariableDeclaration","scope":1102,"src":"21088:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1081,"name":"int256","nodeType":"ElementaryTypeName","src":"21088:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21087:14:2"},"returnParameters":{"id":1086,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1085,"mutability":"mutable","name":"downcasted","nameLocation":"21132:10:2","nodeType":"VariableDeclaration","scope":1102,"src":"21125:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"},"typeName":{"id":1084,"name":"int200","nodeType":"ElementaryTypeName","src":"21125:6:2","typeDescriptions":{"typeIdentifier":"t_int200","typeString":"int200"}},"visibility":"internal"}],"src":"21124:19:2"},"scope":1683,"src":"21070:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1124,"nodeType":"Block","src":"21703:124:2","statements":[{"expression":{"id":1115,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1110,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"21713:10:2","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1113,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"21733:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1112,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"21726:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int192_$","typeString":"type(int192)"},"typeName":{"id":1111,"name":"int192","nodeType":"ElementaryTypeName","src":"21726:6:2","typeDescriptions":{}}},"id":1114,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21726:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"src":"21713:26:2","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"id":1116,"nodeType":"ExpressionStatement","src":"21713:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1120,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1118,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1108,"src":"21757:10:2","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1119,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1105,"src":"21771:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"21757:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203139322062697473","id":1121,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"21778:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""},"value":"SafeCast: value doesn't fit in 192 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_112978800f12a1c4f1eab82789f7b6defd49dc1c17ba270a84ffc28392fb05ae","typeString":"literal_string \"SafeCast: value doesn't fit in 192 bits\""}],"id":1117,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"21749:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1122,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"21749:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1123,"nodeType":"ExpressionStatement","src":"21749:71:2"}]},"documentation":{"id":1103,"nodeType":"StructuredDocumentation","src":"21274:350:2","text":" @dev Returns the downcasted int192 from int256, reverting on\n overflow (when the input is less than smallest int192 or\n greater than largest int192).\n Counterpart to Solidity's `int192` operator.\n Requirements:\n - input must fit into 192 bits\n _Available since v4.7._"},"id":1125,"implemented":true,"kind":"function","modifiers":[],"name":"toInt192","nameLocation":"21638:8:2","nodeType":"FunctionDefinition","parameters":{"id":1106,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1105,"mutability":"mutable","name":"value","nameLocation":"21654:5:2","nodeType":"VariableDeclaration","scope":1125,"src":"21647:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1104,"name":"int256","nodeType":"ElementaryTypeName","src":"21647:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"21646:14:2"},"returnParameters":{"id":1109,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1108,"mutability":"mutable","name":"downcasted","nameLocation":"21691:10:2","nodeType":"VariableDeclaration","scope":1125,"src":"21684:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"},"typeName":{"id":1107,"name":"int192","nodeType":"ElementaryTypeName","src":"21684:6:2","typeDescriptions":{"typeIdentifier":"t_int192","typeString":"int192"}},"visibility":"internal"}],"src":"21683:19:2"},"scope":1683,"src":"21629:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1147,"nodeType":"Block","src":"22262:124:2","statements":[{"expression":{"id":1138,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1133,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"22272:10:2","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1136,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"22292:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1135,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22285:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int184_$","typeString":"type(int184)"},"typeName":{"id":1134,"name":"int184","nodeType":"ElementaryTypeName","src":"22285:6:2","typeDescriptions":{}}},"id":1137,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22285:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"src":"22272:26:2","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"id":1139,"nodeType":"ExpressionStatement","src":"22272:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1143,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1141,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1131,"src":"22316:10:2","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1142,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1128,"src":"22330:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22316:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203138342062697473","id":1144,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22337:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""},"value":"SafeCast: value doesn't fit in 184 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_86c53d89b1944d561ecfa42e859033241d1df6ea8d42a57ae02f79d45de4aa75","typeString":"literal_string \"SafeCast: value doesn't fit in 184 bits\""}],"id":1140,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22308:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1145,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22308:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1146,"nodeType":"ExpressionStatement","src":"22308:71:2"}]},"documentation":{"id":1126,"nodeType":"StructuredDocumentation","src":"21833:350:2","text":" @dev Returns the downcasted int184 from int256, reverting on\n overflow (when the input is less than smallest int184 or\n greater than largest int184).\n Counterpart to Solidity's `int184` operator.\n Requirements:\n - input must fit into 184 bits\n _Available since v4.7._"},"id":1148,"implemented":true,"kind":"function","modifiers":[],"name":"toInt184","nameLocation":"22197:8:2","nodeType":"FunctionDefinition","parameters":{"id":1129,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1128,"mutability":"mutable","name":"value","nameLocation":"22213:5:2","nodeType":"VariableDeclaration","scope":1148,"src":"22206:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1127,"name":"int256","nodeType":"ElementaryTypeName","src":"22206:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22205:14:2"},"returnParameters":{"id":1132,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1131,"mutability":"mutable","name":"downcasted","nameLocation":"22250:10:2","nodeType":"VariableDeclaration","scope":1148,"src":"22243:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"},"typeName":{"id":1130,"name":"int184","nodeType":"ElementaryTypeName","src":"22243:6:2","typeDescriptions":{"typeIdentifier":"t_int184","typeString":"int184"}},"visibility":"internal"}],"src":"22242:19:2"},"scope":1683,"src":"22188:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1170,"nodeType":"Block","src":"22821:124:2","statements":[{"expression":{"id":1161,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1156,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"22831:10:2","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1159,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"22851:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1158,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"22844:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int176_$","typeString":"type(int176)"},"typeName":{"id":1157,"name":"int176","nodeType":"ElementaryTypeName","src":"22844:6:2","typeDescriptions":{}}},"id":1160,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22844:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"src":"22831:26:2","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"id":1162,"nodeType":"ExpressionStatement","src":"22831:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1166,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1164,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1154,"src":"22875:10:2","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1165,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1151,"src":"22889:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"22875:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203137362062697473","id":1167,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"22896:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""},"value":"SafeCast: value doesn't fit in 176 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_4069e970f734339c7841e84a1b26f503bff22b76884c1168dc24e2e6af9b1e30","typeString":"literal_string \"SafeCast: value doesn't fit in 176 bits\""}],"id":1163,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"22867:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1168,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"22867:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1169,"nodeType":"ExpressionStatement","src":"22867:71:2"}]},"documentation":{"id":1149,"nodeType":"StructuredDocumentation","src":"22392:350:2","text":" @dev Returns the downcasted int176 from int256, reverting on\n overflow (when the input is less than smallest int176 or\n greater than largest int176).\n Counterpart to Solidity's `int176` operator.\n Requirements:\n - input must fit into 176 bits\n _Available since v4.7._"},"id":1171,"implemented":true,"kind":"function","modifiers":[],"name":"toInt176","nameLocation":"22756:8:2","nodeType":"FunctionDefinition","parameters":{"id":1152,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1151,"mutability":"mutable","name":"value","nameLocation":"22772:5:2","nodeType":"VariableDeclaration","scope":1171,"src":"22765:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1150,"name":"int256","nodeType":"ElementaryTypeName","src":"22765:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"22764:14:2"},"returnParameters":{"id":1155,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1154,"mutability":"mutable","name":"downcasted","nameLocation":"22809:10:2","nodeType":"VariableDeclaration","scope":1171,"src":"22802:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"},"typeName":{"id":1153,"name":"int176","nodeType":"ElementaryTypeName","src":"22802:6:2","typeDescriptions":{"typeIdentifier":"t_int176","typeString":"int176"}},"visibility":"internal"}],"src":"22801:19:2"},"scope":1683,"src":"22747:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1193,"nodeType":"Block","src":"23380:124:2","statements":[{"expression":{"id":1184,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1179,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"23390:10:2","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1182,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"23410:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1181,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23403:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int168_$","typeString":"type(int168)"},"typeName":{"id":1180,"name":"int168","nodeType":"ElementaryTypeName","src":"23403:6:2","typeDescriptions":{}}},"id":1183,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23403:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"src":"23390:26:2","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"id":1185,"nodeType":"ExpressionStatement","src":"23390:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1189,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1187,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1177,"src":"23434:10:2","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1188,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1174,"src":"23448:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23434:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136382062697473","id":1190,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"23455:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""},"value":"SafeCast: value doesn't fit in 168 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_67ef32a3cbe7b34392347d335b0a7ae95c74a34ca40e4efb58f6c9a3154e85a1","typeString":"literal_string \"SafeCast: value doesn't fit in 168 bits\""}],"id":1186,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23426:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1191,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23426:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1192,"nodeType":"ExpressionStatement","src":"23426:71:2"}]},"documentation":{"id":1172,"nodeType":"StructuredDocumentation","src":"22951:350:2","text":" @dev Returns the downcasted int168 from int256, reverting on\n overflow (when the input is less than smallest int168 or\n greater than largest int168).\n Counterpart to Solidity's `int168` operator.\n Requirements:\n - input must fit into 168 bits\n _Available since v4.7._"},"id":1194,"implemented":true,"kind":"function","modifiers":[],"name":"toInt168","nameLocation":"23315:8:2","nodeType":"FunctionDefinition","parameters":{"id":1175,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1174,"mutability":"mutable","name":"value","nameLocation":"23331:5:2","nodeType":"VariableDeclaration","scope":1194,"src":"23324:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1173,"name":"int256","nodeType":"ElementaryTypeName","src":"23324:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23323:14:2"},"returnParameters":{"id":1178,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1177,"mutability":"mutable","name":"downcasted","nameLocation":"23368:10:2","nodeType":"VariableDeclaration","scope":1194,"src":"23361:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"},"typeName":{"id":1176,"name":"int168","nodeType":"ElementaryTypeName","src":"23361:6:2","typeDescriptions":{"typeIdentifier":"t_int168","typeString":"int168"}},"visibility":"internal"}],"src":"23360:19:2"},"scope":1683,"src":"23306:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1216,"nodeType":"Block","src":"23939:124:2","statements":[{"expression":{"id":1207,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1202,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"23949:10:2","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1205,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"23969:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1204,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"23962:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int160_$","typeString":"type(int160)"},"typeName":{"id":1203,"name":"int160","nodeType":"ElementaryTypeName","src":"23962:6:2","typeDescriptions":{}}},"id":1206,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23962:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"src":"23949:26:2","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"id":1208,"nodeType":"ExpressionStatement","src":"23949:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1212,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1210,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1200,"src":"23993:10:2","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1211,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1197,"src":"24007:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"23993:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203136302062697473","id":1213,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24014:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""},"value":"SafeCast: value doesn't fit in 160 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_976ecce9083debfe29d3a99b955facf24b8725f1b964d1a5bb4197ffcd60ab9d","typeString":"literal_string \"SafeCast: value doesn't fit in 160 bits\""}],"id":1209,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"23985:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1214,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"23985:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1215,"nodeType":"ExpressionStatement","src":"23985:71:2"}]},"documentation":{"id":1195,"nodeType":"StructuredDocumentation","src":"23510:350:2","text":" @dev Returns the downcasted int160 from int256, reverting on\n overflow (when the input is less than smallest int160 or\n greater than largest int160).\n Counterpart to Solidity's `int160` operator.\n Requirements:\n - input must fit into 160 bits\n _Available since v4.7._"},"id":1217,"implemented":true,"kind":"function","modifiers":[],"name":"toInt160","nameLocation":"23874:8:2","nodeType":"FunctionDefinition","parameters":{"id":1198,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1197,"mutability":"mutable","name":"value","nameLocation":"23890:5:2","nodeType":"VariableDeclaration","scope":1217,"src":"23883:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1196,"name":"int256","nodeType":"ElementaryTypeName","src":"23883:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"23882:14:2"},"returnParameters":{"id":1201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1200,"mutability":"mutable","name":"downcasted","nameLocation":"23927:10:2","nodeType":"VariableDeclaration","scope":1217,"src":"23920:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"},"typeName":{"id":1199,"name":"int160","nodeType":"ElementaryTypeName","src":"23920:6:2","typeDescriptions":{"typeIdentifier":"t_int160","typeString":"int160"}},"visibility":"internal"}],"src":"23919:19:2"},"scope":1683,"src":"23865:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1239,"nodeType":"Block","src":"24498:124:2","statements":[{"expression":{"id":1230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1225,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"24508:10:2","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1228,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"24528:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1227,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"24521:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int152_$","typeString":"type(int152)"},"typeName":{"id":1226,"name":"int152","nodeType":"ElementaryTypeName","src":"24521:6:2","typeDescriptions":{}}},"id":1229,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24521:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"src":"24508:26:2","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"id":1231,"nodeType":"ExpressionStatement","src":"24508:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1235,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1233,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1223,"src":"24552:10:2","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1234,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1220,"src":"24566:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"24552:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203135322062697473","id":1236,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"24573:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""},"value":"SafeCast: value doesn't fit in 152 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_211cad43a2caf5f01e34af51190b8a7b6f3d9c195bd25586ea12242191b97831","typeString":"literal_string \"SafeCast: value doesn't fit in 152 bits\""}],"id":1232,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"24544:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1237,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"24544:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1238,"nodeType":"ExpressionStatement","src":"24544:71:2"}]},"documentation":{"id":1218,"nodeType":"StructuredDocumentation","src":"24069:350:2","text":" @dev Returns the downcasted int152 from int256, reverting on\n overflow (when the input is less than smallest int152 or\n greater than largest int152).\n Counterpart to Solidity's `int152` operator.\n Requirements:\n - input must fit into 152 bits\n _Available since v4.7._"},"id":1240,"implemented":true,"kind":"function","modifiers":[],"name":"toInt152","nameLocation":"24433:8:2","nodeType":"FunctionDefinition","parameters":{"id":1221,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1220,"mutability":"mutable","name":"value","nameLocation":"24449:5:2","nodeType":"VariableDeclaration","scope":1240,"src":"24442:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1219,"name":"int256","nodeType":"ElementaryTypeName","src":"24442:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"24441:14:2"},"returnParameters":{"id":1224,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1223,"mutability":"mutable","name":"downcasted","nameLocation":"24486:10:2","nodeType":"VariableDeclaration","scope":1240,"src":"24479:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"},"typeName":{"id":1222,"name":"int152","nodeType":"ElementaryTypeName","src":"24479:6:2","typeDescriptions":{"typeIdentifier":"t_int152","typeString":"int152"}},"visibility":"internal"}],"src":"24478:19:2"},"scope":1683,"src":"24424:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1262,"nodeType":"Block","src":"25057:124:2","statements":[{"expression":{"id":1253,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1248,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"25067:10:2","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1251,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"25087:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1250,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25080:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int144_$","typeString":"type(int144)"},"typeName":{"id":1249,"name":"int144","nodeType":"ElementaryTypeName","src":"25080:6:2","typeDescriptions":{}}},"id":1252,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25080:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"src":"25067:26:2","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"id":1254,"nodeType":"ExpressionStatement","src":"25067:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1258,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1256,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1246,"src":"25111:10:2","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1257,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1243,"src":"25125:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25111:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203134342062697473","id":1259,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25132:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""},"value":"SafeCast: value doesn't fit in 144 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_17d8c5a6d3b2fd2517ba2e4a2ac70a3367cd362448f8338aaa6edf8bfd812bab","typeString":"literal_string \"SafeCast: value doesn't fit in 144 bits\""}],"id":1255,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25103:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1260,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25103:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1261,"nodeType":"ExpressionStatement","src":"25103:71:2"}]},"documentation":{"id":1241,"nodeType":"StructuredDocumentation","src":"24628:350:2","text":" @dev Returns the downcasted int144 from int256, reverting on\n overflow (when the input is less than smallest int144 or\n greater than largest int144).\n Counterpart to Solidity's `int144` operator.\n Requirements:\n - input must fit into 144 bits\n _Available since v4.7._"},"id":1263,"implemented":true,"kind":"function","modifiers":[],"name":"toInt144","nameLocation":"24992:8:2","nodeType":"FunctionDefinition","parameters":{"id":1244,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1243,"mutability":"mutable","name":"value","nameLocation":"25008:5:2","nodeType":"VariableDeclaration","scope":1263,"src":"25001:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1242,"name":"int256","nodeType":"ElementaryTypeName","src":"25001:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25000:14:2"},"returnParameters":{"id":1247,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1246,"mutability":"mutable","name":"downcasted","nameLocation":"25045:10:2","nodeType":"VariableDeclaration","scope":1263,"src":"25038:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"},"typeName":{"id":1245,"name":"int144","nodeType":"ElementaryTypeName","src":"25038:6:2","typeDescriptions":{"typeIdentifier":"t_int144","typeString":"int144"}},"visibility":"internal"}],"src":"25037:19:2"},"scope":1683,"src":"24983:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1285,"nodeType":"Block","src":"25616:124:2","statements":[{"expression":{"id":1276,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1271,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"25626:10:2","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1274,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"25646:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1273,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"25639:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int136_$","typeString":"type(int136)"},"typeName":{"id":1272,"name":"int136","nodeType":"ElementaryTypeName","src":"25639:6:2","typeDescriptions":{}}},"id":1275,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25639:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"src":"25626:26:2","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"id":1277,"nodeType":"ExpressionStatement","src":"25626:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1281,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1279,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1269,"src":"25670:10:2","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1280,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1266,"src":"25684:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"25670:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203133362062697473","id":1282,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"25691:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""},"value":"SafeCast: value doesn't fit in 136 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_8b1f81e2e2913e1cee9dba7bcd9837bbf8a8122edaac4afc578271db3c25a56a","typeString":"literal_string \"SafeCast: value doesn't fit in 136 bits\""}],"id":1278,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"25662:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1283,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"25662:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1284,"nodeType":"ExpressionStatement","src":"25662:71:2"}]},"documentation":{"id":1264,"nodeType":"StructuredDocumentation","src":"25187:350:2","text":" @dev Returns the downcasted int136 from int256, reverting on\n overflow (when the input is less than smallest int136 or\n greater than largest int136).\n Counterpart to Solidity's `int136` operator.\n Requirements:\n - input must fit into 136 bits\n _Available since v4.7._"},"id":1286,"implemented":true,"kind":"function","modifiers":[],"name":"toInt136","nameLocation":"25551:8:2","nodeType":"FunctionDefinition","parameters":{"id":1267,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1266,"mutability":"mutable","name":"value","nameLocation":"25567:5:2","nodeType":"VariableDeclaration","scope":1286,"src":"25560:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1265,"name":"int256","nodeType":"ElementaryTypeName","src":"25560:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"25559:14:2"},"returnParameters":{"id":1270,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1269,"mutability":"mutable","name":"downcasted","nameLocation":"25604:10:2","nodeType":"VariableDeclaration","scope":1286,"src":"25597:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"},"typeName":{"id":1268,"name":"int136","nodeType":"ElementaryTypeName","src":"25597:6:2","typeDescriptions":{"typeIdentifier":"t_int136","typeString":"int136"}},"visibility":"internal"}],"src":"25596:19:2"},"scope":1683,"src":"25542:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1308,"nodeType":"Block","src":"26175:124:2","statements":[{"expression":{"id":1299,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1294,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"26185:10:2","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1297,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"26205:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1296,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26198:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int128_$","typeString":"type(int128)"},"typeName":{"id":1295,"name":"int128","nodeType":"ElementaryTypeName","src":"26198:6:2","typeDescriptions":{}}},"id":1298,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26198:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"src":"26185:26:2","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"id":1300,"nodeType":"ExpressionStatement","src":"26185:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1304,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1302,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1292,"src":"26229:10:2","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1303,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1289,"src":"26243:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26229:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132382062697473","id":1305,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26250:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""},"value":"SafeCast: value doesn't fit in 128 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_47a1e201974f94d3d1a31c8b08ae18c6966c758bdcd4400020012b98cc55426c","typeString":"literal_string \"SafeCast: value doesn't fit in 128 bits\""}],"id":1301,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26221:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1306,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26221:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1307,"nodeType":"ExpressionStatement","src":"26221:71:2"}]},"documentation":{"id":1287,"nodeType":"StructuredDocumentation","src":"25746:350:2","text":" @dev Returns the downcasted int128 from int256, reverting on\n overflow (when the input is less than smallest int128 or\n greater than largest int128).\n Counterpart to Solidity's `int128` operator.\n Requirements:\n - input must fit into 128 bits\n _Available since v3.1._"},"id":1309,"implemented":true,"kind":"function","modifiers":[],"name":"toInt128","nameLocation":"26110:8:2","nodeType":"FunctionDefinition","parameters":{"id":1290,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1289,"mutability":"mutable","name":"value","nameLocation":"26126:5:2","nodeType":"VariableDeclaration","scope":1309,"src":"26119:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1288,"name":"int256","nodeType":"ElementaryTypeName","src":"26119:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26118:14:2"},"returnParameters":{"id":1293,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1292,"mutability":"mutable","name":"downcasted","nameLocation":"26163:10:2","nodeType":"VariableDeclaration","scope":1309,"src":"26156:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"},"typeName":{"id":1291,"name":"int128","nodeType":"ElementaryTypeName","src":"26156:6:2","typeDescriptions":{"typeIdentifier":"t_int128","typeString":"int128"}},"visibility":"internal"}],"src":"26155:19:2"},"scope":1683,"src":"26101:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1331,"nodeType":"Block","src":"26734:124:2","statements":[{"expression":{"id":1322,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1317,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"26744:10:2","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1320,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"26764:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1319,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"26757:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int120_$","typeString":"type(int120)"},"typeName":{"id":1318,"name":"int120","nodeType":"ElementaryTypeName","src":"26757:6:2","typeDescriptions":{}}},"id":1321,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26757:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"src":"26744:26:2","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"id":1323,"nodeType":"ExpressionStatement","src":"26744:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1327,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1325,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1315,"src":"26788:10:2","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1326,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1312,"src":"26802:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"26788:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203132302062697473","id":1328,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"26809:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""},"value":"SafeCast: value doesn't fit in 120 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3c40c26bb27060cce77002ca0c426dcc1bef2d367c195ca2eb24bd8b2cc1bb09","typeString":"literal_string \"SafeCast: value doesn't fit in 120 bits\""}],"id":1324,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"26780:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1329,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"26780:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1330,"nodeType":"ExpressionStatement","src":"26780:71:2"}]},"documentation":{"id":1310,"nodeType":"StructuredDocumentation","src":"26305:350:2","text":" @dev Returns the downcasted int120 from int256, reverting on\n overflow (when the input is less than smallest int120 or\n greater than largest int120).\n Counterpart to Solidity's `int120` operator.\n Requirements:\n - input must fit into 120 bits\n _Available since v4.7._"},"id":1332,"implemented":true,"kind":"function","modifiers":[],"name":"toInt120","nameLocation":"26669:8:2","nodeType":"FunctionDefinition","parameters":{"id":1313,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1312,"mutability":"mutable","name":"value","nameLocation":"26685:5:2","nodeType":"VariableDeclaration","scope":1332,"src":"26678:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1311,"name":"int256","nodeType":"ElementaryTypeName","src":"26678:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"26677:14:2"},"returnParameters":{"id":1316,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1315,"mutability":"mutable","name":"downcasted","nameLocation":"26722:10:2","nodeType":"VariableDeclaration","scope":1332,"src":"26715:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"},"typeName":{"id":1314,"name":"int120","nodeType":"ElementaryTypeName","src":"26715:6:2","typeDescriptions":{"typeIdentifier":"t_int120","typeString":"int120"}},"visibility":"internal"}],"src":"26714:19:2"},"scope":1683,"src":"26660:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1354,"nodeType":"Block","src":"27293:124:2","statements":[{"expression":{"id":1345,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1340,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"27303:10:2","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1343,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"27323:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1342,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27316:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int112_$","typeString":"type(int112)"},"typeName":{"id":1341,"name":"int112","nodeType":"ElementaryTypeName","src":"27316:6:2","typeDescriptions":{}}},"id":1344,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27316:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"src":"27303:26:2","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"id":1346,"nodeType":"ExpressionStatement","src":"27303:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1350,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1348,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1338,"src":"27347:10:2","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1349,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1335,"src":"27361:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27347:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203131322062697473","id":1351,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27368:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""},"value":"SafeCast: value doesn't fit in 112 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_45659ae152ef697531e1c1115de07c87af91ac22466c3e76b808821799776efd","typeString":"literal_string \"SafeCast: value doesn't fit in 112 bits\""}],"id":1347,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27339:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1352,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27339:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1353,"nodeType":"ExpressionStatement","src":"27339:71:2"}]},"documentation":{"id":1333,"nodeType":"StructuredDocumentation","src":"26864:350:2","text":" @dev Returns the downcasted int112 from int256, reverting on\n overflow (when the input is less than smallest int112 or\n greater than largest int112).\n Counterpart to Solidity's `int112` operator.\n Requirements:\n - input must fit into 112 bits\n _Available since v4.7._"},"id":1355,"implemented":true,"kind":"function","modifiers":[],"name":"toInt112","nameLocation":"27228:8:2","nodeType":"FunctionDefinition","parameters":{"id":1336,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1335,"mutability":"mutable","name":"value","nameLocation":"27244:5:2","nodeType":"VariableDeclaration","scope":1355,"src":"27237:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1334,"name":"int256","nodeType":"ElementaryTypeName","src":"27237:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27236:14:2"},"returnParameters":{"id":1339,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1338,"mutability":"mutable","name":"downcasted","nameLocation":"27281:10:2","nodeType":"VariableDeclaration","scope":1355,"src":"27274:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"},"typeName":{"id":1337,"name":"int112","nodeType":"ElementaryTypeName","src":"27274:6:2","typeDescriptions":{"typeIdentifier":"t_int112","typeString":"int112"}},"visibility":"internal"}],"src":"27273:19:2"},"scope":1683,"src":"27219:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1377,"nodeType":"Block","src":"27852:124:2","statements":[{"expression":{"id":1368,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1363,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"27862:10:2","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1366,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"27882:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1365,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"27875:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int104_$","typeString":"type(int104)"},"typeName":{"id":1364,"name":"int104","nodeType":"ElementaryTypeName","src":"27875:6:2","typeDescriptions":{}}},"id":1367,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27875:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"src":"27862:26:2","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"id":1369,"nodeType":"ExpressionStatement","src":"27862:26:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1373,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1371,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1361,"src":"27906:10:2","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1372,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1358,"src":"27920:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"27906:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e203130342062697473","id":1374,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"27927:41:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""},"value":"SafeCast: value doesn't fit in 104 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_5d7f3e1b7e9f9a06fded6b093c6fd1473ca0a14cc4bb683db904e803e2482981","typeString":"literal_string \"SafeCast: value doesn't fit in 104 bits\""}],"id":1370,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"27898:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1375,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"27898:71:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1376,"nodeType":"ExpressionStatement","src":"27898:71:2"}]},"documentation":{"id":1356,"nodeType":"StructuredDocumentation","src":"27423:350:2","text":" @dev Returns the downcasted int104 from int256, reverting on\n overflow (when the input is less than smallest int104 or\n greater than largest int104).\n Counterpart to Solidity's `int104` operator.\n Requirements:\n - input must fit into 104 bits\n _Available since v4.7._"},"id":1378,"implemented":true,"kind":"function","modifiers":[],"name":"toInt104","nameLocation":"27787:8:2","nodeType":"FunctionDefinition","parameters":{"id":1359,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1358,"mutability":"mutable","name":"value","nameLocation":"27803:5:2","nodeType":"VariableDeclaration","scope":1378,"src":"27796:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1357,"name":"int256","nodeType":"ElementaryTypeName","src":"27796:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"27795:14:2"},"returnParameters":{"id":1362,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1361,"mutability":"mutable","name":"downcasted","nameLocation":"27840:10:2","nodeType":"VariableDeclaration","scope":1378,"src":"27833:17:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"},"typeName":{"id":1360,"name":"int104","nodeType":"ElementaryTypeName","src":"27833:6:2","typeDescriptions":{"typeIdentifier":"t_int104","typeString":"int104"}},"visibility":"internal"}],"src":"27832:19:2"},"scope":1683,"src":"27778:198:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1400,"nodeType":"Block","src":"28404:122:2","statements":[{"expression":{"id":1391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1386,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"28414:10:2","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1389,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"28433:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1388,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28427:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int96_$","typeString":"type(int96)"},"typeName":{"id":1387,"name":"int96","nodeType":"ElementaryTypeName","src":"28427:5:2","typeDescriptions":{}}},"id":1390,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28427:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"src":"28414:25:2","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"id":1392,"nodeType":"ExpressionStatement","src":"28414:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1396,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1394,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1384,"src":"28457:10:2","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1395,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1381,"src":"28471:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"28457:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2039362062697473","id":1397,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"28478:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""},"value":"SafeCast: value doesn't fit in 96 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_06d20189090e973729391526269baef79c35dd621633195648e5f8309eef9e19","typeString":"literal_string \"SafeCast: value doesn't fit in 96 bits\""}],"id":1393,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28449:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1398,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28449:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1399,"nodeType":"ExpressionStatement","src":"28449:70:2"}]},"documentation":{"id":1379,"nodeType":"StructuredDocumentation","src":"27982:345:2","text":" @dev Returns the downcasted int96 from int256, reverting on\n overflow (when the input is less than smallest int96 or\n greater than largest int96).\n Counterpart to Solidity's `int96` operator.\n Requirements:\n - input must fit into 96 bits\n _Available since v4.7._"},"id":1401,"implemented":true,"kind":"function","modifiers":[],"name":"toInt96","nameLocation":"28341:7:2","nodeType":"FunctionDefinition","parameters":{"id":1382,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1381,"mutability":"mutable","name":"value","nameLocation":"28356:5:2","nodeType":"VariableDeclaration","scope":1401,"src":"28349:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1380,"name":"int256","nodeType":"ElementaryTypeName","src":"28349:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28348:14:2"},"returnParameters":{"id":1385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1384,"mutability":"mutable","name":"downcasted","nameLocation":"28392:10:2","nodeType":"VariableDeclaration","scope":1401,"src":"28386:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"},"typeName":{"id":1383,"name":"int96","nodeType":"ElementaryTypeName","src":"28386:5:2","typeDescriptions":{"typeIdentifier":"t_int96","typeString":"int96"}},"visibility":"internal"}],"src":"28385:18:2"},"scope":1683,"src":"28332:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1423,"nodeType":"Block","src":"28954:122:2","statements":[{"expression":{"id":1414,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1409,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"28964:10:2","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1412,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"28983:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1411,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"28977:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int88_$","typeString":"type(int88)"},"typeName":{"id":1410,"name":"int88","nodeType":"ElementaryTypeName","src":"28977:5:2","typeDescriptions":{}}},"id":1413,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28977:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"src":"28964:25:2","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"id":1415,"nodeType":"ExpressionStatement","src":"28964:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1419,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1417,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1407,"src":"29007:10:2","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1418,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1404,"src":"29021:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29007:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038382062697473","id":1420,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29028:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""},"value":"SafeCast: value doesn't fit in 88 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_ae080bd7a76a46f0a0caf00941bc2cdf6002799ca2813a3af7295019576d715d","typeString":"literal_string \"SafeCast: value doesn't fit in 88 bits\""}],"id":1416,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"28999:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1421,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"28999:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1422,"nodeType":"ExpressionStatement","src":"28999:70:2"}]},"documentation":{"id":1402,"nodeType":"StructuredDocumentation","src":"28532:345:2","text":" @dev Returns the downcasted int88 from int256, reverting on\n overflow (when the input is less than smallest int88 or\n greater than largest int88).\n Counterpart to Solidity's `int88` operator.\n Requirements:\n - input must fit into 88 bits\n _Available since v4.7._"},"id":1424,"implemented":true,"kind":"function","modifiers":[],"name":"toInt88","nameLocation":"28891:7:2","nodeType":"FunctionDefinition","parameters":{"id":1405,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1404,"mutability":"mutable","name":"value","nameLocation":"28906:5:2","nodeType":"VariableDeclaration","scope":1424,"src":"28899:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1403,"name":"int256","nodeType":"ElementaryTypeName","src":"28899:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"28898:14:2"},"returnParameters":{"id":1408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1407,"mutability":"mutable","name":"downcasted","nameLocation":"28942:10:2","nodeType":"VariableDeclaration","scope":1424,"src":"28936:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"},"typeName":{"id":1406,"name":"int88","nodeType":"ElementaryTypeName","src":"28936:5:2","typeDescriptions":{"typeIdentifier":"t_int88","typeString":"int88"}},"visibility":"internal"}],"src":"28935:18:2"},"scope":1683,"src":"28882:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1446,"nodeType":"Block","src":"29504:122:2","statements":[{"expression":{"id":1437,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1432,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"29514:10:2","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1435,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"29533:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1434,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"29527:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int80_$","typeString":"type(int80)"},"typeName":{"id":1433,"name":"int80","nodeType":"ElementaryTypeName","src":"29527:5:2","typeDescriptions":{}}},"id":1436,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29527:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"src":"29514:25:2","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"id":1438,"nodeType":"ExpressionStatement","src":"29514:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1442,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1440,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1430,"src":"29557:10:2","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1441,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1427,"src":"29571:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"29557:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2038302062697473","id":1443,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"29578:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""},"value":"SafeCast: value doesn't fit in 80 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_3cba87c71fade7d3cd7b673c159aab98afc040a5369691a33559d905d20ab5d1","typeString":"literal_string \"SafeCast: value doesn't fit in 80 bits\""}],"id":1439,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"29549:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1444,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"29549:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1445,"nodeType":"ExpressionStatement","src":"29549:70:2"}]},"documentation":{"id":1425,"nodeType":"StructuredDocumentation","src":"29082:345:2","text":" @dev Returns the downcasted int80 from int256, reverting on\n overflow (when the input is less than smallest int80 or\n greater than largest int80).\n Counterpart to Solidity's `int80` operator.\n Requirements:\n - input must fit into 80 bits\n _Available since v4.7._"},"id":1447,"implemented":true,"kind":"function","modifiers":[],"name":"toInt80","nameLocation":"29441:7:2","nodeType":"FunctionDefinition","parameters":{"id":1428,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1427,"mutability":"mutable","name":"value","nameLocation":"29456:5:2","nodeType":"VariableDeclaration","scope":1447,"src":"29449:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1426,"name":"int256","nodeType":"ElementaryTypeName","src":"29449:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29448:14:2"},"returnParameters":{"id":1431,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1430,"mutability":"mutable","name":"downcasted","nameLocation":"29492:10:2","nodeType":"VariableDeclaration","scope":1447,"src":"29486:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"},"typeName":{"id":1429,"name":"int80","nodeType":"ElementaryTypeName","src":"29486:5:2","typeDescriptions":{"typeIdentifier":"t_int80","typeString":"int80"}},"visibility":"internal"}],"src":"29485:18:2"},"scope":1683,"src":"29432:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1469,"nodeType":"Block","src":"30054:122:2","statements":[{"expression":{"id":1460,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1455,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"30064:10:2","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1458,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"30083:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1457,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30077:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int72_$","typeString":"type(int72)"},"typeName":{"id":1456,"name":"int72","nodeType":"ElementaryTypeName","src":"30077:5:2","typeDescriptions":{}}},"id":1459,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30077:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"src":"30064:25:2","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"id":1461,"nodeType":"ExpressionStatement","src":"30064:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1465,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1463,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1453,"src":"30107:10:2","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1464,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1450,"src":"30121:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30107:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2037322062697473","id":1466,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30128:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""},"value":"SafeCast: value doesn't fit in 72 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_71584237cc5250b8f417982144a947efe8f4c76feba008ff32ac480e69d60606","typeString":"literal_string \"SafeCast: value doesn't fit in 72 bits\""}],"id":1462,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30099:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1467,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30099:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1468,"nodeType":"ExpressionStatement","src":"30099:70:2"}]},"documentation":{"id":1448,"nodeType":"StructuredDocumentation","src":"29632:345:2","text":" @dev Returns the downcasted int72 from int256, reverting on\n overflow (when the input is less than smallest int72 or\n greater than largest int72).\n Counterpart to Solidity's `int72` operator.\n Requirements:\n - input must fit into 72 bits\n _Available since v4.7._"},"id":1470,"implemented":true,"kind":"function","modifiers":[],"name":"toInt72","nameLocation":"29991:7:2","nodeType":"FunctionDefinition","parameters":{"id":1451,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1450,"mutability":"mutable","name":"value","nameLocation":"30006:5:2","nodeType":"VariableDeclaration","scope":1470,"src":"29999:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1449,"name":"int256","nodeType":"ElementaryTypeName","src":"29999:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"29998:14:2"},"returnParameters":{"id":1454,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1453,"mutability":"mutable","name":"downcasted","nameLocation":"30042:10:2","nodeType":"VariableDeclaration","scope":1470,"src":"30036:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"},"typeName":{"id":1452,"name":"int72","nodeType":"ElementaryTypeName","src":"30036:5:2","typeDescriptions":{"typeIdentifier":"t_int72","typeString":"int72"}},"visibility":"internal"}],"src":"30035:18:2"},"scope":1683,"src":"29982:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1492,"nodeType":"Block","src":"30604:122:2","statements":[{"expression":{"id":1483,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1478,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"30614:10:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1481,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"30633:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1480,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"30627:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int64_$","typeString":"type(int64)"},"typeName":{"id":1479,"name":"int64","nodeType":"ElementaryTypeName","src":"30627:5:2","typeDescriptions":{}}},"id":1482,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30627:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"src":"30614:25:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"id":1484,"nodeType":"ExpressionStatement","src":"30614:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1488,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1486,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1476,"src":"30657:10:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1487,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1473,"src":"30671:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"30657:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2036342062697473","id":1489,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"30678:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""},"value":"SafeCast: value doesn't fit in 64 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_93ae0c6bf6ffaece591a770b1865daa9f65157e541970aa9d8dc5f89a9490939","typeString":"literal_string \"SafeCast: value doesn't fit in 64 bits\""}],"id":1485,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"30649:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1490,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"30649:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1491,"nodeType":"ExpressionStatement","src":"30649:70:2"}]},"documentation":{"id":1471,"nodeType":"StructuredDocumentation","src":"30182:345:2","text":" @dev Returns the downcasted int64 from int256, reverting on\n overflow (when the input is less than smallest int64 or\n greater than largest int64).\n Counterpart to Solidity's `int64` operator.\n Requirements:\n - input must fit into 64 bits\n _Available since v3.1._"},"id":1493,"implemented":true,"kind":"function","modifiers":[],"name":"toInt64","nameLocation":"30541:7:2","nodeType":"FunctionDefinition","parameters":{"id":1474,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1473,"mutability":"mutable","name":"value","nameLocation":"30556:5:2","nodeType":"VariableDeclaration","scope":1493,"src":"30549:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1472,"name":"int256","nodeType":"ElementaryTypeName","src":"30549:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"30548:14:2"},"returnParameters":{"id":1477,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1476,"mutability":"mutable","name":"downcasted","nameLocation":"30592:10:2","nodeType":"VariableDeclaration","scope":1493,"src":"30586:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"},"typeName":{"id":1475,"name":"int64","nodeType":"ElementaryTypeName","src":"30586:5:2","typeDescriptions":{"typeIdentifier":"t_int64","typeString":"int64"}},"visibility":"internal"}],"src":"30585:18:2"},"scope":1683,"src":"30532:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1515,"nodeType":"Block","src":"31154:122:2","statements":[{"expression":{"id":1506,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1501,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"31164:10:2","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1504,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"31183:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1503,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31177:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int56_$","typeString":"type(int56)"},"typeName":{"id":1502,"name":"int56","nodeType":"ElementaryTypeName","src":"31177:5:2","typeDescriptions":{}}},"id":1505,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31177:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"src":"31164:25:2","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"id":1507,"nodeType":"ExpressionStatement","src":"31164:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1511,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1509,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1499,"src":"31207:10:2","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1510,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1496,"src":"31221:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31207:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2035362062697473","id":1512,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31228:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""},"value":"SafeCast: value doesn't fit in 56 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_656ad93b5ff6665bfe05d97d51fad7c02ad79e6c43bef066c042a6900f450bc5","typeString":"literal_string \"SafeCast: value doesn't fit in 56 bits\""}],"id":1508,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31199:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1513,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31199:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1514,"nodeType":"ExpressionStatement","src":"31199:70:2"}]},"documentation":{"id":1494,"nodeType":"StructuredDocumentation","src":"30732:345:2","text":" @dev Returns the downcasted int56 from int256, reverting on\n overflow (when the input is less than smallest int56 or\n greater than largest int56).\n Counterpart to Solidity's `int56` operator.\n Requirements:\n - input must fit into 56 bits\n _Available since v4.7._"},"id":1516,"implemented":true,"kind":"function","modifiers":[],"name":"toInt56","nameLocation":"31091:7:2","nodeType":"FunctionDefinition","parameters":{"id":1497,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1496,"mutability":"mutable","name":"value","nameLocation":"31106:5:2","nodeType":"VariableDeclaration","scope":1516,"src":"31099:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1495,"name":"int256","nodeType":"ElementaryTypeName","src":"31099:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31098:14:2"},"returnParameters":{"id":1500,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1499,"mutability":"mutable","name":"downcasted","nameLocation":"31142:10:2","nodeType":"VariableDeclaration","scope":1516,"src":"31136:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"},"typeName":{"id":1498,"name":"int56","nodeType":"ElementaryTypeName","src":"31136:5:2","typeDescriptions":{"typeIdentifier":"t_int56","typeString":"int56"}},"visibility":"internal"}],"src":"31135:18:2"},"scope":1683,"src":"31082:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1538,"nodeType":"Block","src":"31704:122:2","statements":[{"expression":{"id":1529,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1524,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"31714:10:2","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1527,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"31733:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1526,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"31727:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int48_$","typeString":"type(int48)"},"typeName":{"id":1525,"name":"int48","nodeType":"ElementaryTypeName","src":"31727:5:2","typeDescriptions":{}}},"id":1528,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31727:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"src":"31714:25:2","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"id":1530,"nodeType":"ExpressionStatement","src":"31714:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1534,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1532,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1522,"src":"31757:10:2","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1533,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1519,"src":"31771:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"31757:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034382062697473","id":1535,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"31778:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""},"value":"SafeCast: value doesn't fit in 48 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_599034f9324dd4e988c6cea5a00a30f53147fec1b01559682f18cd840028f495","typeString":"literal_string \"SafeCast: value doesn't fit in 48 bits\""}],"id":1531,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"31749:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1536,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"31749:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1537,"nodeType":"ExpressionStatement","src":"31749:70:2"}]},"documentation":{"id":1517,"nodeType":"StructuredDocumentation","src":"31282:345:2","text":" @dev Returns the downcasted int48 from int256, reverting on\n overflow (when the input is less than smallest int48 or\n greater than largest int48).\n Counterpart to Solidity's `int48` operator.\n Requirements:\n - input must fit into 48 bits\n _Available since v4.7._"},"id":1539,"implemented":true,"kind":"function","modifiers":[],"name":"toInt48","nameLocation":"31641:7:2","nodeType":"FunctionDefinition","parameters":{"id":1520,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1519,"mutability":"mutable","name":"value","nameLocation":"31656:5:2","nodeType":"VariableDeclaration","scope":1539,"src":"31649:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1518,"name":"int256","nodeType":"ElementaryTypeName","src":"31649:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"31648:14:2"},"returnParameters":{"id":1523,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1522,"mutability":"mutable","name":"downcasted","nameLocation":"31692:10:2","nodeType":"VariableDeclaration","scope":1539,"src":"31686:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"},"typeName":{"id":1521,"name":"int48","nodeType":"ElementaryTypeName","src":"31686:5:2","typeDescriptions":{"typeIdentifier":"t_int48","typeString":"int48"}},"visibility":"internal"}],"src":"31685:18:2"},"scope":1683,"src":"31632:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1561,"nodeType":"Block","src":"32254:122:2","statements":[{"expression":{"id":1552,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1547,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"32264:10:2","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1550,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"32283:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1549,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32277:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int40_$","typeString":"type(int40)"},"typeName":{"id":1548,"name":"int40","nodeType":"ElementaryTypeName","src":"32277:5:2","typeDescriptions":{}}},"id":1551,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32277:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"src":"32264:25:2","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"id":1553,"nodeType":"ExpressionStatement","src":"32264:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1557,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1555,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1545,"src":"32307:10:2","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1556,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1542,"src":"32321:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32307:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2034302062697473","id":1558,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32328:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""},"value":"SafeCast: value doesn't fit in 40 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_b23559c58b98a5d3ed7016699c7171ac8defa5a1d180f9a9ffa60468a5701d37","typeString":"literal_string \"SafeCast: value doesn't fit in 40 bits\""}],"id":1554,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32299:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1559,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32299:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1560,"nodeType":"ExpressionStatement","src":"32299:70:2"}]},"documentation":{"id":1540,"nodeType":"StructuredDocumentation","src":"31832:345:2","text":" @dev Returns the downcasted int40 from int256, reverting on\n overflow (when the input is less than smallest int40 or\n greater than largest int40).\n Counterpart to Solidity's `int40` operator.\n Requirements:\n - input must fit into 40 bits\n _Available since v4.7._"},"id":1562,"implemented":true,"kind":"function","modifiers":[],"name":"toInt40","nameLocation":"32191:7:2","nodeType":"FunctionDefinition","parameters":{"id":1543,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1542,"mutability":"mutable","name":"value","nameLocation":"32206:5:2","nodeType":"VariableDeclaration","scope":1562,"src":"32199:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1541,"name":"int256","nodeType":"ElementaryTypeName","src":"32199:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32198:14:2"},"returnParameters":{"id":1546,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1545,"mutability":"mutable","name":"downcasted","nameLocation":"32242:10:2","nodeType":"VariableDeclaration","scope":1562,"src":"32236:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"},"typeName":{"id":1544,"name":"int40","nodeType":"ElementaryTypeName","src":"32236:5:2","typeDescriptions":{"typeIdentifier":"t_int40","typeString":"int40"}},"visibility":"internal"}],"src":"32235:18:2"},"scope":1683,"src":"32182:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1584,"nodeType":"Block","src":"32804:122:2","statements":[{"expression":{"id":1575,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1570,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"32814:10:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1573,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"32833:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1572,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"32827:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int32_$","typeString":"type(int32)"},"typeName":{"id":1571,"name":"int32","nodeType":"ElementaryTypeName","src":"32827:5:2","typeDescriptions":{}}},"id":1574,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32827:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"src":"32814:25:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"id":1576,"nodeType":"ExpressionStatement","src":"32814:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1580,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1578,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1568,"src":"32857:10:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1579,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1565,"src":"32871:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"32857:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2033322062697473","id":1581,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"32878:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""},"value":"SafeCast: value doesn't fit in 32 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_c907489dafcfb622d3b83f2657a14d6da2f59e0de3116af0d6a80554c1a7cb19","typeString":"literal_string \"SafeCast: value doesn't fit in 32 bits\""}],"id":1577,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"32849:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1582,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"32849:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1583,"nodeType":"ExpressionStatement","src":"32849:70:2"}]},"documentation":{"id":1563,"nodeType":"StructuredDocumentation","src":"32382:345:2","text":" @dev Returns the downcasted int32 from int256, reverting on\n overflow (when the input is less than smallest int32 or\n greater than largest int32).\n Counterpart to Solidity's `int32` operator.\n Requirements:\n - input must fit into 32 bits\n _Available since v3.1._"},"id":1585,"implemented":true,"kind":"function","modifiers":[],"name":"toInt32","nameLocation":"32741:7:2","nodeType":"FunctionDefinition","parameters":{"id":1566,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1565,"mutability":"mutable","name":"value","nameLocation":"32756:5:2","nodeType":"VariableDeclaration","scope":1585,"src":"32749:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1564,"name":"int256","nodeType":"ElementaryTypeName","src":"32749:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"32748:14:2"},"returnParameters":{"id":1569,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1568,"mutability":"mutable","name":"downcasted","nameLocation":"32792:10:2","nodeType":"VariableDeclaration","scope":1585,"src":"32786:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"},"typeName":{"id":1567,"name":"int32","nodeType":"ElementaryTypeName","src":"32786:5:2","typeDescriptions":{"typeIdentifier":"t_int32","typeString":"int32"}},"visibility":"internal"}],"src":"32785:18:2"},"scope":1683,"src":"32732:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1607,"nodeType":"Block","src":"33354:122:2","statements":[{"expression":{"id":1598,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1593,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"33364:10:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1596,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"33383:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1595,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33377:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int24_$","typeString":"type(int24)"},"typeName":{"id":1594,"name":"int24","nodeType":"ElementaryTypeName","src":"33377:5:2","typeDescriptions":{}}},"id":1597,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33377:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"src":"33364:25:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"id":1599,"nodeType":"ExpressionStatement","src":"33364:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1603,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1601,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1591,"src":"33407:10:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1602,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1588,"src":"33421:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33407:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2032342062697473","id":1604,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33428:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""},"value":"SafeCast: value doesn't fit in 24 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_f68b65aaf4574c34e9b9d1442d19636c6608b8c4dbd9331c7245f7915c8b2f55","typeString":"literal_string \"SafeCast: value doesn't fit in 24 bits\""}],"id":1600,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33399:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1605,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33399:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1606,"nodeType":"ExpressionStatement","src":"33399:70:2"}]},"documentation":{"id":1586,"nodeType":"StructuredDocumentation","src":"32932:345:2","text":" @dev Returns the downcasted int24 from int256, reverting on\n overflow (when the input is less than smallest int24 or\n greater than largest int24).\n Counterpart to Solidity's `int24` operator.\n Requirements:\n - input must fit into 24 bits\n _Available since v4.7._"},"id":1608,"implemented":true,"kind":"function","modifiers":[],"name":"toInt24","nameLocation":"33291:7:2","nodeType":"FunctionDefinition","parameters":{"id":1589,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1588,"mutability":"mutable","name":"value","nameLocation":"33306:5:2","nodeType":"VariableDeclaration","scope":1608,"src":"33299:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1587,"name":"int256","nodeType":"ElementaryTypeName","src":"33299:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33298:14:2"},"returnParameters":{"id":1592,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1591,"mutability":"mutable","name":"downcasted","nameLocation":"33342:10:2","nodeType":"VariableDeclaration","scope":1608,"src":"33336:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"},"typeName":{"id":1590,"name":"int24","nodeType":"ElementaryTypeName","src":"33336:5:2","typeDescriptions":{"typeIdentifier":"t_int24","typeString":"int24"}},"visibility":"internal"}],"src":"33335:18:2"},"scope":1683,"src":"33282:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1630,"nodeType":"Block","src":"33904:122:2","statements":[{"expression":{"id":1621,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1616,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"33914:10:2","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1619,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"33933:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1618,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"33927:5:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int16_$","typeString":"type(int16)"},"typeName":{"id":1617,"name":"int16","nodeType":"ElementaryTypeName","src":"33927:5:2","typeDescriptions":{}}},"id":1620,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33927:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"src":"33914:25:2","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"id":1622,"nodeType":"ExpressionStatement","src":"33914:25:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1626,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1624,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1614,"src":"33957:10:2","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1625,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1611,"src":"33971:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"33957:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e2031362062697473","id":1627,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"33978:40:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""},"value":"SafeCast: value doesn't fit in 16 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_13d3a66f9e0e5c92bbe7743bcd3bdb4695009d5f3a96e5ff49718d715b484033","typeString":"literal_string \"SafeCast: value doesn't fit in 16 bits\""}],"id":1623,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"33949:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1628,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"33949:70:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1629,"nodeType":"ExpressionStatement","src":"33949:70:2"}]},"documentation":{"id":1609,"nodeType":"StructuredDocumentation","src":"33482:345:2","text":" @dev Returns the downcasted int16 from int256, reverting on\n overflow (when the input is less than smallest int16 or\n greater than largest int16).\n Counterpart to Solidity's `int16` operator.\n Requirements:\n - input must fit into 16 bits\n _Available since v3.1._"},"id":1631,"implemented":true,"kind":"function","modifiers":[],"name":"toInt16","nameLocation":"33841:7:2","nodeType":"FunctionDefinition","parameters":{"id":1612,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1611,"mutability":"mutable","name":"value","nameLocation":"33856:5:2","nodeType":"VariableDeclaration","scope":1631,"src":"33849:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1610,"name":"int256","nodeType":"ElementaryTypeName","src":"33849:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"33848:14:2"},"returnParameters":{"id":1615,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1614,"mutability":"mutable","name":"downcasted","nameLocation":"33892:10:2","nodeType":"VariableDeclaration","scope":1631,"src":"33886:16:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"},"typeName":{"id":1613,"name":"int16","nodeType":"ElementaryTypeName","src":"33886:5:2","typeDescriptions":{"typeIdentifier":"t_int16","typeString":"int16"}},"visibility":"internal"}],"src":"33885:18:2"},"scope":1683,"src":"33832:194:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1653,"nodeType":"Block","src":"34447:120:2","statements":[{"expression":{"id":1644,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":1639,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"34457:10:2","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"arguments":[{"id":1642,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"34475:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1641,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34470:4:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int8_$","typeString":"type(int8)"},"typeName":{"id":1640,"name":"int8","nodeType":"ElementaryTypeName","src":"34470:4:2","typeDescriptions":{}}},"id":1643,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34470:11:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"src":"34457:24:2","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"id":1645,"nodeType":"ExpressionStatement","src":"34457:24:2"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_int256","typeString":"int256"},"id":1649,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1647,"name":"downcasted","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1637,"src":"34499:10:2","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1648,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1634,"src":"34513:5:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"src":"34499:19:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20382062697473","id":1650,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34520:39:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""},"value":"SafeCast: value doesn't fit in 8 bits"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_2610961ba53259047cd57c60366c5ad0b8aabf5eb4132487619b736715a740d1","typeString":"literal_string \"SafeCast: value doesn't fit in 8 bits\""}],"id":1646,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34491:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1651,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34491:69:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1652,"nodeType":"ExpressionStatement","src":"34491:69:2"}]},"documentation":{"id":1632,"nodeType":"StructuredDocumentation","src":"34032:340:2","text":" @dev Returns the downcasted int8 from int256, reverting on\n overflow (when the input is less than smallest int8 or\n greater than largest int8).\n Counterpart to Solidity's `int8` operator.\n Requirements:\n - input must fit into 8 bits\n _Available since v3.1._"},"id":1654,"implemented":true,"kind":"function","modifiers":[],"name":"toInt8","nameLocation":"34386:6:2","nodeType":"FunctionDefinition","parameters":{"id":1635,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1634,"mutability":"mutable","name":"value","nameLocation":"34400:5:2","nodeType":"VariableDeclaration","scope":1654,"src":"34393:12:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1633,"name":"int256","nodeType":"ElementaryTypeName","src":"34393:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34392:14:2"},"returnParameters":{"id":1638,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1637,"mutability":"mutable","name":"downcasted","nameLocation":"34435:10:2","nodeType":"VariableDeclaration","scope":1654,"src":"34430:15:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"},"typeName":{"id":1636,"name":"int8","nodeType":"ElementaryTypeName","src":"34430:4:2","typeDescriptions":{"typeIdentifier":"t_int8","typeString":"int8"}},"visibility":"internal"}],"src":"34429:17:2"},"scope":1683,"src":"34377:190:2","stateMutability":"pure","virtual":false,"visibility":"internal"},{"body":{"id":1681,"nodeType":"Block","src":"34845:233:2","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1672,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1663,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"34962:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<=","rightExpression":{"arguments":[{"expression":{"arguments":[{"id":1668,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34984:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1667,"name":"int256","nodeType":"ElementaryTypeName","src":"34984:6:2","typeDescriptions":{}}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"}],"id":1666,"name":"type","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-27,"src":"34979:4:2","typeDescriptions":{"typeIdentifier":"t_function_metatype_pure$__$returns$__$","typeString":"function () pure"}},"id":1669,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34979:12:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_magic_meta_type_t_int256","typeString":"type(int256)"}},"id":1670,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"memberLocation":"34992:3:2","memberName":"max","nodeType":"MemberAccess","src":"34979:16:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_int256","typeString":"int256"}],"id":1665,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"34971:7:2","typeDescriptions":{"typeIdentifier":"t_type$_t_uint256_$","typeString":"type(uint256)"},"typeName":{"id":1664,"name":"uint256","nodeType":"ElementaryTypeName","src":"34971:7:2","typeDescriptions":{}}},"id":1671,"isConstant":false,"isLValue":false,"isPure":true,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34971:25:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"34962:34:2","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"53616665436173743a2076616c756520646f65736e27742066697420696e20616e20696e74323536","id":1673,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"34998:42:2","typeDescriptions":{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""},"value":"SafeCast: value doesn't fit in an int256"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_d70dcf21692b3c91b4c5fbb89ed57f464aa42efbe5b0ea96c4acb7c080144227","typeString":"literal_string \"SafeCast: value doesn't fit in an int256\""}],"id":1662,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"34954:7:2","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1674,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"34954:87:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1675,"nodeType":"ExpressionStatement","src":"34954:87:2"},{"expression":{"arguments":[{"id":1678,"name":"value","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1657,"src":"35065:5:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1677,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"ElementaryTypeNameExpression","src":"35058:6:2","typeDescriptions":{"typeIdentifier":"t_type$_t_int256_$","typeString":"type(int256)"},"typeName":{"id":1676,"name":"int256","nodeType":"ElementaryTypeName","src":"35058:6:2","typeDescriptions":{}}},"id":1679,"isConstant":false,"isLValue":false,"isPure":false,"kind":"typeConversion","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"35058:13:2","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"functionReturnParameters":1661,"id":1680,"nodeType":"Return","src":"35051:20:2"}]},"documentation":{"id":1655,"nodeType":"StructuredDocumentation","src":"34573:203:2","text":" @dev Converts an unsigned uint256 into a signed int256.\n Requirements:\n - input must be less than or equal to maxInt256.\n _Available since v3.0._"},"id":1682,"implemented":true,"kind":"function","modifiers":[],"name":"toInt256","nameLocation":"34790:8:2","nodeType":"FunctionDefinition","parameters":{"id":1658,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1657,"mutability":"mutable","name":"value","nameLocation":"34807:5:2","nodeType":"VariableDeclaration","scope":1682,"src":"34799:13:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1656,"name":"uint256","nodeType":"ElementaryTypeName","src":"34799:7:2","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"34798:15:2"},"returnParameters":{"id":1661,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1660,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":1682,"src":"34837:6:2","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"},"typeName":{"id":1659,"name":"int256","nodeType":"ElementaryTypeName","src":"34837:6:2","typeDescriptions":{"typeIdentifier":"t_int256","typeString":"int256"}},"visibility":"internal"}],"src":"34836:8:2"},"scope":1683,"src":"34781:297:2","stateMutability":"pure","virtual":false,"visibility":"internal"}],"scope":1684,"src":"927:34153:2","usedErrors":[]}],"src":"192:34889:2"},"id":2},"contracts/insurance.sol":{"ast":{"absolutePath":"contracts/insurance.sol","exportedSymbols":{"Context":[142],"InsuranceContract":[2420],"Ownable":[112],"SafeCast":[1683]},"id":2421,"license":"MIT","nodeType":"SourceUnit","nodes":[{"id":1685,"literals":["solidity","^","0.8",".19"],"nodeType":"PragmaDirective","src":"33:24:3"},{"absolutePath":"@openzeppelin/contracts/access/Ownable.sol","file":"@openzeppelin/contracts/access/Ownable.sol","id":1686,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2421,"sourceUnit":113,"src":"112:52:3","symbolAliases":[],"unitAlias":""},{"absolutePath":"@openzeppelin/contracts/utils/math/SafeCast.sol","file":"@openzeppelin/contracts/utils/math/SafeCast.sol","id":1687,"nameLocation":"-1:-1:-1","nodeType":"ImportDirective","scope":2421,"sourceUnit":1684,"src":"166:57:3","symbolAliases":[],"unitAlias":""},{"abstract":false,"baseContracts":[{"baseName":{"id":1688,"name":"Ownable","nameLocations":["334:7:3"],"nodeType":"IdentifierPath","referencedDeclaration":112,"src":"334:7:3"},"id":1689,"nodeType":"InheritanceSpecifier","src":"334:7:3"}],"canonicalName":"InsuranceContract","contractDependencies":[],"contractKind":"contract","fullyImplemented":true,"id":2420,"linearizedBaseContracts":[2420,112,142],"name":"InsuranceContract","nameLocation":"313:17:3","nodeType":"ContractDefinition","nodes":[{"global":false,"id":1692,"libraryName":{"id":1690,"name":"SafeCast","nameLocations":["355:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1683,"src":"355:8:3"},"nodeType":"UsingForDirective","src":"349:27:3","typeName":{"id":1691,"name":"uint256","nodeType":"ElementaryTypeName","src":"368:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}},{"canonicalName":"InsuranceContract.Document","id":1708,"members":[{"constant":false,"id":1694,"mutability":"mutable","name":"indexNumber","nameLocation":"470:11:3","nodeType":"VariableDeclaration","scope":1708,"src":"462:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1693,"name":"uint256","nodeType":"ElementaryTypeName","src":"462:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1696,"mutability":"mutable","name":"InsuranceFirm","nameLocation":"563:13:3","nodeType":"VariableDeclaration","scope":1708,"src":"555:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1695,"name":"address","nodeType":"ElementaryTypeName","src":"555:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1698,"mutability":"mutable","name":"clientAddress","nameLocation":"595:13:3","nodeType":"VariableDeclaration","scope":1708,"src":"587:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1697,"name":"address","nodeType":"ElementaryTypeName","src":"587:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1700,"mutability":"mutable","name":"documentHash","nameLocation":"626:12:3","nodeType":"VariableDeclaration","scope":1708,"src":"619:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1699,"name":"string","nodeType":"ElementaryTypeName","src":"619:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1702,"mutability":"mutable","name":"timestamp","nameLocation":"687:9:3","nodeType":"VariableDeclaration","scope":1708,"src":"679:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1701,"name":"uint256","nodeType":"ElementaryTypeName","src":"679:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1704,"mutability":"mutable","name":"isValid","nameLocation":"712:7:3","nodeType":"VariableDeclaration","scope":1708,"src":"707:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1703,"name":"bool","nodeType":"ElementaryTypeName","src":"707:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"},{"constant":false,"id":1707,"mutability":"mutable","name":"traceabilityIndexes","nameLocation":"740:19:3","nodeType":"VariableDeclaration","scope":1708,"src":"730:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"},"typeName":{"baseType":{"id":1705,"name":"uint256","nodeType":"ElementaryTypeName","src":"730:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1706,"nodeType":"ArrayTypeName","src":"730:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}},"visibility":"internal"}],"name":"Document","nameLocation":"442:8:3","nodeType":"StructDefinition","scope":2420,"src":"435:366:3","visibility":"public"},{"canonicalName":"InsuranceContract.Traceability","id":1717,"members":[{"constant":false,"id":1710,"mutability":"mutable","name":"user","nameLocation":"913:4:3","nodeType":"VariableDeclaration","scope":1717,"src":"905:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1709,"name":"address","nodeType":"ElementaryTypeName","src":"905:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1712,"mutability":"mutable","name":"timestamp","nameLocation":"936:9:3","nodeType":"VariableDeclaration","scope":1717,"src":"928:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1711,"name":"uint256","nodeType":"ElementaryTypeName","src":"928:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1714,"mutability":"mutable","name":"reason","nameLocation":"963:6:3","nodeType":"VariableDeclaration","scope":1717,"src":"956:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"},"typeName":{"id":1713,"name":"string","nodeType":"ElementaryTypeName","src":"956:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1716,"mutability":"mutable","name":"success","nameLocation":"985:7:3","nodeType":"VariableDeclaration","scope":1717,"src":"980:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1715,"name":"bool","nodeType":"ElementaryTypeName","src":"980:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"name":"Traceability","nameLocation":"881:12:3","nodeType":"StructDefinition","scope":2420,"src":"874:171:3","visibility":"public"},{"canonicalName":"InsuranceContract.documentGenerated","id":1724,"members":[{"constant":false,"id":1719,"mutability":"mutable","name":"insuranceCompany","nameLocation":"1095:16:3","nodeType":"VariableDeclaration","scope":1724,"src":"1087:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1718,"name":"address","nodeType":"ElementaryTypeName","src":"1087:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1721,"mutability":"mutable","name":"intendedClient","nameLocation":"1130:14:3","nodeType":"VariableDeclaration","scope":1724,"src":"1122:22:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1720,"name":"address","nodeType":"ElementaryTypeName","src":"1122:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1723,"mutability":"mutable","name":"Index","nameLocation":"1163:5:3","nodeType":"VariableDeclaration","scope":1724,"src":"1155:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1722,"name":"uint256","nodeType":"ElementaryTypeName","src":"1155:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"name":"documentGenerated","nameLocation":"1058:17:3","nodeType":"StructDefinition","scope":2420,"src":"1051:125:3","visibility":"public"},{"constant":false,"id":1730,"mutability":"mutable","name":"broker","nameLocation":"1261:6:3","nodeType":"VariableDeclaration","scope":2420,"src":"1213:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.documentGenerated[])"},"typeName":{"id":1729,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1725,"name":"address","nodeType":"ElementaryTypeName","src":"1221:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1213:39:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.documentGenerated[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1727,"nodeType":"UserDefinedTypeName","pathNode":{"id":1726,"name":"documentGenerated","nameLocations":["1232:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"1232:17:3"},"referencedDeclaration":1724,"src":"1232:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_documentGenerated_$1724_storage_ptr","typeString":"struct InsuranceContract.documentGenerated"}},"id":1728,"nodeType":"ArrayTypeName","src":"1232:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.documentGenerated[]"}}},"visibility":"private"},{"constant":false,"id":1736,"mutability":"mutable","name":"clientDocuments","nameLocation":"1378:15:3","nodeType":"VariableDeclaration","scope":2420,"src":"1339:54:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document[])"},"typeName":{"id":1735,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1731,"name":"address","nodeType":"ElementaryTypeName","src":"1347:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1339:30:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1733,"nodeType":"UserDefinedTypeName","pathNode":{"id":1732,"name":"Document","nameLocations":["1358:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"1358:8:3"},"referencedDeclaration":1708,"src":"1358:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"}},"id":1734,"nodeType":"ArrayTypeName","src":"1358:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.Document[]"}}},"visibility":"private"},{"constant":false,"id":1744,"mutability":"mutable","name":"documentAccessControl","nameLocation":"1533:21:3","nodeType":"VariableDeclaration","scope":2420,"src":"1460:94:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"},"typeName":{"id":1743,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1737,"name":"address","nodeType":"ElementaryTypeName","src":"1468:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1460:64:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1742,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1738,"name":"uint256","nodeType":"ElementaryTypeName","src":"1487:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1479:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1741,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1739,"name":"address","nodeType":"ElementaryTypeName","src":"1506:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1498:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1740,"name":"bool","nodeType":"ElementaryTypeName","src":"1517:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}}},"visibility":"private"},{"constant":false,"id":1750,"mutability":"mutable","name":"sharedDocuments","nameLocation":"1701:15:3","nodeType":"VariableDeclaration","scope":2420,"src":"1648:68:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1749,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1745,"name":"address","nodeType":"ElementaryTypeName","src":"1656:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1648:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1748,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1746,"name":"address","nodeType":"ElementaryTypeName","src":"1675:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1667:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1747,"name":"bool","nodeType":"ElementaryTypeName","src":"1686:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":1756,"mutability":"mutable","name":"clientAccessRights","nameLocation":"1824:18:3","nodeType":"VariableDeclaration","scope":2420,"src":"1771:71:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"typeName":{"id":1755,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1751,"name":"address","nodeType":"ElementaryTypeName","src":"1779:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1771:44:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1754,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1752,"name":"address","nodeType":"ElementaryTypeName","src":"1798:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1790:24:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1753,"name":"bool","nodeType":"ElementaryTypeName","src":"1809:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}}},"visibility":"private"},{"constant":false,"id":1764,"mutability":"mutable","name":"documentTraceability","nameLocation":"1985:20:3","nodeType":"VariableDeclaration","scope":2420,"src":"1922:83:3","stateVariable":true,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability[]))"},"typeName":{"id":1763,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1757,"name":"address","nodeType":"ElementaryTypeName","src":"1930:7:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"Mapping","src":"1922:54:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability[]))"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"id":1762,"keyName":"","keyNameLocation":"-1:-1:-1","keyType":{"id":1758,"name":"uint256","nodeType":"ElementaryTypeName","src":"1949:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"Mapping","src":"1941:34:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability[])"},"valueName":"","valueNameLocation":"-1:-1:-1","valueType":{"baseType":{"id":1760,"nodeType":"UserDefinedTypeName","pathNode":{"id":1759,"name":"Traceability","nameLocations":["1960:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1717,"src":"1960:12:3"},"referencedDeclaration":1717,"src":"1960:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_storage_ptr","typeString":"struct InsuranceContract.Traceability"}},"id":1761,"nodeType":"ArrayTypeName","src":"1960:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.Traceability[]"}}}},"visibility":"private"},{"anonymous":false,"eventSelector":"32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735","id":1778,"name":"DocumentAccessed","nameLocation":"2052:16:3","nodeType":"EventDefinition","parameters":{"id":1777,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1766,"indexed":true,"mutability":"mutable","name":"user","nameLocation":"2085:4:3","nodeType":"VariableDeclaration","scope":1778,"src":"2069:20:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1765,"name":"address","nodeType":"ElementaryTypeName","src":"2069:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1768,"indexed":true,"mutability":"mutable","name":"documentOwner","nameLocation":"2107:13:3","nodeType":"VariableDeclaration","scope":1778,"src":"2091:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1767,"name":"address","nodeType":"ElementaryTypeName","src":"2091:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1770,"indexed":false,"mutability":"mutable","name":"timestamp","nameLocation":"2130:9:3","nodeType":"VariableDeclaration","scope":1778,"src":"2122:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1769,"name":"uint256","nodeType":"ElementaryTypeName","src":"2122:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1772,"indexed":false,"mutability":"mutable","name":"reason","nameLocation":"2148:6:3","nodeType":"VariableDeclaration","scope":1778,"src":"2141:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1771,"name":"string","nodeType":"ElementaryTypeName","src":"2141:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1774,"indexed":false,"mutability":"mutable","name":"documentHash","nameLocation":"2163:12:3","nodeType":"VariableDeclaration","scope":1778,"src":"2156:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1773,"name":"string","nodeType":"ElementaryTypeName","src":"2156:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"},{"constant":false,"id":1776,"indexed":false,"mutability":"mutable","name":"success","nameLocation":"2182:7:3","nodeType":"VariableDeclaration","scope":1778,"src":"2177:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1775,"name":"bool","nodeType":"ElementaryTypeName","src":"2177:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"2068:122:3"},"src":"2046:145:3"},{"anonymous":false,"eventSelector":"7a258764a3b2b35077d20a06a3382f6f7cbe6ba4a76a7402102fd275d88e0e68","id":1786,"name":"DocumentGenerated","nameLocation":"2307:17:3","nodeType":"EventDefinition","parameters":{"id":1785,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1780,"indexed":true,"mutability":"mutable","name":"InsuranceFirm","nameLocation":"2341:13:3","nodeType":"VariableDeclaration","scope":1786,"src":"2325:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1779,"name":"address","nodeType":"ElementaryTypeName","src":"2325:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1782,"indexed":true,"mutability":"mutable","name":"clientAddress","nameLocation":"2372:13:3","nodeType":"VariableDeclaration","scope":1786,"src":"2356:29:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1781,"name":"address","nodeType":"ElementaryTypeName","src":"2356:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1784,"indexed":false,"mutability":"mutable","name":"Index","nameLocation":"2395:5:3","nodeType":"VariableDeclaration","scope":1786,"src":"2387:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1783,"name":"uint256","nodeType":"ElementaryTypeName","src":"2387:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"2324:77:3"},"src":"2301:101:3"},{"body":{"id":1798,"nodeType":"Block","src":"2470:103:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1793,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1789,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2489:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1790,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2493:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2489:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1791,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"2503:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1792,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2503:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2489:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4f6e6c79207468652062726f6b65722063616e2063616c6c20746869732066756e6374696f6e","id":1794,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2512:40:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68","typeString":"literal_string \"Only the broker can call this function\""},"value":"Only the broker can call this function"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68","typeString":"literal_string \"Only the broker can call this function\""}],"id":1788,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2481:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1795,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2481:72:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1796,"nodeType":"ExpressionStatement","src":"2481:72:3"},{"id":1797,"nodeType":"PlaceholderStatement","src":"2564:1:3"}]},"id":1799,"name":"onlyBroker","nameLocation":"2457:10:3","nodeType":"ModifierDefinition","parameters":{"id":1787,"nodeType":"ParameterList","parameters":[],"src":"2467:2:3"},"src":"2448:125:3","virtual":false,"visibility":"internal"},{"body":{"id":1812,"nodeType":"Block","src":"2631:85:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1807,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1804,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2650:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1805,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2654:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2650:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1806,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1801,"src":"2664:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2650:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":1808,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2679:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":1803,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2642:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1809,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2642:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1810,"nodeType":"ExpressionStatement","src":"2642:54:3"},{"id":1811,"nodeType":"PlaceholderStatement","src":"2707:1:3"}]},"id":1813,"name":"onlyDocumentOwner","nameLocation":"2590:17:3","nodeType":"ModifierDefinition","parameters":{"id":1802,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1801,"mutability":"mutable","name":"clientAddress","nameLocation":"2616:13:3","nodeType":"VariableDeclaration","scope":1813,"src":"2608:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1800,"name":"address","nodeType":"ElementaryTypeName","src":"2608:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2607:23:3"},"src":"2581:135:3","virtual":false,"visibility":"internal"},{"body":{"id":1839,"nodeType":"Block","src":"2786:159:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1834,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":1827,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1822,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1818,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2805:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1819,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2809:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2805:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1820,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"2819:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1821,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2819:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2805:21:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":1826,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":1823,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2830:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1824,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2834:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2830:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"id":1825,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2844:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"2830:27:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2805:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"baseExpression":{"id":1828,"name":"clientAccessRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"2861:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1830,"indexExpression":{"id":1829,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1815,"src":"2880:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2861:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1833,"indexExpression":{"expression":{"id":1831,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"2895:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1832,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"2899:6:3","memberName":"sender","nodeType":"MemberAccess","src":"2895:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"2861:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"2805:101:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a6564","id":1835,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"2908:16:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""},"value":"Not authorized"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","typeString":"literal_string \"Not authorized\""}],"id":1817,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"2797:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1836,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"2797:128:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1837,"nodeType":"ExpressionStatement","src":"2797:128:3"},{"id":1838,"nodeType":"PlaceholderStatement","src":"2936:1:3"}]},"id":1840,"name":"onlyDocumentOwnerOrAuthorized","nameLocation":"2733:29:3","nodeType":"ModifierDefinition","parameters":{"id":1816,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1815,"mutability":"mutable","name":"clientAddress","nameLocation":"2771:13:3","nodeType":"VariableDeclaration","scope":1840,"src":"2763:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1814,"name":"address","nodeType":"ElementaryTypeName","src":"2763:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"2762:23:3"},"src":"2724:221:3","virtual":false,"visibility":"internal"},{"body":{"id":1946,"nodeType":"Block","src":"3181:1113:3","statements":[{"assignments":[1853],"declarations":[{"constant":false,"id":1853,"mutability":"mutable","name":"timestamp","nameLocation":"3305:9:3","nodeType":"VariableDeclaration","scope":1946,"src":"3297:17:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1852,"name":"uint256","nodeType":"ElementaryTypeName","src":"3297:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1856,"initialValue":{"expression":{"id":1854,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3317:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1855,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3323:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3317:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3297:35:3"},{"assignments":[1858],"declarations":[{"constant":false,"id":1858,"mutability":"mutable","name":"indexNumber","nameLocation":"3351:11:3","nodeType":"VariableDeclaration","scope":1946,"src":"3343:19:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1857,"name":"uint256","nodeType":"ElementaryTypeName","src":"3343:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":1864,"initialValue":{"expression":{"baseExpression":{"id":1859,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"3365:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":1862,"indexExpression":{"expression":{"id":1860,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3381:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1861,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3385:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3381:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3365:27:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":1863,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3393:6:3","memberName":"length","nodeType":"MemberAccess","src":"3365:34:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"3343:56:3"},{"assignments":[1867],"declarations":[{"constant":false,"id":1867,"mutability":"mutable","name":"newDocument","nameLocation":"3465:11:3","nodeType":"VariableDeclaration","scope":1946,"src":"3449:27:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_memory_ptr","typeString":"struct InsuranceContract.Document"},"typeName":{"id":1866,"nodeType":"UserDefinedTypeName","pathNode":{"id":1865,"name":"Document","nameLocations":["3449:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"3449:8:3"},"referencedDeclaration":1708,"src":"3449:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"}},"visibility":"internal"}],"id":1881,"initialValue":{"arguments":[{"id":1869,"name":"indexNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3488:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":1870,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3501:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1871,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3519:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1872,"name":"documentHash","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1846,"src":"3534:12:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":1873,"name":"timestamp","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1853,"src":"3548:9:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"74727565","id":1874,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3559:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},{"arguments":[{"hexValue":"30","id":1878,"isConstant":false,"isLValue":false,"isPure":true,"kind":"number","lValueRequested":false,"nodeType":"Literal","src":"3579:1:3","typeDescriptions":{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"},"value":"0"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_rational_0_by_1","typeString":"int_const 0"}],"id":1877,"isConstant":false,"isLValue":false,"isPure":true,"lValueRequested":false,"nodeType":"NewExpression","src":"3565:13:3","typeDescriptions":{"typeIdentifier":"t_function_objectcreation_pure$_t_uint256_$returns$_t_array$_t_uint256_$dyn_memory_ptr_$","typeString":"function (uint256) pure returns (uint256[] memory)"},"typeName":{"baseType":{"id":1875,"name":"uint256","nodeType":"ElementaryTypeName","src":"3569:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"id":1876,"nodeType":"ArrayTypeName","src":"3569:9:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage_ptr","typeString":"uint256[]"}}},"id":1879,"isConstant":false,"isLValue":false,"isPure":true,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3565:16:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_array$_t_uint256_$dyn_memory_ptr","typeString":"uint256[] memory"}],"id":1868,"name":"Document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1708,"src":"3479:8:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Document_$1708_storage_ptr_$","typeString":"type(struct InsuranceContract.Document storage pointer)"}},"id":1880,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3479:103:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_memory_ptr","typeString":"struct InsuranceContract.Document memory"}},"nodeType":"VariableDeclarationStatement","src":"3449:133:3"},{"expression":{"arguments":[{"id":1887,"name":"newDocument","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1867,"src":"3626:11:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_memory_ptr","typeString":"struct InsuranceContract.Document memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Document_$1708_memory_ptr","typeString":"struct InsuranceContract.Document memory"}],"expression":{"baseExpression":{"id":1882,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"3593:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":1885,"indexExpression":{"expression":{"id":1883,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3609:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1884,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3613:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3609:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3593:27:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":1886,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3621:4:3","memberName":"push","nodeType":"MemberAccess","src":"3593:32:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_ptr_$_t_struct$_Document_$1708_storage_$returns$__$attached_to$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.Document storage ref[] storage pointer,struct InsuranceContract.Document storage ref)"}},"id":1888,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3593:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1889,"nodeType":"ExpressionStatement","src":"3593:45:3"},{"expression":{"id":1896,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1890,"name":"sharedDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"3731:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1893,"indexExpression":{"id":1891,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3747:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3731:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1894,"indexExpression":{"id":1892,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3765:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3731:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1895,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3782:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3731:55:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1897,"nodeType":"ExpressionStatement","src":"3731:55:3"},{"expression":{"id":1904,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":1898,"name":"clientAccessRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"3836:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":1901,"indexExpression":{"id":1899,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3855:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3836:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1902,"indexExpression":{"id":1900,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"3873:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"3836:51:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"74727565","id":1903,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"3890:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"3836:58:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1905,"nodeType":"ExpressionStatement","src":"3836:58:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1914,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3969:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1915,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3973:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3969:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1916,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"3981:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1917,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3987:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"3981:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"496e737572616e6365204669726d2047656e65726174657320496e737572616e636520436c61696d20666f7220636c49454e5421","id":1918,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"3998:54:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_62155daf66b7d0931c6a53835f5b9aaa09e5f1a92e3ad44852c8e9c0b7e185ba","typeString":"literal_string \"Insurance Firm Generates Insurance Claim for clIENT!\""},"value":"Insurance Firm Generates Insurance Claim for clIENT!"},{"hexValue":"74727565","id":1919,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"4054:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_62155daf66b7d0931c6a53835f5b9aaa09e5f1a92e3ad44852c8e9c0b7e185ba","typeString":"literal_string \"Insurance Firm Generates Insurance Claim for clIENT!\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1913,"name":"Traceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"3956:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Traceability_$1717_storage_ptr_$","typeString":"type(struct InsuranceContract.Traceability storage pointer)"}},"id":1920,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3956:103:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1906,"name":"documentTraceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"3905:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref))"}},"id":1910,"indexExpression":{"expression":{"id":1907,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"3926:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1908,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3930:6:3","memberName":"sender","nodeType":"MemberAccess","src":"3926:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3905:32:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref)"}},"id":1911,"indexExpression":{"id":1909,"name":"indexNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"3938:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"3905:45:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage","typeString":"struct InsuranceContract.Traceability storage ref[] storage ref"}},"id":1912,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"3951:4:3","memberName":"push","nodeType":"MemberAccess","src":"3905:50:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$_t_struct$_Traceability_$1717_storage_$returns$__$attached_to$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.Traceability storage ref[] storage pointer,struct InsuranceContract.Traceability storage ref)"}},"id":1921,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"3905:155:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1922,"nodeType":"ExpressionStatement","src":"3905:155:3"},{"assignments":[1925],"declarations":[{"constant":false,"id":1925,"mutability":"mutable","name":"newDoc","nameLocation":"4096:6:3","nodeType":"VariableDeclaration","scope":1946,"src":"4071:31:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_documentGenerated_$1724_memory_ptr","typeString":"struct InsuranceContract.documentGenerated"},"typeName":{"id":1924,"nodeType":"UserDefinedTypeName","pathNode":{"id":1923,"name":"documentGenerated","nameLocations":["4071:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"4071:17:3"},"referencedDeclaration":1724,"src":"4071:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_documentGenerated_$1724_storage_ptr","typeString":"struct InsuranceContract.documentGenerated"}},"visibility":"internal"}],"id":1931,"initialValue":{"arguments":[{"id":1927,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"4123:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1928,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4141:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1929,"name":"indexNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4156:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1926,"name":"documentGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1724,"src":"4105:17:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_documentGenerated_$1724_storage_ptr_$","typeString":"type(struct InsuranceContract.documentGenerated storage pointer)"}},"id":1930,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4105:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_documentGenerated_$1724_memory_ptr","typeString":"struct InsuranceContract.documentGenerated memory"}},"nodeType":"VariableDeclarationStatement","src":"4071:97:3"},{"expression":{"arguments":[{"id":1937,"name":"newDoc","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1925,"src":"4200:6:3","typeDescriptions":{"typeIdentifier":"t_struct$_documentGenerated_$1724_memory_ptr","typeString":"struct InsuranceContract.documentGenerated memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_documentGenerated_$1724_memory_ptr","typeString":"struct InsuranceContract.documentGenerated memory"}],"expression":{"baseExpression":{"id":1932,"name":"broker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"4179:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.documentGenerated storage ref[] storage ref)"}},"id":1935,"indexExpression":{"arguments":[],"expression":{"argumentTypes":[],"id":1933,"name":"owner","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":40,"src":"4186:5:3","typeDescriptions":{"typeIdentifier":"t_function_internal_view$__$returns$_t_address_$","typeString":"function () view returns (address)"}},"id":1934,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4186:7:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4179:15:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage","typeString":"struct InsuranceContract.documentGenerated storage ref[] storage ref"}},"id":1936,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4195:4:3","memberName":"push","nodeType":"MemberAccess","src":"4179:20:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_ptr_$_t_struct$_documentGenerated_$1724_storage_$returns$__$attached_to$_t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.documentGenerated storage ref[] storage pointer,struct InsuranceContract.documentGenerated storage ref)"}},"id":1938,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4179:28:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1939,"nodeType":"ExpressionStatement","src":"4179:28:3"},{"eventCall":{"arguments":[{"id":1941,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"4241:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1942,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1844,"src":"4259:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":1943,"name":"indexNumber","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1858,"src":"4274:11:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"}],"id":1940,"name":"DocumentGenerated","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1786,"src":"4223:17:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$returns$__$","typeString":"function (address,address,uint256)"}},"id":1944,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4223:63:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1945,"nodeType":"EmitStatement","src":"4218:68:3"}]},"functionSelector":"cecf15e3","id":1947,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":1849,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1842,"src":"3163:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":1850,"kind":"modifierInvocation","modifierName":{"id":1848,"name":"onlyDocumentOwner","nameLocations":["3145:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1813,"src":"3145:17:3"},"nodeType":"ModifierInvocation","src":"3145:35:3"}],"name":"submitDocument","nameLocation":"3044:14:3","nodeType":"FunctionDefinition","parameters":{"id":1847,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1842,"mutability":"mutable","name":"insuranceCompany","nameLocation":"3067:16:3","nodeType":"VariableDeclaration","scope":1947,"src":"3059:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1841,"name":"address","nodeType":"ElementaryTypeName","src":"3059:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1844,"mutability":"mutable","name":"clientAddress","nameLocation":"3093:13:3","nodeType":"VariableDeclaration","scope":1947,"src":"3085:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1843,"name":"address","nodeType":"ElementaryTypeName","src":"3085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1846,"mutability":"mutable","name":"documentHash","nameLocation":"3122:12:3","nodeType":"VariableDeclaration","scope":1947,"src":"3108:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":1845,"name":"string","nodeType":"ElementaryTypeName","src":"3108:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"3058:77:3"},"returnParameters":{"id":1851,"nodeType":"ParameterList","parameters":[],"src":"3181:0:3"},"scope":2420,"src":"3035:1259:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":1996,"nodeType":"Block","src":"4470:545:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":1966,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":1961,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"4489:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":1962,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"4497:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":1964,"indexExpression":{"id":1963,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"4513:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4497:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":1965,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4528:6:3","memberName":"length","nodeType":"MemberAccess","src":"4497:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"4489:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":1967,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4536:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":1960,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"4481:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":1968,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4481:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1969,"nodeType":"ExpressionStatement","src":"4481:71:3"},{"expression":{"id":1978,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"baseExpression":{"id":1970,"name":"documentAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"4784:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"}},"id":1974,"indexExpression":{"id":1971,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"4806:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4784:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":1975,"indexExpression":{"id":1972,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"4821:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4784:43:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":1976,"indexExpression":{"id":1973,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1953,"src":"4828:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"4784:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"id":1977,"name":"hasAccess","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1955,"src":"4836:9:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"4784:61:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":1979,"nodeType":"ExpressionStatement","src":"4784:61:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":1987,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"4917:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":1988,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4921:6:3","memberName":"sender","nodeType":"MemberAccess","src":"4917:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":1989,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"4929:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":1990,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4935:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"4929:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"42726f6b657220476976696e6720446f63756d656e742041636365737320746f205265737065637469766520436c69656e7421","id":1991,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"4946:53:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_59853a7b9cf60a23b9d4d8dc6bb484dc10c3da27410302d131b00345745b291d","typeString":"literal_string \"Broker Giving Document Access to Respective Client!\""},"value":"Broker Giving Document Access to Respective Client!"},{"hexValue":"74727565","id":1992,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5001:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_59853a7b9cf60a23b9d4d8dc6bb484dc10c3da27410302d131b00345745b291d","typeString":"literal_string \"Broker Giving Document Access to Respective Client!\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":1986,"name":"Traceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"4904:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Traceability_$1717_storage_ptr_$","typeString":"type(struct InsuranceContract.Traceability storage pointer)"}},"id":1993,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4904:102:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}],"expression":{"baseExpression":{"baseExpression":{"id":1980,"name":"documentTraceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"4856:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref))"}},"id":1983,"indexExpression":{"id":1981,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1949,"src":"4877:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4856:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref)"}},"id":1984,"indexExpression":{"id":1982,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1951,"src":"4892:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"4856:42:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage","typeString":"struct InsuranceContract.Traceability storage ref[] storage ref"}},"id":1985,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"4899:4:3","memberName":"push","nodeType":"MemberAccess","src":"4856:47:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$_t_struct$_Traceability_$1717_storage_$returns$__$attached_to$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.Traceability storage ref[] storage pointer,struct InsuranceContract.Traceability storage ref)"}},"id":1994,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"4856:151:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":1995,"nodeType":"ExpressionStatement","src":"4856:151:3"}]},"functionSelector":"f63f3f89","id":1997,"implemented":true,"kind":"function","modifiers":[{"id":1958,"kind":"modifierInvocation","modifierName":{"id":1957,"name":"onlyBroker","nameLocations":["4459:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"4459:10:3"},"nodeType":"ModifierInvocation","src":"4459:10:3"}],"name":"setAccessControl","nameLocation":"4365:16:3","nodeType":"FunctionDefinition","parameters":{"id":1956,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1949,"mutability":"mutable","name":"InsuranceFirm","nameLocation":"4390:13:3","nodeType":"VariableDeclaration","scope":1997,"src":"4382:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1948,"name":"address","nodeType":"ElementaryTypeName","src":"4382:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1951,"mutability":"mutable","name":"index","nameLocation":"4413:5:3","nodeType":"VariableDeclaration","scope":1997,"src":"4405:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":1950,"name":"uint256","nodeType":"ElementaryTypeName","src":"4405:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":1953,"mutability":"mutable","name":"user","nameLocation":"4428:4:3","nodeType":"VariableDeclaration","scope":1997,"src":"4420:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1952,"name":"address","nodeType":"ElementaryTypeName","src":"4420:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":1955,"mutability":"mutable","name":"hasAccess","nameLocation":"4439:9:3","nodeType":"VariableDeclaration","scope":1997,"src":"4434:14:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":1954,"name":"bool","nodeType":"ElementaryTypeName","src":"4434:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"4381:68:3"},"returnParameters":{"id":1959,"nodeType":"ParameterList","parameters":[],"src":"4470:0:3"},"scope":2420,"src":"4356:659:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2049,"nodeType":"Block","src":"5229:445:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2017,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2012,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"5248:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2013,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"5256:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2015,"indexExpression":{"id":2014,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5272:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5256:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2016,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5287:6:3","memberName":"length","nodeType":"MemberAccess","src":"5256:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"5248:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":2018,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5295:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":2011,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5240:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2019,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5240:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2020,"nodeType":"ExpressionStatement","src":"5240:71:3"},{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2037,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"commonType":{"typeIdentifier":"t_address","typeString":"address"},"id":2030,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"expression":{"id":2022,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5411:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2023,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5415:6:3","memberName":"sender","nodeType":"MemberAccess","src":"5411:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"expression":{"baseExpression":{"baseExpression":{"id":2024,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"5425:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2026,"indexExpression":{"id":2025,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5441:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5425:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2028,"indexExpression":{"id":2027,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"5456:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5425:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage","typeString":"struct InsuranceContract.Document storage ref"}},"id":2029,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"5463:13:3","memberName":"clientAddress","nodeType":"MemberAccess","referencedDeclaration":1698,"src":"5425:51:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"src":"5411:65:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"||","rightExpression":{"baseExpression":{"baseExpression":{"id":2031,"name":"clientAccessRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"5480:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2033,"indexExpression":{"id":2032,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5499:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5480:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2036,"indexExpression":{"expression":{"id":2034,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"5514:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2035,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"5518:6:3","memberName":"sender","nodeType":"MemberAccess","src":"5514:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5480:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"5411:114:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"4e6f7420617574686f72697a656420746f206765742061636365737320636f6e74726f6c","id":2038,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5527:38:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3","typeString":"literal_string \"Not authorized to get access control\""},"value":"Not authorized to get access control"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3","typeString":"literal_string \"Not authorized to get access control\""}],"id":2021,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5403:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2039,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5403:163:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2040,"nodeType":"ExpressionStatement","src":"5403:163:3"},{"expression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2041,"name":"documentAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"5617:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"}},"id":2043,"indexExpression":{"id":2042,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5639:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5617:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":2045,"indexExpression":{"id":2044,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2001,"src":"5654:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5617:43:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2047,"indexExpression":{"id":2046,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2003,"src":"5661:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5617:49:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2010,"id":2048,"nodeType":"Return","src":"5610:56:3"}]},"functionSelector":"472879d5","id":2050,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2006,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1999,"src":"5199:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2007,"kind":"modifierInvocation","modifierName":{"id":2005,"name":"onlyDocumentOwnerOrAuthorized","nameLocations":["5169:29:3"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"5169:29:3"},"nodeType":"ModifierInvocation","src":"5169:44:3"}],"name":"getAccessControl","nameLocation":"5086:16:3","nodeType":"FunctionDefinition","parameters":{"id":2004,"nodeType":"ParameterList","parameters":[{"constant":false,"id":1999,"mutability":"mutable","name":"InsuranceFirm","nameLocation":"5111:13:3","nodeType":"VariableDeclaration","scope":2050,"src":"5103:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":1998,"name":"address","nodeType":"ElementaryTypeName","src":"5103:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2001,"mutability":"mutable","name":"index","nameLocation":"5134:5:3","nodeType":"VariableDeclaration","scope":2050,"src":"5126:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2000,"name":"uint256","nodeType":"ElementaryTypeName","src":"5126:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2003,"mutability":"mutable","name":"user","nameLocation":"5149:4:3","nodeType":"VariableDeclaration","scope":2050,"src":"5141:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2002,"name":"address","nodeType":"ElementaryTypeName","src":"5141:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5102:52:3"},"returnParameters":{"id":2010,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2009,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2050,"src":"5223:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2008,"name":"bool","nodeType":"ElementaryTypeName","src":"5223:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"5222:6:3"},"scope":2420,"src":"5077:597:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2086,"nodeType":"Block","src":"5842:455:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2066,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2060,"name":"sharedDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"5861:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2062,"indexExpression":{"id":2061,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"5877:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5861:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2064,"indexExpression":{"id":2063,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"5895:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"5861:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"==","rightExpression":{"hexValue":"74727565","id":2065,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"5913:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"true"},"src":"5861:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373206e6f74206772616e746564","id":2067,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"5919:20:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f","typeString":"literal_string \"Access not granted\""},"value":"Access not granted"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f","typeString":"literal_string \"Access not granted\""}],"id":2059,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"5853:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2068,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"5853:87:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2069,"nodeType":"ExpressionStatement","src":"5853:87:3"},{"expression":{"id":2076,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2070,"name":"sharedDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1750,"src":"6121:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2073,"indexExpression":{"id":2071,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6137:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6121:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2074,"indexExpression":{"id":2072,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6155:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6121:48:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2075,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6172:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6121:56:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2077,"nodeType":"ExpressionStatement","src":"6121:56:3"},{"expression":{"id":2084,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"baseExpression":{"baseExpression":{"id":2078,"name":"clientAccessRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"6230:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2081,"indexExpression":{"id":2079,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2052,"src":"6249:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6230:33:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2082,"indexExpression":{"id":2080,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2054,"src":"6264:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"nodeType":"IndexAccess","src":"6230:51:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2083,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6284:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6230:59:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2085,"nodeType":"ExpressionStatement","src":"6230:59:3"}]},"functionSelector":"5f6ea340","id":2087,"implemented":true,"kind":"function","modifiers":[{"id":2057,"kind":"modifierInvocation","modifierName":{"id":2056,"name":"onlyBroker","nameLocations":["5831:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"5831:10:3"},"nodeType":"ModifierInvocation","src":"5831:10:3"}],"name":"revokeAccess","nameLocation":"5760:12:3","nodeType":"FunctionDefinition","parameters":{"id":2055,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2052,"mutability":"mutable","name":"clientAddress","nameLocation":"5781:13:3","nodeType":"VariableDeclaration","scope":2087,"src":"5773:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2051,"name":"address","nodeType":"ElementaryTypeName","src":"5773:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2054,"mutability":"mutable","name":"insuranceCompany","nameLocation":"5804:16:3","nodeType":"VariableDeclaration","scope":2087,"src":"5796:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2053,"name":"address","nodeType":"ElementaryTypeName","src":"5796:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"5772:49:3"},"returnParameters":{"id":2058,"nodeType":"ParameterList","parameters":[],"src":"5842:0:3"},"scope":2420,"src":"5751:546:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2115,"nodeType":"Block","src":"6441:154:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2102,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2097,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6460:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2098,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6468:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2100,"indexExpression":{"id":2099,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"6484:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6468:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2101,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6499:6:3","memberName":"length","nodeType":"MemberAccess","src":"6468:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"6460:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":2103,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"6507:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":2096,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"6452:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2104,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"6452:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2105,"nodeType":"ExpressionStatement","src":"6452:71:3"},{"expression":{"id":2113,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"expression":{"baseExpression":{"baseExpression":{"id":2106,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6534:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2109,"indexExpression":{"id":2107,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2089,"src":"6550:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6534:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2110,"indexExpression":{"id":2108,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2091,"src":"6565:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6534:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage","typeString":"struct InsuranceContract.Document storage ref"}},"id":2111,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":true,"memberLocation":"6572:7:3","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":1704,"src":"6534:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2112,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"6582:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"6534:53:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2114,"nodeType":"ExpressionStatement","src":"6534:53:3"}]},"functionSelector":"32d125cd","id":2116,"implemented":true,"kind":"function","modifiers":[{"id":2094,"kind":"modifierInvocation","modifierName":{"id":2093,"name":"onlyBroker","nameLocations":["6430:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"6430:10:3"},"nodeType":"ModifierInvocation","src":"6430:10:3"}],"name":"markDocumentAsInvalid","nameLocation":"6361:21:3","nodeType":"FunctionDefinition","parameters":{"id":2092,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2089,"mutability":"mutable","name":"clientAddress","nameLocation":"6391:13:3","nodeType":"VariableDeclaration","scope":2116,"src":"6383:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2088,"name":"address","nodeType":"ElementaryTypeName","src":"6383:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2091,"mutability":"mutable","name":"index","nameLocation":"6414:5:3","nodeType":"VariableDeclaration","scope":2116,"src":"6406:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2090,"name":"uint256","nodeType":"ElementaryTypeName","src":"6406:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"6382:38:3"},"returnParameters":{"id":2095,"nodeType":"ParameterList","parameters":[],"src":"6441:0:3"},"scope":2420,"src":"6352:243:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2132,"nodeType":"Block","src":"6785:59:3","statements":[{"expression":{"baseExpression":{"id":2128,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"6803:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2130,"indexExpression":{"id":2129,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"6819:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6803:33:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"functionReturnParameters":2127,"id":2131,"nodeType":"Return","src":"6796:40:3"}]},"functionSelector":"e3766c2f","id":2133,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2121,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2118,"src":"6739:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2122,"kind":"modifierInvocation","modifierName":{"id":2120,"name":"onlyDocumentOwner","nameLocations":["6721:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1813,"src":"6721:17:3"},"nodeType":"ModifierInvocation","src":"6721:35:3"}],"name":"getClientDocuments","nameLocation":"6662:18:3","nodeType":"FunctionDefinition","parameters":{"id":2119,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2118,"mutability":"mutable","name":"insuranceCompany","nameLocation":"6689:16:3","nodeType":"VariableDeclaration","scope":2133,"src":"6681:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2117,"name":"address","nodeType":"ElementaryTypeName","src":"6681:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"6680:26:3"},"returnParameters":{"id":2127,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2126,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2133,"src":"6766:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","typeString":"struct InsuranceContract.Document[]"},"typeName":{"baseType":{"id":2124,"nodeType":"UserDefinedTypeName","pathNode":{"id":2123,"name":"Document","nameLocations":["6766:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"6766:8:3"},"referencedDeclaration":1708,"src":"6766:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"}},"id":2125,"nodeType":"ArrayTypeName","src":"6766:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.Document[]"}},"visibility":"internal"}],"src":"6765:19:3"},"scope":2420,"src":"6653:191:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2147,"nodeType":"Block","src":"6941:44:3","statements":[{"expression":{"baseExpression":{"id":2142,"name":"broker","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1730,"src":"6959:6:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.documentGenerated storage ref[] storage ref)"}},"id":2145,"indexExpression":{"expression":{"id":2143,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"6966:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2144,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"6970:6:3","memberName":"sender","nodeType":"MemberAccess","src":"6966:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"6959:18:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage","typeString":"struct InsuranceContract.documentGenerated storage ref[] storage ref"}},"functionReturnParameters":2141,"id":2146,"nodeType":"Return","src":"6952:25:3"}]},"functionSelector":"c030224a","id":2148,"implemented":true,"kind":"function","modifiers":[{"id":2136,"kind":"modifierInvocation","modifierName":{"id":2135,"name":"onlyBroker","nameLocations":["6893:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"6893:10:3"},"nodeType":"ModifierInvocation","src":"6893:10:3"}],"name":"brokerDashboard","nameLocation":"6861:15:3","nodeType":"FunctionDefinition","parameters":{"id":2134,"nodeType":"ParameterList","parameters":[],"src":"6876:2:3"},"returnParameters":{"id":2141,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2140,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2148,"src":"6913:26:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","typeString":"struct InsuranceContract.documentGenerated[]"},"typeName":{"baseType":{"id":2138,"nodeType":"UserDefinedTypeName","pathNode":{"id":2137,"name":"documentGenerated","nameLocations":["6913:17:3"],"nodeType":"IdentifierPath","referencedDeclaration":1724,"src":"6913:17:3"},"referencedDeclaration":1724,"src":"6913:17:3","typeDescriptions":{"typeIdentifier":"t_struct$_documentGenerated_$1724_storage_ptr","typeString":"struct InsuranceContract.documentGenerated"}},"id":2139,"nodeType":"ArrayTypeName","src":"6913:19:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_documentGenerated_$1724_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.documentGenerated[]"}},"visibility":"internal"}],"src":"6912:28:3"},"scope":2420,"src":"6852:133:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2163,"nodeType":"Block","src":"7152:195:3","statements":[{"expression":{"baseExpression":{"id":2159,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"7318:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2161,"indexExpression":{"id":2160,"name":"user","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2150,"src":"7334:4:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7318:21:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"functionReturnParameters":2158,"id":2162,"nodeType":"Return","src":"7311:28:3"}]},"functionSelector":"59ded538","id":2164,"implemented":true,"kind":"function","modifiers":[{"id":2153,"kind":"modifierInvocation","modifierName":{"id":2152,"name":"onlyBroker","nameLocations":["7113:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"7113:10:3"},"nodeType":"ModifierInvocation","src":"7113:10:3"}],"name":"getAllDocuments","nameLocation":"7069:15:3","nodeType":"FunctionDefinition","parameters":{"id":2151,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2150,"mutability":"mutable","name":"user","nameLocation":"7093:4:3","nodeType":"VariableDeclaration","scope":2164,"src":"7085:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2149,"name":"address","nodeType":"ElementaryTypeName","src":"7085:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"7084:14:3"},"returnParameters":{"id":2158,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2157,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2164,"src":"7133:17:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","typeString":"struct InsuranceContract.Document[]"},"typeName":{"baseType":{"id":2155,"nodeType":"UserDefinedTypeName","pathNode":{"id":2154,"name":"Document","nameLocations":["7133:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"7133:8:3"},"referencedDeclaration":1708,"src":"7133:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"}},"id":2156,"nodeType":"ArrayTypeName","src":"7133:10:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.Document[]"}},"visibility":"internal"}],"src":"7132:19:3"},"scope":2420,"src":"7060:287:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2193,"nodeType":"Block","src":"7578:145:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2183,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2178,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"7597:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2179,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"7605:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2181,"indexExpression":{"id":2180,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"7621:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7605:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2182,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7636:6:3","memberName":"length","nodeType":"MemberAccess","src":"7605:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7597:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":2184,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7644:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":2177,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7589:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2185,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7589:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2186,"nodeType":"ExpressionStatement","src":"7589:71:3"},{"expression":{"baseExpression":{"baseExpression":{"id":2187,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"7678:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2189,"indexExpression":{"id":2188,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"7694:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7678:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2191,"indexExpression":{"id":2190,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2168,"src":"7709:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7678:37:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage","typeString":"struct InsuranceContract.Document storage ref"}},"functionReturnParameters":2176,"id":2192,"nodeType":"Return","src":"7671:44:3"}]},"functionSelector":"23b60fd9","id":2194,"implemented":true,"kind":"function","modifiers":[{"arguments":[{"id":2171,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2166,"src":"7537:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}}],"id":2172,"kind":"modifierInvocation","modifierName":{"id":2170,"name":"onlyDocumentOwnerOrAuthorized","nameLocations":["7507:29:3"],"nodeType":"IdentifierPath","referencedDeclaration":1840,"src":"7507:29:3"},"nodeType":"ModifierInvocation","src":"7507:44:3"}],"name":"getDocumentDetails","nameLocation":"7436:18:3","nodeType":"FunctionDefinition","parameters":{"id":2169,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2166,"mutability":"mutable","name":"clientAddress","nameLocation":"7463:13:3","nodeType":"VariableDeclaration","scope":2194,"src":"7455:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2165,"name":"address","nodeType":"ElementaryTypeName","src":"7455:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2168,"mutability":"mutable","name":"index","nameLocation":"7486:5:3","nodeType":"VariableDeclaration","scope":2194,"src":"7478:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2167,"name":"uint256","nodeType":"ElementaryTypeName","src":"7478:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"7454:38:3"},"returnParameters":{"id":2176,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2175,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2194,"src":"7561:15:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_memory_ptr","typeString":"struct InsuranceContract.Document"},"typeName":{"id":2174,"nodeType":"UserDefinedTypeName","pathNode":{"id":2173,"name":"Document","nameLocations":["7561:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"7561:8:3"},"referencedDeclaration":1708,"src":"7561:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"}},"visibility":"internal"}],"src":"7560:17:3"},"scope":2420,"src":"7427:296:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2372,"nodeType":"Block","src":"7905:1774:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2209,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2204,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"7924:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2205,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"7932:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2207,"indexExpression":{"id":2206,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"7948:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"7932:37:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2208,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"7970:6:3","memberName":"length","nodeType":"MemberAccess","src":"7932:44:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"7924:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":2210,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"7978:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":2203,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"7916:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2211,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"7916:78:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2212,"nodeType":"ExpressionStatement","src":"7916:78:3"},{"assignments":[2215],"declarations":[{"constant":false,"id":2215,"mutability":"mutable","name":"document","nameLocation":"8024:8:3","nodeType":"VariableDeclaration","scope":2372,"src":"8007:25:3","stateVariable":false,"storageLocation":"storage","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"},"typeName":{"id":2214,"nodeType":"UserDefinedTypeName","pathNode":{"id":2213,"name":"Document","nameLocations":["8007:8:3"],"nodeType":"IdentifierPath","referencedDeclaration":1708,"src":"8007:8:3"},"referencedDeclaration":1708,"src":"8007:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document"}},"visibility":"internal"}],"id":2221,"initialValue":{"baseExpression":{"baseExpression":{"id":2216,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"8035:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2218,"indexExpression":{"id":2217,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8051:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8035:37:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2220,"indexExpression":{"id":2219,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"8073:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8035:44:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage","typeString":"struct InsuranceContract.Document storage ref"}},"nodeType":"VariableDeclarationStatement","src":"8007:72:3"},{"assignments":[2223],"declarations":[{"constant":false,"id":2223,"mutability":"mutable","name":"success","nameLocation":"8095:7:3","nodeType":"VariableDeclaration","scope":2372,"src":"8090:12:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2222,"name":"bool","nodeType":"ElementaryTypeName","src":"8090:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"id":2224,"nodeType":"VariableDeclarationStatement","src":"8090:12:3"},{"expression":{"id":2241,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2225,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"8113:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"commonType":{"typeIdentifier":"t_bool","typeString":"bool"},"id":2240,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"baseExpression":{"baseExpression":{"id":2226,"name":"clientAccessRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"8123:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2228,"indexExpression":{"id":2227,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8142:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8123:40:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2231,"indexExpression":{"expression":{"id":2229,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8164:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2230,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8168:6:3","memberName":"sender","nodeType":"MemberAccess","src":"8164:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8123:52:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"BinaryOperation","operator":"&&","rightExpression":{"baseExpression":{"baseExpression":{"baseExpression":{"id":2232,"name":"documentAccessControl","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1744,"src":"8179:21:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$_$","typeString":"mapping(address => mapping(uint256 => mapping(address => bool)))"}},"id":2234,"indexExpression":{"id":2233,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8201:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8179:43:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(uint256 => mapping(address => bool))"}},"id":2236,"indexExpression":{"id":2235,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"8223:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8179:50:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2239,"indexExpression":{"expression":{"id":2237,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8230:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2238,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8234:6:3","memberName":"sender","nodeType":"MemberAccess","src":"8230:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8179:62:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8123:118:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"src":"8113:128:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2242,"nodeType":"ExpressionStatement","src":"8113:128:3"},{"condition":{"expression":{"id":2243,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8256:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2244,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8265:7:3","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":1704,"src":"8256:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2370,"nodeType":"Block","src":"8850:822:3","statements":[{"condition":{"expression":{"id":2293,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8868:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2294,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8877:7:3","memberName":"isValid","nodeType":"MemberAccess","referencedDeclaration":1704,"src":"8868:16:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"falseBody":{"id":2368,"nodeType":"Block","src":"9192:469:3","statements":[{"expression":{"id":2325,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftHandSide":{"id":2323,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9219:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"nodeType":"Assignment","operator":"=","rightHandSide":{"hexValue":"66616c7365","id":2324,"isConstant":false,"isLValue":false,"isPure":true,"kind":"bool","lValueRequested":false,"nodeType":"Literal","src":"9229:5:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"value":"false"},"src":"9219:15:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"id":2326,"nodeType":"ExpressionStatement","src":"9219:15:3"},{"assignments":[2328],"declarations":[{"constant":false,"id":2328,"mutability":"mutable","name":"traceIndex","nameLocation":"9259:10:3","nodeType":"VariableDeclaration","scope":2368,"src":"9251:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2327,"name":"uint256","nodeType":"ElementaryTypeName","src":"9251:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2332,"initialValue":{"expression":{"expression":{"id":2329,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"9272:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2330,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9281:19:3","memberName":"traceabilityIndexes","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"9272:28:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2331,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9301:6:3","memberName":"length","nodeType":"MemberAccess","src":"9272:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"9251:56:3"},{"expression":{"arguments":[{"id":2338,"name":"traceIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2328,"src":"9356:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2333,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"9322:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2336,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"9331:19:3","memberName":"traceabilityIndexes","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"9322:28:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2337,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9351:4:3","memberName":"push","nodeType":"MemberAccess","src":"9322:33:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2339,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9322:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2340,"nodeType":"ExpressionStatement","src":"9322:45:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2348,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9450:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2349,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9454:6:3","memberName":"sender","nodeType":"MemberAccess","src":"9450:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2350,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9462:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2351,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9468:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"9462:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"634c49454e54204e6f7420616c6c6f77656420746f2041636365737321","id":2352,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9479:31:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b9683a20b272460f5e93310cd76110314f0750268e2864549ed85904433fb9e1","typeString":"literal_string \"cLIENT Not allowed to Access!\""},"value":"cLIENT Not allowed to Access!"},{"id":2353,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9512:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b9683a20b272460f5e93310cd76110314f0750268e2864549ed85904433fb9e1","typeString":"literal_string \"cLIENT Not allowed to Access!\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2347,"name":"Traceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"9437:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Traceability_$1717_storage_ptr_$","typeString":"type(struct InsuranceContract.Traceability storage pointer)"}},"id":2354,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9437:83:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}],"expression":{"baseExpression":{"baseExpression":{"id":2341,"name":"documentTraceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"9382:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref))"}},"id":2344,"indexExpression":{"id":2342,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"9403:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9382:42:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref)"}},"id":2345,"indexExpression":{"id":2343,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"9425:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9382:49:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage","typeString":"struct InsuranceContract.Traceability storage ref[] storage ref"}},"id":2346,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9432:4:3","memberName":"push","nodeType":"MemberAccess","src":"9382:54:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$_t_struct$_Traceability_$1717_storage_$returns$__$attached_to$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.Traceability storage ref[] storage pointer,struct InsuranceContract.Traceability storage ref)"}},"id":2355,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9382:139:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2356,"nodeType":"ExpressionStatement","src":"9382:139:3"},{"eventCall":{"arguments":[{"expression":{"id":2358,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9558:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2359,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9562:6:3","memberName":"sender","nodeType":"MemberAccess","src":"9558:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2360,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"9570:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2361,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9592:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2362,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9598:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"9592:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2363,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"9609:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"43616e74204163636573732048617368","id":2364,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9617:18:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa","typeString":"literal_string \"Cant Access Hash\""},"value":"Cant Access Hash"},{"id":2365,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9637:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa","typeString":"literal_string \"Cant Access Hash\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2357,"name":"DocumentAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"9541:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,string memory,string memory,bool)"}},"id":2366,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9541:104:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2367,"nodeType":"EmitStatement","src":"9536:109:3"}]},"id":2369,"nodeType":"IfStatement","src":"8865:796:3","trueBody":{"id":2322,"nodeType":"Block","src":"8885:303:3","statements":[{"expression":{"arguments":[{"arguments":[{"expression":{"id":2302,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8968:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2303,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8972:6:3","memberName":"sender","nodeType":"MemberAccess","src":"8968:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2304,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8980:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2305,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8986:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"8980:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"hexValue":"446f63756d656e742046657463686564204e6f742076616c696421","id":2306,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8997:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c","typeString":"literal_string \"Document Fetched Not valid!\""},"value":"Document Fetched Not valid!"},{"id":2307,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9028:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c","typeString":"literal_string \"Document Fetched Not valid!\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2301,"name":"Traceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"8955:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Traceability_$1717_storage_ptr_$","typeString":"type(struct InsuranceContract.Traceability storage pointer)"}},"id":2308,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8955:81:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}],"expression":{"baseExpression":{"baseExpression":{"id":2295,"name":"documentTraceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8900:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref))"}},"id":2298,"indexExpression":{"id":2296,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8921:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8900:42:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref)"}},"id":2299,"indexExpression":{"id":2297,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"8943:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8900:49:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage","typeString":"struct InsuranceContract.Traceability storage ref[] storage ref"}},"id":2300,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8950:4:3","memberName":"push","nodeType":"MemberAccess","src":"8900:54:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$_t_struct$_Traceability_$1717_storage_$returns$__$attached_to$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.Traceability storage ref[] storage pointer,struct InsuranceContract.Traceability storage ref)"}},"id":2309,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8900:137:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2310,"nodeType":"ExpressionStatement","src":"8900:137:3"},{"eventCall":{"arguments":[{"expression":{"id":2312,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"9074:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2313,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9078:6:3","memberName":"sender","nodeType":"MemberAccess","src":"9074:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2314,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"9086:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2315,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"9108:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2316,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9114:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"9108:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2317,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"9125:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"hexValue":"446f63756d656e742046657463686564204e6f742076616c696421","id":2318,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9133:29:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c","typeString":"literal_string \"Document Fetched Not valid!\""},"value":"Document Fetched Not valid!"},{"id":2319,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"9164:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c","typeString":"literal_string \"Document Fetched Not valid!\""},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2311,"name":"DocumentAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"9057:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,string memory,string memory,bool)"}},"id":2320,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9057:115:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2321,"nodeType":"EmitStatement","src":"9052:120:3"}]}}]},"id":2371,"nodeType":"IfStatement","src":"8252:1420:3","trueBody":{"id":2292,"nodeType":"Block","src":"8274:570:3","statements":[{"expression":{"arguments":[{"id":2246,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"8340:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"416363657373206e6f74206772616e74656420746f207669657720646f63756d656e74","id":2247,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"8348:37:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b","typeString":"literal_string \"Access not granted to view document\""},"value":"Access not granted to view document"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b","typeString":"literal_string \"Access not granted to view document\""}],"id":2245,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"8332:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2248,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8332:54:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2249,"nodeType":"ExpressionStatement","src":"8332:54:3"},{"assignments":[2251],"declarations":[{"constant":false,"id":2251,"mutability":"mutable","name":"traceIndex","nameLocation":"8460:10:3","nodeType":"VariableDeclaration","scope":2292,"src":"8452:18:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2250,"name":"uint256","nodeType":"ElementaryTypeName","src":"8452:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"id":2255,"initialValue":{"expression":{"expression":{"id":2252,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8473:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2253,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8482:19:3","memberName":"traceabilityIndexes","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"8473:28:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2254,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8502:6:3","memberName":"length","nodeType":"MemberAccess","src":"8473:35:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"VariableDeclarationStatement","src":"8452:56:3"},{"expression":{"arguments":[{"id":2261,"name":"traceIndex","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2251,"src":"8557:10:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_uint256","typeString":"uint256"}],"expression":{"expression":{"id":2256,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8523:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2259,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8532:19:3","memberName":"traceabilityIndexes","nodeType":"MemberAccess","referencedDeclaration":1707,"src":"8523:28:3","typeDescriptions":{"typeIdentifier":"t_array$_t_uint256_$dyn_storage","typeString":"uint256[] storage ref"}},"id":2260,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8552:4:3","memberName":"push","nodeType":"MemberAccess","src":"8523:33:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_uint256_$dyn_storage_ptr_$_t_uint256_$returns$__$attached_to$_t_array$_t_uint256_$dyn_storage_ptr_$","typeString":"function (uint256[] storage pointer,uint256)"}},"id":2262,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8523:45:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2263,"nodeType":"ExpressionStatement","src":"8523:45:3"},{"expression":{"arguments":[{"arguments":[{"expression":{"id":2271,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8651:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2272,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8655:6:3","memberName":"sender","nodeType":"MemberAccess","src":"8651:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2273,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8663:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2274,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8669:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"8663:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2275,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"8680:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"id":2276,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"8688:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2270,"name":"Traceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1717,"src":"8638:12:3","typeDescriptions":{"typeIdentifier":"t_type$_t_struct$_Traceability_$1717_storage_ptr_$","typeString":"type(struct InsuranceContract.Traceability storage pointer)"}},"id":2277,"isConstant":false,"isLValue":false,"isPure":false,"kind":"structConstructorCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8638:58:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_struct$_Traceability_$1717_memory_ptr","typeString":"struct InsuranceContract.Traceability memory"}],"expression":{"baseExpression":{"baseExpression":{"id":2264,"name":"documentTraceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"8583:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref))"}},"id":2267,"indexExpression":{"id":2265,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8604:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8583:42:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref)"}},"id":2268,"indexExpression":{"id":2266,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2198,"src":"8626:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"8583:49:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage","typeString":"struct InsuranceContract.Traceability storage ref[] storage ref"}},"id":2269,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8633:4:3","memberName":"push","nodeType":"MemberAccess","src":"8583:54:3","typeDescriptions":{"typeIdentifier":"t_function_arraypush_nonpayable$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$_t_struct$_Traceability_$1717_storage_$returns$__$attached_to$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr_$","typeString":"function (struct InsuranceContract.Traceability storage ref[] storage pointer,struct InsuranceContract.Traceability storage ref)"}},"id":2278,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8583:114:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2279,"nodeType":"ExpressionStatement","src":"8583:114:3"},{"eventCall":{"arguments":[{"expression":{"id":2281,"name":"msg","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-15,"src":"8736:3:3","typeDescriptions":{"typeIdentifier":"t_magic_message","typeString":"msg"}},"id":2282,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8740:6:3","memberName":"sender","nodeType":"MemberAccess","src":"8736:10:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"id":2283,"name":"InsuranceFirmAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2196,"src":"8748:20:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},{"expression":{"id":2284,"name":"block","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":-4,"src":"8770:5:3","typeDescriptions":{"typeIdentifier":"t_magic_block","typeString":"block"}},"id":2285,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"8776:9:3","memberName":"timestamp","nodeType":"MemberAccess","src":"8770:15:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},{"id":2286,"name":"reason","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2200,"src":"8787:6:3","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"}},{"expression":{"id":2287,"name":"document","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2215,"src":"8795:8:3","typeDescriptions":{"typeIdentifier":"t_struct$_Document_$1708_storage_ptr","typeString":"struct InsuranceContract.Document storage pointer"}},"id":2288,"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"memberLocation":"8804:12:3","memberName":"documentHash","nodeType":"MemberAccess","referencedDeclaration":1700,"src":"8795:21:3","typeDescriptions":{"typeIdentifier":"t_string_storage","typeString":"string storage ref"}},{"id":2289,"name":"success","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2223,"src":"8818:7:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}}],"expression":{"argumentTypes":[{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_address","typeString":"address"},{"typeIdentifier":"t_uint256","typeString":"uint256"},{"typeIdentifier":"t_string_memory_ptr","typeString":"string memory"},{"typeIdentifier":"t_string_storage","typeString":"string storage ref"},{"typeIdentifier":"t_bool","typeString":"bool"}],"id":2280,"name":"DocumentAccessed","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1778,"src":"8719:16:3","typeDescriptions":{"typeIdentifier":"t_function_event_nonpayable$_t_address_$_t_address_$_t_uint256_$_t_string_memory_ptr_$_t_string_memory_ptr_$_t_bool_$returns$__$","typeString":"function (address,address,uint256,string memory,string memory,bool)"}},"id":2290,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"8719:107:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2291,"nodeType":"EmitStatement","src":"8714:112:3"}]}}]},"functionSelector":"84b28487","id":2373,"implemented":true,"kind":"function","modifiers":[],"name":"accessDocument","nameLocation":"7814:14:3","nodeType":"FunctionDefinition","parameters":{"id":2201,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2196,"mutability":"mutable","name":"InsuranceFirmAddress","nameLocation":"7837:20:3","nodeType":"VariableDeclaration","scope":2373,"src":"7829:28:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2195,"name":"address","nodeType":"ElementaryTypeName","src":"7829:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2198,"mutability":"mutable","name":"index","nameLocation":"7867:5:3","nodeType":"VariableDeclaration","scope":2373,"src":"7859:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2197,"name":"uint256","nodeType":"ElementaryTypeName","src":"7859:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"},{"constant":false,"id":2200,"mutability":"mutable","name":"reason","nameLocation":"7888:6:3","nodeType":"VariableDeclaration","scope":2373,"src":"7874:20:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_string_memory_ptr","typeString":"string"},"typeName":{"id":2199,"name":"string","nodeType":"ElementaryTypeName","src":"7874:6:3","typeDescriptions":{"typeIdentifier":"t_string_storage_ptr","typeString":"string"}},"visibility":"internal"}],"src":"7828:67:3"},"returnParameters":{"id":2202,"nodeType":"ParameterList","parameters":[],"src":"7905:0:3"},"scope":2420,"src":"7805:1874:3","stateMutability":"nonpayable","virtual":false,"visibility":"external"},{"body":{"id":2402,"nodeType":"Block","src":"9883:150:3","statements":[{"expression":{"arguments":[{"commonType":{"typeIdentifier":"t_uint256","typeString":"uint256"},"id":2392,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"leftExpression":{"id":2387,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"9902:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"nodeType":"BinaryOperation","operator":"<","rightExpression":{"expression":{"baseExpression":{"id":2388,"name":"clientDocuments","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1736,"src":"9910:15:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_array$_t_struct$_Document_$1708_storage_$dyn_storage_$","typeString":"mapping(address => struct InsuranceContract.Document storage ref[] storage ref)"}},"id":2390,"indexExpression":{"id":2389,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"9926:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9910:30:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Document_$1708_storage_$dyn_storage","typeString":"struct InsuranceContract.Document storage ref[] storage ref"}},"id":2391,"isConstant":false,"isLValue":false,"isPure":false,"lValueRequested":false,"memberLocation":"9941:6:3","memberName":"length","nodeType":"MemberAccess","src":"9910:37:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"src":"9902:45:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},{"hexValue":"496e76616c696420696e646578","id":2393,"isConstant":false,"isLValue":false,"isPure":true,"kind":"string","lValueRequested":false,"nodeType":"Literal","src":"9949:15:3","typeDescriptions":{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""},"value":"Invalid index"}],"expression":{"argumentTypes":[{"typeIdentifier":"t_bool","typeString":"bool"},{"typeIdentifier":"t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","typeString":"literal_string \"Invalid index\""}],"id":2386,"name":"require","nodeType":"Identifier","overloadedDeclarations":[-18,-18],"referencedDeclaration":-18,"src":"9894:7:3","typeDescriptions":{"typeIdentifier":"t_function_require_pure$_t_bool_$_t_string_memory_ptr_$returns$__$","typeString":"function (bool,string memory) pure"}},"id":2394,"isConstant":false,"isLValue":false,"isPure":false,"kind":"functionCall","lValueRequested":false,"nameLocations":[],"names":[],"nodeType":"FunctionCall","src":"9894:71:3","tryCall":false,"typeDescriptions":{"typeIdentifier":"t_tuple$__$","typeString":"tuple()"}},"id":2395,"nodeType":"ExpressionStatement","src":"9894:71:3"},{"expression":{"baseExpression":{"baseExpression":{"id":2396,"name":"documentTraceability","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1764,"src":"9983:20:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$_$","typeString":"mapping(address => mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref))"}},"id":2398,"indexExpression":{"id":2397,"name":"InsuranceFirm","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2375,"src":"10004:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9983:35:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_uint256_$_t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_$","typeString":"mapping(uint256 => struct InsuranceContract.Traceability storage ref[] storage ref)"}},"id":2400,"indexExpression":{"id":2399,"name":"index","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2377,"src":"10019:5:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"9983:42:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage","typeString":"struct InsuranceContract.Traceability storage ref[] storage ref"}},"functionReturnParameters":2385,"id":2401,"nodeType":"Return","src":"9976:49:3"}]},"functionSelector":"6029801b","id":2403,"implemented":true,"kind":"function","modifiers":[{"id":2380,"kind":"modifierInvocation","modifierName":{"id":2379,"name":"onlyBroker","nameLocations":["9840:10:3"],"nodeType":"IdentifierPath","referencedDeclaration":1799,"src":"9840:10:3"},"nodeType":"ModifierInvocation","src":"9840:10:3"}],"name":"getDocumentTraceability","nameLocation":"9764:23:3","nodeType":"FunctionDefinition","parameters":{"id":2378,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2375,"mutability":"mutable","name":"InsuranceFirm","nameLocation":"9796:13:3","nodeType":"VariableDeclaration","scope":2403,"src":"9788:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2374,"name":"address","nodeType":"ElementaryTypeName","src":"9788:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2377,"mutability":"mutable","name":"index","nameLocation":"9819:5:3","nodeType":"VariableDeclaration","scope":2403,"src":"9811:13:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"},"typeName":{"id":2376,"name":"uint256","nodeType":"ElementaryTypeName","src":"9811:7:3","typeDescriptions":{"typeIdentifier":"t_uint256","typeString":"uint256"}},"visibility":"internal"}],"src":"9787:38:3"},"returnParameters":{"id":2385,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2384,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2403,"src":"9860:21:3","stateVariable":false,"storageLocation":"memory","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","typeString":"struct InsuranceContract.Traceability[]"},"typeName":{"baseType":{"id":2382,"nodeType":"UserDefinedTypeName","pathNode":{"id":2381,"name":"Traceability","nameLocations":["9860:12:3"],"nodeType":"IdentifierPath","referencedDeclaration":1717,"src":"9860:12:3"},"referencedDeclaration":1717,"src":"9860:12:3","typeDescriptions":{"typeIdentifier":"t_struct$_Traceability_$1717_storage_ptr","typeString":"struct InsuranceContract.Traceability"}},"id":2383,"nodeType":"ArrayTypeName","src":"9860:14:3","typeDescriptions":{"typeIdentifier":"t_array$_t_struct$_Traceability_$1717_storage_$dyn_storage_ptr","typeString":"struct InsuranceContract.Traceability[]"}},"visibility":"internal"}],"src":"9859:23:3"},"scope":2420,"src":"9755:278:3","stateMutability":"view","virtual":false,"visibility":"external"},{"body":{"id":2418,"nodeType":"Block","src":"10242:77:3","statements":[{"expression":{"baseExpression":{"baseExpression":{"id":2412,"name":"clientAccessRights","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":1756,"src":"10260:18:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_mapping$_t_address_$_t_bool_$_$","typeString":"mapping(address => mapping(address => bool))"}},"id":2414,"indexExpression":{"id":2413,"name":"insuranceCompany","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2405,"src":"10279:16:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10260:36:3","typeDescriptions":{"typeIdentifier":"t_mapping$_t_address_$_t_bool_$","typeString":"mapping(address => bool)"}},"id":2416,"indexExpression":{"id":2415,"name":"clientAddress","nodeType":"Identifier","overloadedDeclarations":[],"referencedDeclaration":2407,"src":"10297:13:3","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"isConstant":false,"isLValue":true,"isPure":false,"lValueRequested":false,"nodeType":"IndexAccess","src":"10260:51:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"functionReturnParameters":2411,"id":2417,"nodeType":"Return","src":"10253:58:3"}]},"functionSelector":"c2ee0dbe","id":2419,"implemented":true,"kind":"function","modifiers":[],"name":"hasAccessToInsurance","nameLocation":"10143:20:3","nodeType":"FunctionDefinition","parameters":{"id":2408,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2405,"mutability":"mutable","name":"insuranceCompany","nameLocation":"10172:16:3","nodeType":"VariableDeclaration","scope":2419,"src":"10164:24:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2404,"name":"address","nodeType":"ElementaryTypeName","src":"10164:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"},{"constant":false,"id":2407,"mutability":"mutable","name":"clientAddress","nameLocation":"10198:13:3","nodeType":"VariableDeclaration","scope":2419,"src":"10190:21:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"},"typeName":{"id":2406,"name":"address","nodeType":"ElementaryTypeName","src":"10190:7:3","stateMutability":"nonpayable","typeDescriptions":{"typeIdentifier":"t_address","typeString":"address"}},"visibility":"internal"}],"src":"10163:49:3"},"returnParameters":{"id":2411,"nodeType":"ParameterList","parameters":[{"constant":false,"id":2410,"mutability":"mutable","name":"","nameLocation":"-1:-1:-1","nodeType":"VariableDeclaration","scope":2419,"src":"10236:4:3","stateVariable":false,"storageLocation":"default","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"},"typeName":{"id":2409,"name":"bool","nodeType":"ElementaryTypeName","src":"10236:4:3","typeDescriptions":{"typeIdentifier":"t_bool","typeString":"bool"}},"visibility":"internal"}],"src":"10235:6:3"},"scope":2420,"src":"10134:185:3","stateMutability":"view","virtual":false,"visibility":"external"}],"scope":2421,"src":"304:10018:3","usedErrors":[]}],"src":"33:10291:3"},"id":3}},"contracts":{"@openzeppelin/contracts/access/Ownable.sol":{"Ownable":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{"owner()":"8da5cb5b","renounceOwnership()":"715018a6","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"details\":\"Contract module which provides a basic access control mechanism, where there is an account (an owner) that can be granted exclusive access to specific functions. By default, the owner account will be the one that deploys the contract. This can later be changed with {transferOwnership}. This module is used through inheritance. It will make available the modifier `onlyOwner`, which can be applied to your functions to restrict their use to the owner.\",\"kind\":\"dev\",\"methods\":{\"constructor\":{\"details\":\"Initializes the contract setting the deployer as the initial owner.\"},\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/access/Ownable.sol\":\"Ownable\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/Context.sol":{"Context":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"","opcodes":"","sourceMap":""},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Provides information about the current execution context, including the sender of the transaction and its data. While these are generally available via msg.sender and msg.data, they should not be accessed in such a direct manner, since when dealing with meta-transactions the account sending and paying for execution may not be the actual sender (as far as an application is concerned). This contract is only required for intermediate, library-like contracts.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/Context.sol\":\"Context\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]}},\"version\":1}"}},"@openzeppelin/contracts/utils/math/SafeCast.sol":{"SafeCast":{"abi":[],"evm":{"bytecode":{"functionDebugData":{},"generatedSources":[],"linkReferences":{},"object":"60566050600b82828239805160001a6073146043577f4e487b7100000000000000000000000000000000000000000000000000000000600052600060045260246000fd5b30600052607381538281f3fe73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935371652a90687c4b4e6e122c650baa6ce0b117f4997686b3c8a7857a4440f564736f6c63430008130033","opcodes":"PUSH1 0x56 PUSH1 0x50 PUSH1 0xB DUP3 DUP3 DUP3 CODECOPY DUP1 MLOAD PUSH1 0x0 BYTE PUSH1 0x73 EQ PUSH1 0x43 JUMPI PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x0 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST ADDRESS PUSH1 0x0 MSTORE PUSH1 0x73 DUP2 MSTORE8 DUP3 DUP2 RETURN INVALID PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE8 PUSH18 0x652A90687C4B4E6E122C650BAA6CE0B117F4 SWAP10 PUSH23 0x86B3C8A7857A4440F564736F6C63430008130033000000 ","sourceMap":"927:34153:2:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;"},"deployedBytecode":{"functionDebugData":{},"generatedSources":[],"immutableReferences":{},"linkReferences":{},"object":"73000000000000000000000000000000000000000030146080604052600080fdfea2646970667358221220935371652a90687c4b4e6e122c650baa6ce0b117f4997686b3c8a7857a4440f564736f6c63430008130033","opcodes":"PUSH20 0x0 ADDRESS EQ PUSH1 0x80 PUSH1 0x40 MSTORE PUSH1 0x0 DUP1 REVERT INVALID LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 SWAP4 MSTORE8 PUSH18 0x652A90687C4B4E6E122C650BAA6CE0B117F4 SWAP10 PUSH23 0x86B3C8A7857A4440F564736F6C63430008130033000000 ","sourceMap":"927:34153:2:-:0;;;;;;;;"},"methodIdentifiers":{}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[],\"devdoc\":{\"details\":\"Wrappers over Solidity's uintXX/intXX casting operators with added overflow checks. Downcasting from uint256/int256 in Solidity does not revert on overflow. This can easily result in undesired exploitation or bugs, since developers usually assume that overflows raise errors. `SafeCast` restores this intuition by reverting the transaction when such an operation overflows. Using this library instead of the unchecked operations eliminates an entire class of bugs, so it's recommended to use it always. Can be combined with {SafeMath} and {SignedSafeMath} to extend it to smaller types, by performing all math on `uint256` and `int256` and then downcasting.\",\"kind\":\"dev\",\"methods\":{},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":\"SafeCast\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]}},\"version\":1}"}},"contracts/insurance.sol":{"InsuranceContract":{"abi":[{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"user","type":"address"},{"indexed":true,"internalType":"address","name":"documentOwner","type":"address"},{"indexed":false,"internalType":"uint256","name":"timestamp","type":"uint256"},{"indexed":false,"internalType":"string","name":"reason","type":"string"},{"indexed":false,"internalType":"string","name":"documentHash","type":"string"},{"indexed":false,"internalType":"bool","name":"success","type":"bool"}],"name":"DocumentAccessed","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"InsuranceFirm","type":"address"},{"indexed":true,"internalType":"address","name":"clientAddress","type":"address"},{"indexed":false,"internalType":"uint256","name":"Index","type":"uint256"}],"name":"DocumentGenerated","type":"event"},{"anonymous":false,"inputs":[{"indexed":true,"internalType":"address","name":"previousOwner","type":"address"},{"indexed":true,"internalType":"address","name":"newOwner","type":"address"}],"name":"OwnershipTransferred","type":"event"},{"inputs":[{"internalType":"address","name":"InsuranceFirmAddress","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"string","name":"reason","type":"string"}],"name":"accessDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"brokerDashboard","outputs":[{"components":[{"internalType":"address","name":"insuranceCompany","type":"address"},{"internalType":"address","name":"intendedClient","type":"address"},{"internalType":"uint256","name":"Index","type":"uint256"}],"internalType":"struct InsuranceContract.documentGenerated[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"InsuranceFirm","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"user","type":"address"}],"name":"getAccessControl","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"user","type":"address"}],"name":"getAllDocuments","outputs":[{"components":[{"internalType":"uint256","name":"indexNumber","type":"uint256"},{"internalType":"address","name":"InsuranceFirm","type":"address"},{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"string","name":"documentHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isValid","type":"bool"},{"internalType":"uint256[]","name":"traceabilityIndexes","type":"uint256[]"}],"internalType":"struct InsuranceContract.Document[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"insuranceCompany","type":"address"}],"name":"getClientDocuments","outputs":[{"components":[{"internalType":"uint256","name":"indexNumber","type":"uint256"},{"internalType":"address","name":"InsuranceFirm","type":"address"},{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"string","name":"documentHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isValid","type":"bool"},{"internalType":"uint256[]","name":"traceabilityIndexes","type":"uint256[]"}],"internalType":"struct InsuranceContract.Document[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDocumentDetails","outputs":[{"components":[{"internalType":"uint256","name":"indexNumber","type":"uint256"},{"internalType":"address","name":"InsuranceFirm","type":"address"},{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"string","name":"documentHash","type":"string"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"bool","name":"isValid","type":"bool"},{"internalType":"uint256[]","name":"traceabilityIndexes","type":"uint256[]"}],"internalType":"struct InsuranceContract.Document","name":"","type":"tuple"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"InsuranceFirm","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"getDocumentTraceability","outputs":[{"components":[{"internalType":"address","name":"user","type":"address"},{"internalType":"uint256","name":"timestamp","type":"uint256"},{"internalType":"string","name":"reason","type":"string"},{"internalType":"bool","name":"success","type":"bool"}],"internalType":"struct InsuranceContract.Traceability[]","name":"","type":"tuple[]"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"insuranceCompany","type":"address"},{"internalType":"address","name":"clientAddress","type":"address"}],"name":"hasAccessToInsurance","outputs":[{"internalType":"bool","name":"","type":"bool"}],"stateMutability":"view","type":"function"},{"inputs":[{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"}],"name":"markDocumentAsInvalid","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[],"name":"owner","outputs":[{"internalType":"address","name":"","type":"address"}],"stateMutability":"view","type":"function"},{"inputs":[],"name":"renounceOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"address","name":"insuranceCompany","type":"address"}],"name":"revokeAccess","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"InsuranceFirm","type":"address"},{"internalType":"uint256","name":"index","type":"uint256"},{"internalType":"address","name":"user","type":"address"},{"internalType":"bool","name":"hasAccess","type":"bool"}],"name":"setAccessControl","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"insuranceCompany","type":"address"},{"internalType":"address","name":"clientAddress","type":"address"},{"internalType":"string","name":"documentHash","type":"string"}],"name":"submitDocument","outputs":[],"stateMutability":"nonpayable","type":"function"},{"inputs":[{"internalType":"address","name":"newOwner","type":"address"}],"name":"transferOwnership","outputs":[],"stateMutability":"nonpayable","type":"function"}],"evm":{"bytecode":{"functionDebugData":{"@_23":{"entryPoint":null,"id":23,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":56,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":64,"id":111,"parameterSlots":1,"returnSlots":0}},"generatedSources":[],"linkReferences":{},"object":"60806040523480156200001157600080fd5b5062000032620000266200003860201b60201c565b6200004060201b60201c565b62000104565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6143cb80620001146000396000f3fe608060405234801561001057600080fd5b50600436106100f55760003560e01c806384b2848711610097578063cecf15e311610066578063cecf15e314610284578063e3766c2f146102a0578063f2fde38b146102d0578063f63f3f89146102ec576100f5565b806384b28487146101fc5780638da5cb5b14610218578063c030224a14610236578063c2ee0dbe14610254576100f5565b806359ded538116100d357806359ded538146101765780635f6ea340146101a65780636029801b146101c2578063715018a6146101f2576100f5565b806323b60fd9146100fa57806332d125cd1461012a578063472879d514610146575b600080fd5b610114600480360381019061010f9190612f8c565b610308565b60405161012191906131e7565b60405180910390f35b610144600480360381019061013f9190612f8c565b610709565b005b610160600480360381019061015b9190613209565b610881565b60405161016d919061326b565b60405180910390f35b610190600480360381019061018b9190613286565b610c6a565b60405161019d9190613418565b60405180910390f35b6101c060048036038101906101bb919061343a565b610f42565b005b6101dc60048036038101906101d79190612f8c565b6111b5565b6040516101e9919061359f565b60405180910390f35b6101fa61146b565b005b610216600480360381019061021191906136f6565b61147f565b005b610220611ce7565b60405161022d9190613774565b60405180910390f35b61023e611d10565b60405161024b9190613880565b60405180910390f35b61026e6004803603810190610269919061343a565b611ed7565b60405161027b919061326b565b60405180910390f35b61029e600480360381019061029991906138a2565b611f6b565b005b6102ba60048036038101906102b59190613286565b612677565b6040516102c79190613418565b60405180910390f35b6102ea60048036038101906102e59190613286565b61294a565b005b6103066004803603810190610301919061393d565b6129cd565b005b610310612e0f565b82610319611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061037d57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061040e5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61044d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044490613a01565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905083106104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890613a6d565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061052257610521613a8d565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461060190613aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461062d90613aeb565b801561067a5780601f1061064f5761010080835404028352916020019161067a565b820191906000526020600020905b81548152906001019060200180831161065d57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682018054806020026020016040519081016040528092919081815260200182805480156106f757602002820191906000526020600020905b8154815260200190600101908083116106e3575b50505050508152505091505092915050565b610711611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590613b8e565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f990613a6d565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061085557610854613a8d565b5b906000526020600020906007020160050160006101000a81548160ff0219169083151502179055505050565b60008361088c611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108f057508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806109815750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790613a01565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508410610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90613a6d565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610a9557610a94613a8d565b5b906000526020600020906007020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b865750600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90613c20565b60405180910390fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169150509392505050565b6060610c74611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd890613b8e565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610f3757838290600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610e2990613aeb565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5590613aeb565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201805480602002602001604051908101604052809291908181526020018280548015610f1f57602002820191906000526020600020905b815481526020019060010190808311610f0b575b50505050508152505081526020019060010190610d40565b505050509050919050565b610f4a611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae90613b8e565b60405180910390fd5b60011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107e90613c8c565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60606111bf611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461122c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122390613b8e565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790613a6d565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561145f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546113b390613aeb565b80601f01602080910402602001604051908101604052809291908181526020018280546113df90613aeb565b801561142c5780601f106114015761010080835404028352916020019161142c565b820191906000526020600020905b81548152906001019060200180831161140f57829003601f168201915b505050505081526020016003820160009054906101000a900460ff16151515158152505081526020019060010190611320565b50505050905092915050565b611473612cc5565b61147d6000612d43565b565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508210611503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fa90613a6d565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061155657611555613a8d565b5b906000526020600020906007020190506000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680156116955750600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b90508160050160009054906101000a900460ff16156118d457806116ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e590613d1e565b60405180910390fd5b60008260060180549050905082600601819080600181540180825580915050600190039060005260206000200160009091909190915055600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001868152602001841515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908161183d9190613eea565b5060608201518160030160006101000a81548160ff02191690831515021790555050508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735428787600301876040516118c69493929190614088565b60405180910390a350611ce0565b8160050160009054906101000a900460ff1615611ac957600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016040518060400160405280601b81526020017f446f63756d656e742046657463686564204e6f742076616c69642100000000008152508152602001831515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081611a389190613eea565b5060608201518160030160006101000a81548160ff02191690831515021790555050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735428685604051611abc93929190614127565b60405180910390a3611cdf565b6000905060008260060180549050905082600601819080600181540180825580915050600190039060005260206000200160009091909190915055600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016040518060400160405280601d81526020017f634c49454e54204e6f7420616c6c6f77656420746f20416363657373210000008152508152602001841515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081611c519190613eea565b5060608201518160030160006101000a81548160ff02191690831515021790555050508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735428786604051611cd5939291906141c4565b60405180910390a3505b5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060611d1a611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7e90613b8e565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611ece57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505081526020019060010190611de6565b50505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd190613a01565b60405180910390fd5b60004290506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060006040518060e001604052808381526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001848152602001600115158152602001600067ffffffffffffffff8111156120a1576120a06135cb565b5b6040519080825280602002602001820160405280156120cf5781602001602082028036833780820191505090505b508152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816121eb9190613eea565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006019080519060200190612232929190612e7a565b5050506001600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200160405180606001604052806034815260200161436260349139815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816124909190613eea565b5060608201518160030160006101000a81548160ff0219169083151502179055505050600060405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018481525090506001600061250a611ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f7a258764a3b2b35077d20a06a3382f6f7cbe6ba4a76a7402102fd275d88e0e68856040516126659190614215565b60405180910390a35050505050505050565b6060818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146126e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126df90613a01565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561293e57838290600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461283090613aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461285c90613aeb565b80156128a95780601f1061287e576101008083540402835291602001916128a9565b820191906000526020600020905b81548152906001019060200180831161288c57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016006820180548060200260200160405190810160405280929190818152602001828054801561292657602002820191906000526020600020905b815481526020019060010190808311612912575b50505050508152505081526020019060010190612747565b50505050915050919050565b612952612cc5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036129c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129b8906142a2565b60405180910390fd5b6129ca81612d43565b50565b6129d5611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612a42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3990613b8e565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508310612ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612abd90613a6d565b60405180910390fd5b80600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200160405180606001604052806033815260200161432f60339139815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081612c9c9190613eea565b5060608201518160030160006101000a81548160ff021916908315150217905550505050505050565b612ccd612e07565b73ffffffffffffffffffffffffffffffffffffffff16612ceb611ce7565b73ffffffffffffffffffffffffffffffffffffffff1614612d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d389061430e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600015158152602001606081525090565b828054828255906000526020600020908101928215612eb6579160200282015b82811115612eb5578251825591602001919060010190612e9a565b5b509050612ec39190612ec7565b5090565b5b80821115612ee0576000816000905550600101612ec8565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612f2382612ef8565b9050919050565b612f3381612f18565b8114612f3e57600080fd5b50565b600081359050612f5081612f2a565b92915050565b6000819050919050565b612f6981612f56565b8114612f7457600080fd5b50565b600081359050612f8681612f60565b92915050565b60008060408385031215612fa357612fa2612eee565b5b6000612fb185828601612f41565b9250506020612fc285828601612f77565b9150509250929050565b612fd581612f56565b82525050565b612fe481612f18565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613024578082015181840152602081019050613009565b60008484015250505050565b6000601f19601f8301169050919050565b600061304c82612fea565b6130568185612ff5565b9350613066818560208601613006565b61306f81613030565b840191505092915050565b60008115159050919050565b61308f8161307a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006130cd8383612fcc565b60208301905092915050565b6000602082019050919050565b60006130f182613095565b6130fb81856130a0565b9350613106836130b1565b8060005b8381101561313757815161311e88826130c1565b9750613129836130d9565b92505060018101905061310a565b5085935050505092915050565b600060e08301600083015161315c6000860182612fcc565b50602083015161316f6020860182612fdb565b5060408301516131826040860182612fdb565b506060830151848203606086015261319a8282613041565b91505060808301516131af6080860182612fcc565b5060a08301516131c260a0860182613086565b5060c083015184820360c08601526131da82826130e6565b9150508091505092915050565b600060208201905081810360008301526132018184613144565b905092915050565b60008060006060848603121561322257613221612eee565b5b600061323086828701612f41565b935050602061324186828701612f77565b925050604061325286828701612f41565b9150509250925092565b6132658161307a565b82525050565b6000602082019050613280600083018461325c565b92915050565b60006020828403121561329c5761329b612eee565b5b60006132aa84828501612f41565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060e0830160008301516132f76000860182612fcc565b50602083015161330a6020860182612fdb565b50604083015161331d6040860182612fdb565b50606083015184820360608601526133358282613041565b915050608083015161334a6080860182612fcc565b5060a083015161335d60a0860182613086565b5060c083015184820360c086015261337582826130e6565b9150508091505092915050565b600061338e83836132df565b905092915050565b6000602082019050919050565b60006133ae826132b3565b6133b881856132be565b9350836020820285016133ca856132cf565b8060005b8581101561340657848403895281516133e78582613382565b94506133f283613396565b925060208a019950506001810190506133ce565b50829750879550505050505092915050565b6000602082019050818103600083015261343281846133a3565b905092915050565b6000806040838503121561345157613450612eee565b5b600061345f85828601612f41565b925050602061347085828601612f41565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006080830160008301516134be6000860182612fdb565b5060208301516134d16020860182612fcc565b50604083015184820360408601526134e98282613041565b91505060608301516134fe6060860182613086565b508091505092915050565b600061351583836134a6565b905092915050565b6000602082019050919050565b60006135358261347a565b61353f8185613485565b93508360208202850161355185613496565b8060005b8581101561358d578484038952815161356e8582613509565b94506135798361351d565b925060208a01995050600181019050613555565b50829750879550505050505092915050565b600060208201905081810360008301526135b9818461352a565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61360382613030565b810181811067ffffffffffffffff82111715613622576136216135cb565b5b80604052505050565b6000613635612ee4565b905061364182826135fa565b919050565b600067ffffffffffffffff821115613661576136606135cb565b5b61366a82613030565b9050602081019050919050565b82818337600083830152505050565b600061369961369484613646565b61362b565b9050828152602081018484840111156136b5576136b46135c6565b5b6136c0848285613677565b509392505050565b600082601f8301126136dd576136dc6135c1565b5b81356136ed848260208601613686565b91505092915050565b60008060006060848603121561370f5761370e612eee565b5b600061371d86828701612f41565b935050602061372e86828701612f77565b925050604084013567ffffffffffffffff81111561374f5761374e612ef3565b5b61375b868287016136c8565b9150509250925092565b61376e81612f18565b82525050565b60006020820190506137896000830184613765565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6060820160008201516137d16000850182612fdb565b5060208201516137e46020850182612fdb565b5060408201516137f76040850182612fcc565b50505050565b600061380983836137bb565b60608301905092915050565b6000602082019050919050565b600061382d8261378f565b613837818561379a565b9350613842836137ab565b8060005b8381101561387357815161385a88826137fd565b975061386583613815565b925050600181019050613846565b5085935050505092915050565b6000602082019050818103600083015261389a8184613822565b905092915050565b6000806000606084860312156138bb576138ba612eee565b5b60006138c986828701612f41565b93505060206138da86828701612f41565b925050604084013567ffffffffffffffff8111156138fb576138fa612ef3565b5b613907868287016136c8565b9150509250925092565b61391a8161307a565b811461392557600080fd5b50565b60008135905061393781613911565b92915050565b6000806000806080858703121561395757613956612eee565b5b600061396587828801612f41565b945050602061397687828801612f77565b935050604061398787828801612f41565b925050606061399887828801613928565b91505092959194509250565b600082825260208201905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b60006139eb600e836139a4565b91506139f6826139b5565b602082019050919050565b60006020820190508181036000830152613a1a816139de565b9050919050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000613a57600d836139a4565b9150613a6282613a21565b602082019050919050565b60006020820190508181036000830152613a8681613a4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b0357607f821691505b602082108103613b1657613b15613abc565b5b50919050565b7f4f6e6c79207468652062726f6b65722063616e2063616c6c207468697320667560008201527f6e6374696f6e0000000000000000000000000000000000000000000000000000602082015250565b6000613b786026836139a4565b9150613b8382613b1c565b604082019050919050565b60006020820190508181036000830152613ba781613b6b565b9050919050565b7f4e6f7420617574686f72697a656420746f206765742061636365737320636f6e60008201527f74726f6c00000000000000000000000000000000000000000000000000000000602082015250565b6000613c0a6024836139a4565b9150613c1582613bae565b604082019050919050565b60006020820190508181036000830152613c3981613bfd565b9050919050565b7f416363657373206e6f74206772616e7465640000000000000000000000000000600082015250565b6000613c766012836139a4565b9150613c8182613c40565b602082019050919050565b60006020820190508181036000830152613ca581613c69565b9050919050565b7f416363657373206e6f74206772616e74656420746f207669657720646f63756d60008201527f656e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613d086023836139a4565b9150613d1382613cac565b604082019050919050565b60006020820190508181036000830152613d3781613cfb565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613da07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613d63565b613daa8683613d63565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613de7613de2613ddd84612f56565b613dc2565b612f56565b9050919050565b6000819050919050565b613e0183613dcc565b613e15613e0d82613dee565b848454613d70565b825550505050565b600090565b613e2a613e1d565b613e35818484613df8565b505050565b5b81811015613e5957613e4e600082613e22565b600181019050613e3b565b5050565b601f821115613e9e57613e6f81613d3e565b613e7884613d53565b81016020851015613e87578190505b613e9b613e9385613d53565b830182613e3a565b50505b505050565b600082821c905092915050565b6000613ec160001984600802613ea3565b1980831691505092915050565b6000613eda8383613eb0565b9150826002028217905092915050565b613ef382612fea565b67ffffffffffffffff811115613f0c57613f0b6135cb565b5b613f168254613aeb565b613f21828285613e5d565b600060209050601f831160018114613f545760008415613f42578287015190505b613f4c8582613ece565b865550613fb4565b601f198416613f6286613d3e565b60005b82811015613f8a57848901518255600182019150602085019450602081019050613f65565b86831015613fa75784890151613fa3601f891682613eb0565b8355505b6001600288020188555050505b505050505050565b613fc581612f56565b82525050565b6000613fd682612fea565b613fe081856139a4565b9350613ff0818560208601613006565b613ff981613030565b840191505092915050565b6000815461401181613aeb565b61401b81866139a4565b94506001821660008114614036576001811461404c5761407f565b60ff19831686528115156020028601935061407f565b61405585613d3e565b60005b8381101561407757815481890152600182019150602081019050614058565b808801955050505b50505092915050565b600060808201905061409d6000830187613fbc565b81810360208301526140af8186613fcb565b905081810360408301526140c38185614004565b90506140d2606083018461325c565b95945050505050565b7f446f63756d656e742046657463686564204e6f742076616c6964210000000000600082015250565b6000614111601b836139a4565b915061411c826140db565b602082019050919050565b600060808201905061413c6000830186613fbc565b818103602083015261414e8185613fcb565b9050818103604083015261416181614104565b9050614170606083018461325c565b949350505050565b7f43616e7420416363657373204861736800000000000000000000000000000000600082015250565b60006141ae6010836139a4565b91506141b982614178565b602082019050919050565b60006080820190506141d96000830186613fbc565b81810360208301526141eb8185613fcb565b905081810360408301526141fe816141a1565b905061420d606083018461325c565b949350505050565b600060208201905061422a6000830184613fbc565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061428c6026836139a4565b915061429782614230565b604082019050919050565b600060208201905081810360008301526142bb8161427f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006142f86020836139a4565b9150614303826142c2565b602082019050919050565b60006020820190508181036000830152614327816142eb565b905091905056fe42726f6b657220476976696e6720446f63756d656e742041636365737320746f205265737065637469766520436c69656e7421496e737572616e6365204669726d2047656e65726174657320496e737572616e636520436c61696d20666f7220636c49454e5421a264697066735822122084e929abcd0c32ee06b227122f65e674974561ea9448bf6317543f064de7ca4d64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH3 0x11 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH3 0x32 PUSH3 0x26 PUSH3 0x38 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x40 PUSH1 0x20 SHL PUSH1 0x20 SHR JUMP JUMPDEST PUSH3 0x104 JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH2 0x43CB DUP1 PUSH3 0x114 PUSH1 0x0 CODECOPY PUSH1 0x0 RETURN INVALID PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84B28487 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCECF15E3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCECF15E3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xE3766C2F EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xF63F3F89 EQ PUSH2 0x2EC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x84B28487 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xC030224A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC2EE0DBE EQ PUSH2 0x254 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x59DED538 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x59DED538 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5F6EA340 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6029801B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B60FD9 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x32D125CD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x472879D5 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x31E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x326B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x3286 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x146B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x36F6 JUMP JUMPDEST PUSH2 0x147F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x3774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x3880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x326B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x38A2 JUMP JUMPDEST PUSH2 0x1F6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x3286 JUMP JUMPDEST PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3286 JUMP JUMPDEST PUSH2 0x294A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x393D JUMP JUMPDEST PUSH2 0x29CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x2E0F JUMP JUMPDEST DUP3 PUSH2 0x319 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x37D JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x444 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x522 JUMPI PUSH2 0x521 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x601 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6E3 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x711 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x854 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x88C PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8F0 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x981 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA95 JUMPI PUSH2 0xA94 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB86 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP1 PUSH2 0x3C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC74 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD8 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF37 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xE29 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE55 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE77 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF1F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF0B JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD40 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4A PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAE SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107E SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11BF PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x145F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x13B3 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13DF SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x142C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1401 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x142C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x140F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1320 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1473 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x147D PUSH1 0x0 PUSH2 0x2D43 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FA SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1556 JUMPI PUSH2 0x1555 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1695 JUMPI POP PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP DUP2 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18D4 JUMPI DUP1 PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E5 SWAP1 PUSH2 0x3D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP3 PUSH1 0x6 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x32E4B9D586EF8959AA99CE37696BDBAE0C46D3C125D96CA7628DA896DD76C735 TIMESTAMP DUP8 DUP8 PUSH1 0x3 ADD DUP8 PUSH1 0x40 MLOAD PUSH2 0x18C6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1CE0 JUMP JUMPDEST DUP2 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AC9 JUMPI PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F63756D656E742046657463686564204E6F742076616C6964210000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1A38 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x32E4B9D586EF8959AA99CE37696BDBAE0C46D3C125D96CA7628DA896DD76C735 TIMESTAMP DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1ABC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP3 PUSH1 0x6 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x634C49454E54204E6F7420616C6C6F77656420746F2041636365737321000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1C51 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x32E4B9D586EF8959AA99CE37696BDBAE0C46D3C125D96CA7628DA896DD76C735 TIMESTAMP DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1CD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D1A PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7E SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1ECE JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD1 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x35CB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x21EB SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2232 SWAP3 SWAP2 SWAP1 PUSH2 0x2E7A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4362 PUSH1 0x34 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2490 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x250A PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A258764A3B2B35077D20A06A3382F6F7CBE6BA4A76A7402102FD275D88E0E68 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2665 SWAP2 SWAP1 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26DF SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x293E JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x2830 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285C SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x287E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x288C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2926 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2912 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2747 JUMP JUMPDEST POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2952 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B8 SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29CA DUP2 PUSH2 0x2D43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x29D5 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A39 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x2AC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ABD SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x432F PUSH1 0x33 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2C9C SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2CCD PUSH2 0x2E07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CEB PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D38 SWAP1 PUSH2 0x430E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2EB6 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2EB5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E9A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2EC3 SWAP2 SWAP1 PUSH2 0x2EC7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2EE0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2EC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 DUP3 PUSH2 0x2EF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F33 DUP2 PUSH2 0x2F18 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F50 DUP2 PUSH2 0x2F2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F69 DUP2 PUSH2 0x2F56 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F86 DUP2 PUSH2 0x2F60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA3 JUMPI PUSH2 0x2FA2 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FB1 DUP6 DUP3 DUP7 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FC2 DUP6 DUP3 DUP7 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FD5 DUP2 PUSH2 0x2F56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FE4 DUP2 PUSH2 0x2F18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3024 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304C DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3056 DUP2 DUP6 PUSH2 0x2FF5 JUMP JUMPDEST SWAP4 POP PUSH2 0x3066 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3006 JUMP JUMPDEST PUSH2 0x306F DUP2 PUSH2 0x3030 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x308F DUP2 PUSH2 0x307A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CD DUP4 DUP4 PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F1 DUP3 PUSH2 0x3095 JUMP JUMPDEST PUSH2 0x30FB DUP2 DUP6 PUSH2 0x30A0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3106 DUP4 PUSH2 0x30B1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3137 JUMPI DUP2 MLOAD PUSH2 0x311E DUP9 DUP3 PUSH2 0x30C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x3129 DUP4 PUSH2 0x30D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x310A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x315C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x316F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3182 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x319A DUP3 DUP3 PUSH2 0x3041 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x31AF PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x31C2 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x3086 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x31DA DUP3 DUP3 PUSH2 0x30E6 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3201 DUP2 DUP5 PUSH2 0x3144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3222 JUMPI PUSH2 0x3221 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3230 DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3241 DUP7 DUP3 DUP8 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3252 DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3265 DUP2 PUSH2 0x307A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3280 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x329C JUMPI PUSH2 0x329B PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32AA DUP5 DUP3 DUP6 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x32F7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x330A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x331D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x3335 DUP3 DUP3 PUSH2 0x3041 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x334A PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x335D PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x3086 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x3375 DUP3 DUP3 PUSH2 0x30E6 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338E DUP4 DUP4 PUSH2 0x32DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AE DUP3 PUSH2 0x32B3 JUMP JUMPDEST PUSH2 0x33B8 DUP2 DUP6 PUSH2 0x32BE JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x33CA DUP6 PUSH2 0x32CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3406 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x33E7 DUP6 DUP3 PUSH2 0x3382 JUMP JUMPDEST SWAP5 POP PUSH2 0x33F2 DUP4 PUSH2 0x3396 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33CE JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3432 DUP2 DUP5 PUSH2 0x33A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3451 JUMPI PUSH2 0x3450 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x345F DUP6 DUP3 DUP7 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3470 DUP6 DUP3 DUP7 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x34BE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x34D1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x34E9 DUP3 DUP3 PUSH2 0x3041 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x34FE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3086 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3515 DUP4 DUP4 PUSH2 0x34A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3535 DUP3 PUSH2 0x347A JUMP JUMPDEST PUSH2 0x353F DUP2 DUP6 PUSH2 0x3485 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3551 DUP6 PUSH2 0x3496 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x358D JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x356E DUP6 DUP3 PUSH2 0x3509 JUMP JUMPDEST SWAP5 POP PUSH2 0x3579 DUP4 PUSH2 0x351D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3555 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B9 DUP2 DUP5 PUSH2 0x352A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3603 DUP3 PUSH2 0x3030 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3622 JUMPI PUSH2 0x3621 PUSH2 0x35CB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3635 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3641 DUP3 DUP3 PUSH2 0x35FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3661 JUMPI PUSH2 0x3660 PUSH2 0x35CB JUMP JUMPDEST JUMPDEST PUSH2 0x366A DUP3 PUSH2 0x3030 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3699 PUSH2 0x3694 DUP5 PUSH2 0x3646 JUMP JUMPDEST PUSH2 0x362B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x36B5 JUMPI PUSH2 0x36B4 PUSH2 0x35C6 JUMP JUMPDEST JUMPDEST PUSH2 0x36C0 DUP5 DUP3 DUP6 PUSH2 0x3677 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36DD JUMPI PUSH2 0x36DC PUSH2 0x35C1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x36ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3686 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x370F JUMPI PUSH2 0x370E PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x371D DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x372E DUP7 DUP3 DUP8 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x374F JUMPI PUSH2 0x374E PUSH2 0x2EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x375B DUP7 DUP3 DUP8 ADD PUSH2 0x36C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x376E DUP2 PUSH2 0x2F18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3789 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3765 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x37D1 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x37E4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x37F7 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3809 DUP4 DUP4 PUSH2 0x37BB JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382D DUP3 PUSH2 0x378F JUMP JUMPDEST PUSH2 0x3837 DUP2 DUP6 PUSH2 0x379A JUMP JUMPDEST SWAP4 POP PUSH2 0x3842 DUP4 PUSH2 0x37AB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3873 JUMPI DUP2 MLOAD PUSH2 0x385A DUP9 DUP3 PUSH2 0x37FD JUMP JUMPDEST SWAP8 POP PUSH2 0x3865 DUP4 PUSH2 0x3815 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3846 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x389A DUP2 DUP5 PUSH2 0x3822 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38BB JUMPI PUSH2 0x38BA PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38C9 DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x38DA DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38FB JUMPI PUSH2 0x38FA PUSH2 0x2EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x3907 DUP7 DUP3 DUP8 ADD PUSH2 0x36C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x391A DUP2 PUSH2 0x307A JUMP JUMPDEST DUP2 EQ PUSH2 0x3925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3937 DUP2 PUSH2 0x3911 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3957 JUMPI PUSH2 0x3956 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3965 DUP8 DUP3 DUP9 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3976 DUP8 DUP3 DUP9 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3987 DUP8 DUP3 DUP9 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3998 DUP8 DUP3 DUP9 ADD PUSH2 0x3928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39EB PUSH1 0xE DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x39F6 DUP3 PUSH2 0x39B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A1A DUP2 PUSH2 0x39DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E64657800000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A57 PUSH1 0xD DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A62 DUP3 PUSH2 0x3A21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A86 DUP2 PUSH2 0x3A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3B03 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B16 JUMPI PUSH2 0x3B15 PUSH2 0x3ABC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652062726F6B65722063616E2063616C6C2074686973206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6374696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B78 PUSH1 0x26 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B83 DUP3 PUSH2 0x3B1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BA7 DUP2 PUSH2 0x3B6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206765742061636365737320636F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74726F6C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0A PUSH1 0x24 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C15 DUP3 PUSH2 0x3BAE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C39 DUP2 PUSH2 0x3BFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373206E6F74206772616E7465640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C76 PUSH1 0x12 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C81 DUP3 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA5 DUP2 PUSH2 0x3C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373206E6F74206772616E74656420746F207669657720646F63756D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D08 PUSH1 0x23 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D13 DUP3 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D37 DUP2 PUSH2 0x3CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3DA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D63 JUMP JUMPDEST PUSH2 0x3DAA DUP7 DUP4 PUSH2 0x3D63 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE7 PUSH2 0x3DE2 PUSH2 0x3DDD DUP5 PUSH2 0x2F56 JUMP JUMPDEST PUSH2 0x3DC2 JUMP JUMPDEST PUSH2 0x2F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E01 DUP4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x3E15 PUSH2 0x3E0D DUP3 PUSH2 0x3DEE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D70 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E2A PUSH2 0x3E1D JUMP JUMPDEST PUSH2 0x3E35 DUP2 DUP5 DUP5 PUSH2 0x3DF8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E59 JUMPI PUSH2 0x3E4E PUSH1 0x0 DUP3 PUSH2 0x3E22 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E9E JUMPI PUSH2 0x3E6F DUP2 PUSH2 0x3D3E JUMP JUMPDEST PUSH2 0x3E78 DUP5 PUSH2 0x3D53 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E87 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E9B PUSH2 0x3E93 DUP6 PUSH2 0x3D53 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E3A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EA3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EDA DUP4 DUP4 PUSH2 0x3EB0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EF3 DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F0C JUMPI PUSH2 0x3F0B PUSH2 0x35CB JUMP JUMPDEST JUMPDEST PUSH2 0x3F16 DUP3 SLOAD PUSH2 0x3AEB JUMP JUMPDEST PUSH2 0x3F21 DUP3 DUP3 DUP6 PUSH2 0x3E5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F54 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F42 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F4C DUP6 DUP3 PUSH2 0x3ECE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3FB4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F62 DUP7 PUSH2 0x3D3E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F8A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F65 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3FA7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3FA3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3EB0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3FC5 DUP2 PUSH2 0x2F56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD6 DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3FE0 DUP2 DUP6 PUSH2 0x39A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3006 JUMP JUMPDEST PUSH2 0x3FF9 DUP2 PUSH2 0x3030 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4011 DUP2 PUSH2 0x3AEB JUMP JUMPDEST PUSH2 0x401B DUP2 DUP7 PUSH2 0x39A4 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4036 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x404C JUMPI PUSH2 0x407F JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x407F JUMP JUMPDEST PUSH2 0x4055 DUP6 PUSH2 0x3D3E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4077 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4058 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x409D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3FBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x40AF DUP2 DUP7 PUSH2 0x3FCB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x40C3 DUP2 DUP6 PUSH2 0x4004 JUMP JUMPDEST SWAP1 POP PUSH2 0x40D2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x446F63756D656E742046657463686564204E6F742076616C6964210000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4111 PUSH1 0x1B DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x411C DUP3 PUSH2 0x40DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x413C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x414E DUP2 DUP6 PUSH2 0x3FCB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4161 DUP2 PUSH2 0x4104 JUMP JUMPDEST SWAP1 POP PUSH2 0x4170 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x43616E7420416363657373204861736800000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41AE PUSH1 0x10 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B9 DUP3 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x41D9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x41EB DUP2 DUP6 PUSH2 0x3FCB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x41FE DUP2 PUSH2 0x41A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x420D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x422A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428C PUSH1 0x26 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4297 DUP3 PUSH2 0x4230 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42BB DUP2 PUSH2 0x427F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F8 PUSH1 0x20 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4303 DUP3 PUSH2 0x42C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4327 DUP2 PUSH2 0x42EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP PUSH19 0x6F6B657220476976696E6720446F63756D656E PUSH21 0x2041636365737320746F2052657370656374697665 KECCAK256 NUMBER PUSH13 0x69656E7421496E737572616E63 PUSH6 0x204669726D20 SELFBALANCE PUSH6 0x6E6572617465 PUSH20 0x20496E737572616E636520436C61696D20666F72 KECCAK256 PUSH4 0x6C49454E SLOAD 0x21 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE9 0x29 0xAB 0xCD 0xC ORIGIN 0xEE MOD 0xB2 0x27 SLT 0x2F PUSH6 0xE674974561EA SWAP5 BASEFEE 0xBF PUSH4 0x17543F06 0x4D 0xE7 0xCA 0x4D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"304:10018:3:-:0;;;;;;;;;;;;;936:32:0;955:12;:10;;;:12;;:::i;:::-;936:18;;;:32;;:::i;:::-;304:10018:3;;655:96:1;708:7;734:10;727:17;;655:96;:::o;2426:187:0:-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;304:10018:3:-;;;;;;;"},"deployedBytecode":{"functionDebugData":{"@_checkOwner_54":{"entryPoint":11461,"id":54,"parameterSlots":0,"returnSlots":0},"@_msgSender_124":{"entryPoint":11783,"id":124,"parameterSlots":0,"returnSlots":1},"@_transferOwnership_111":{"entryPoint":11587,"id":111,"parameterSlots":1,"returnSlots":0},"@accessDocument_2373":{"entryPoint":5247,"id":2373,"parameterSlots":3,"returnSlots":0},"@brokerDashboard_2148":{"entryPoint":7440,"id":2148,"parameterSlots":0,"returnSlots":1},"@getAccessControl_2050":{"entryPoint":2177,"id":2050,"parameterSlots":3,"returnSlots":1},"@getAllDocuments_2164":{"entryPoint":3178,"id":2164,"parameterSlots":1,"returnSlots":1},"@getClientDocuments_2133":{"entryPoint":9847,"id":2133,"parameterSlots":1,"returnSlots":1},"@getDocumentDetails_2194":{"entryPoint":776,"id":2194,"parameterSlots":2,"returnSlots":1},"@getDocumentTraceability_2403":{"entryPoint":4533,"id":2403,"parameterSlots":2,"returnSlots":1},"@hasAccessToInsurance_2419":{"entryPoint":7895,"id":2419,"parameterSlots":2,"returnSlots":1},"@markDocumentAsInvalid_2116":{"entryPoint":1801,"id":2116,"parameterSlots":2,"returnSlots":0},"@owner_40":{"entryPoint":7399,"id":40,"parameterSlots":0,"returnSlots":1},"@renounceOwnership_68":{"entryPoint":5227,"id":68,"parameterSlots":0,"returnSlots":0},"@revokeAccess_2087":{"entryPoint":3906,"id":2087,"parameterSlots":2,"returnSlots":0},"@setAccessControl_1997":{"entryPoint":10701,"id":1997,"parameterSlots":4,"returnSlots":0},"@submitDocument_1947":{"entryPoint":8043,"id":1947,"parameterSlots":3,"returnSlots":0},"@transferOwnership_91":{"entryPoint":10570,"id":91,"parameterSlots":1,"returnSlots":0},"abi_decode_available_length_t_string_memory_ptr":{"entryPoint":13958,"id":null,"parameterSlots":3,"returnSlots":1},"abi_decode_t_address":{"entryPoint":12097,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_bool":{"entryPoint":14632,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_string_memory_ptr":{"entryPoint":14024,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_t_uint256":{"entryPoint":12151,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_address":{"entryPoint":12934,"id":null,"parameterSlots":2,"returnSlots":1},"abi_decode_tuple_t_addresst_address":{"entryPoint":13370,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_addresst_string_memory_ptr":{"entryPoint":14498,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256":{"entryPoint":12172,"id":null,"parameterSlots":2,"returnSlots":2},"abi_decode_tuple_t_addresst_uint256t_address":{"entryPoint":12809,"id":null,"parameterSlots":2,"returnSlots":3},"abi_decode_tuple_t_addresst_uint256t_addresst_bool":{"entryPoint":14653,"id":null,"parameterSlots":2,"returnSlots":4},"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr":{"entryPoint":14070,"id":null,"parameterSlots":2,"returnSlots":3},"abi_encodeUpdatedPos_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr":{"entryPoint":13186,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr":{"entryPoint":13577,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr":{"entryPoint":14333,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encodeUpdatedPos_t_uint256_to_t_uint256":{"entryPoint":12481,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_address_to_t_address":{"entryPoint":12251,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_address_to_t_address_fromStack":{"entryPoint":14181,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13219,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13610,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14370,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12518,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_bool_to_t_bool":{"entryPoint":12422,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_bool_to_t_bool_fromStack":{"entryPoint":12892,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr":{"entryPoint":12353,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack":{"entryPoint":16331,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack":{"entryPoint":16388,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_to_t_string_memory_ptr_fromStack":{"entryPoint":16801,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack":{"entryPoint":17023,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3_to_t_string_memory_ptr_fromStack":{"entryPoint":15357,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack":{"entryPoint":14922,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68_to_t_string_memory_ptr_fromStack":{"entryPoint":15211,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b_to_t_string_memory_ptr_fromStack":{"entryPoint":15611,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack":{"entryPoint":17131,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f_to_t_string_memory_ptr_fromStack":{"entryPoint":15465,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_to_t_string_memory_ptr_fromStack":{"entryPoint":16644,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack":{"entryPoint":14814,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr":{"entryPoint":13023,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr_fromStack":{"entryPoint":12612,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr":{"entryPoint":13478,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr":{"entryPoint":14267,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256":{"entryPoint":12236,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_t_uint256_to_t_uint256_fromStack":{"entryPoint":16316,"id":null,"parameterSlots":2,"returnSlots":0},"abi_encode_tuple_t_address__to_t_address__fromStack_reversed":{"entryPoint":14196,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13336,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":13727,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr__fromStack_reversed":{"entryPoint":14464,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed":{"entryPoint":12907,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17058,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15392,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14957,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15246,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15646,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":17166,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":15500,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed":{"entryPoint":14849,"id":null,"parameterSlots":1,"returnSlots":1},"abi_encode_tuple_t_struct$_Document_$1708_memory_ptr__to_t_struct$_Document_$1708_memory_ptr__fromStack_reversed":{"entryPoint":12775,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed":{"entryPoint":16917,"id":null,"parameterSlots":2,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_storage_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":16520,"id":null,"parameterSlots":5,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":16836,"id":null,"parameterSlots":4,"returnSlots":1},"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed":{"entryPoint":16679,"id":null,"parameterSlots":4,"returnSlots":1},"allocate_memory":{"entryPoint":13867,"id":null,"parameterSlots":1,"returnSlots":1},"allocate_unbounded":{"entryPoint":12004,"id":null,"parameterSlots":0,"returnSlots":1},"array_allocation_size_t_string_memory_ptr":{"entryPoint":13894,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr":{"entryPoint":13007,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr":{"entryPoint":13462,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr":{"entryPoint":14251,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12465,"id":null,"parameterSlots":1,"returnSlots":1},"array_dataslot_t_string_storage":{"entryPoint":15678,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr":{"entryPoint":12979,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr":{"entryPoint":13434,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr":{"entryPoint":14223,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12437,"id":null,"parameterSlots":1,"returnSlots":1},"array_length_t_string_memory_ptr":{"entryPoint":12266,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr":{"entryPoint":13206,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr":{"entryPoint":13597,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr":{"entryPoint":14357,"id":null,"parameterSlots":1,"returnSlots":1},"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12505,"id":null,"parameterSlots":1,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":12990,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":13445,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack":{"entryPoint":14234,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr":{"entryPoint":12448,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr":{"entryPoint":12277,"id":null,"parameterSlots":2,"returnSlots":1},"array_storeLengthForEncoding_t_string_memory_ptr_fromStack":{"entryPoint":14756,"id":null,"parameterSlots":2,"returnSlots":1},"clean_up_bytearray_end_slots_t_string_storage":{"entryPoint":15965,"id":null,"parameterSlots":3,"returnSlots":0},"cleanup_t_address":{"entryPoint":12056,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_bool":{"entryPoint":12410,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint160":{"entryPoint":12024,"id":null,"parameterSlots":1,"returnSlots":1},"cleanup_t_uint256":{"entryPoint":12118,"id":null,"parameterSlots":1,"returnSlots":1},"clear_storage_range_t_bytes1":{"entryPoint":15930,"id":null,"parameterSlots":2,"returnSlots":0},"convert_t_uint256_to_t_uint256":{"entryPoint":15820,"id":null,"parameterSlots":1,"returnSlots":1},"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage":{"entryPoint":16106,"id":null,"parameterSlots":2,"returnSlots":0},"copy_calldata_to_memory_with_cleanup":{"entryPoint":13943,"id":null,"parameterSlots":3,"returnSlots":0},"copy_memory_to_memory_with_cleanup":{"entryPoint":12294,"id":null,"parameterSlots":3,"returnSlots":0},"divide_by_32_ceil":{"entryPoint":15699,"id":null,"parameterSlots":1,"returnSlots":1},"extract_byte_array_length":{"entryPoint":15083,"id":null,"parameterSlots":1,"returnSlots":1},"extract_used_part_and_set_length_of_short_byte_array":{"entryPoint":16078,"id":null,"parameterSlots":2,"returnSlots":1},"finalize_allocation":{"entryPoint":13818,"id":null,"parameterSlots":2,"returnSlots":0},"identity":{"entryPoint":15810,"id":null,"parameterSlots":1,"returnSlots":1},"mask_bytes_dynamic":{"entryPoint":16048,"id":null,"parameterSlots":2,"returnSlots":1},"panic_error_0x22":{"entryPoint":15036,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x32":{"entryPoint":14989,"id":null,"parameterSlots":0,"returnSlots":0},"panic_error_0x41":{"entryPoint":13771,"id":null,"parameterSlots":0,"returnSlots":0},"prepare_store_t_uint256":{"entryPoint":15854,"id":null,"parameterSlots":1,"returnSlots":1},"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d":{"entryPoint":13761,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae":{"entryPoint":13766,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db":{"entryPoint":12019,"id":null,"parameterSlots":0,"returnSlots":0},"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b":{"entryPoint":12014,"id":null,"parameterSlots":0,"returnSlots":0},"round_up_to_mul_of_32":{"entryPoint":12336,"id":null,"parameterSlots":1,"returnSlots":1},"shift_left_dynamic":{"entryPoint":15715,"id":null,"parameterSlots":2,"returnSlots":1},"shift_right_unsigned_dynamic":{"entryPoint":16035,"id":null,"parameterSlots":2,"returnSlots":1},"storage_set_to_zero_t_uint256":{"entryPoint":15906,"id":null,"parameterSlots":2,"returnSlots":0},"store_literal_in_memory_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa":{"entryPoint":16760,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe":{"entryPoint":16944,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3":{"entryPoint":15278,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60":{"entryPoint":14881,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68":{"entryPoint":15132,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b":{"entryPoint":15532,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe":{"entryPoint":17090,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f":{"entryPoint":15424,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c":{"entryPoint":16603,"id":null,"parameterSlots":1,"returnSlots":0},"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36":{"entryPoint":14773,"id":null,"parameterSlots":1,"returnSlots":0},"update_byte_slice_dynamic32":{"entryPoint":15728,"id":null,"parameterSlots":3,"returnSlots":1},"update_storage_value_t_uint256_to_t_uint256":{"entryPoint":15864,"id":null,"parameterSlots":3,"returnSlots":0},"validator_revert_t_address":{"entryPoint":12074,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_bool":{"entryPoint":14609,"id":null,"parameterSlots":1,"returnSlots":0},"validator_revert_t_uint256":{"entryPoint":12128,"id":null,"parameterSlots":1,"returnSlots":0},"zero_value_for_split_t_uint256":{"entryPoint":15901,"id":null,"parameterSlots":0,"returnSlots":1}},"generatedSources":[{"ast":{"nodeType":"YulBlock","src":"0:43430:4","statements":[{"body":{"nodeType":"YulBlock","src":"47:35:4","statements":[{"nodeType":"YulAssignment","src":"57:19:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"73:2:4","type":"","value":"64"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"67:5:4"},"nodeType":"YulFunctionCall","src":"67:9:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"57:6:4"}]}]},"name":"allocate_unbounded","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"40:6:4","type":""}],"src":"7:75:4"},{"body":{"nodeType":"YulBlock","src":"177:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"194:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"197:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"187:6:4"},"nodeType":"YulFunctionCall","src":"187:12:4"},"nodeType":"YulExpressionStatement","src":"187:12:4"}]},"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulFunctionDefinition","src":"88:117:4"},{"body":{"nodeType":"YulBlock","src":"300:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"317:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"320:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"310:6:4"},"nodeType":"YulFunctionCall","src":"310:12:4"},"nodeType":"YulExpressionStatement","src":"310:12:4"}]},"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulFunctionDefinition","src":"211:117:4"},{"body":{"nodeType":"YulBlock","src":"379:81:4","statements":[{"nodeType":"YulAssignment","src":"389:65:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"404:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"411:42:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"400:3:4"},"nodeType":"YulFunctionCall","src":"400:54:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"389:7:4"}]}]},"name":"cleanup_t_uint160","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"361:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"371:7:4","type":""}],"src":"334:126:4"},{"body":{"nodeType":"YulBlock","src":"511:51:4","statements":[{"nodeType":"YulAssignment","src":"521:35:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"550:5:4"}],"functionName":{"name":"cleanup_t_uint160","nodeType":"YulIdentifier","src":"532:17:4"},"nodeType":"YulFunctionCall","src":"532:24:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"521:7:4"}]}]},"name":"cleanup_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"493:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"503:7:4","type":""}],"src":"466:96:4"},{"body":{"nodeType":"YulBlock","src":"611:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"668:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"677:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"680:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"670:6:4"},"nodeType":"YulFunctionCall","src":"670:12:4"},"nodeType":"YulExpressionStatement","src":"670:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"634:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"659:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"641:17:4"},"nodeType":"YulFunctionCall","src":"641:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"631:2:4"},"nodeType":"YulFunctionCall","src":"631:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"624:6:4"},"nodeType":"YulFunctionCall","src":"624:43:4"},"nodeType":"YulIf","src":"621:63:4"}]},"name":"validator_revert_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"604:5:4","type":""}],"src":"568:122:4"},{"body":{"nodeType":"YulBlock","src":"748:87:4","statements":[{"nodeType":"YulAssignment","src":"758:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"780:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"767:12:4"},"nodeType":"YulFunctionCall","src":"767:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"758:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"823:5:4"}],"functionName":{"name":"validator_revert_t_address","nodeType":"YulIdentifier","src":"796:26:4"},"nodeType":"YulFunctionCall","src":"796:33:4"},"nodeType":"YulExpressionStatement","src":"796:33:4"}]},"name":"abi_decode_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"726:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"734:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"742:5:4","type":""}],"src":"696:139:4"},{"body":{"nodeType":"YulBlock","src":"886:32:4","statements":[{"nodeType":"YulAssignment","src":"896:16:4","value":{"name":"value","nodeType":"YulIdentifier","src":"907:5:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"896:7:4"}]}]},"name":"cleanup_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"868:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"878:7:4","type":""}],"src":"841:77:4"},{"body":{"nodeType":"YulBlock","src":"967:79:4","statements":[{"body":{"nodeType":"YulBlock","src":"1024:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"1033:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"1036:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"1026:6:4"},"nodeType":"YulFunctionCall","src":"1026:12:4"},"nodeType":"YulExpressionStatement","src":"1026:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"990:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1015:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"997:17:4"},"nodeType":"YulFunctionCall","src":"997:24:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"987:2:4"},"nodeType":"YulFunctionCall","src":"987:35:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"980:6:4"},"nodeType":"YulFunctionCall","src":"980:43:4"},"nodeType":"YulIf","src":"977:63:4"}]},"name":"validator_revert_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"960:5:4","type":""}],"src":"924:122:4"},{"body":{"nodeType":"YulBlock","src":"1104:87:4","statements":[{"nodeType":"YulAssignment","src":"1114:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"1136:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"1123:12:4"},"nodeType":"YulFunctionCall","src":"1123:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"1114:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1179:5:4"}],"functionName":{"name":"validator_revert_t_uint256","nodeType":"YulIdentifier","src":"1152:26:4"},"nodeType":"YulFunctionCall","src":"1152:33:4"},"nodeType":"YulExpressionStatement","src":"1152:33:4"}]},"name":"abi_decode_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"1082:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"1090:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"1098:5:4","type":""}],"src":"1052:139:4"},{"body":{"nodeType":"YulBlock","src":"1280:391:4","statements":[{"body":{"nodeType":"YulBlock","src":"1326:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"1328:77:4"},"nodeType":"YulFunctionCall","src":"1328:79:4"},"nodeType":"YulExpressionStatement","src":"1328:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"1301:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"1310:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"1297:3:4"},"nodeType":"YulFunctionCall","src":"1297:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"1322:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"1293:3:4"},"nodeType":"YulFunctionCall","src":"1293:32:4"},"nodeType":"YulIf","src":"1290:119:4"},{"nodeType":"YulBlock","src":"1419:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1434:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1448:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1438:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1463:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1498:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1509:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1494:3:4"},"nodeType":"YulFunctionCall","src":"1494:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1518:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"1473:20:4"},"nodeType":"YulFunctionCall","src":"1473:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"1463:6:4"}]}]},{"nodeType":"YulBlock","src":"1546:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"1561:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"1575:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"1565:6:4","type":""}]},{"nodeType":"YulAssignment","src":"1591:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"1626:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"1637:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"1622:3:4"},"nodeType":"YulFunctionCall","src":"1622:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"1646:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"1601:20:4"},"nodeType":"YulFunctionCall","src":"1601:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"1591:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"1242:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"1253:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"1265:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"1273:6:4","type":""}],"src":"1197:474:4"},{"body":{"nodeType":"YulBlock","src":"1732:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1749:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1772:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"1754:17:4"},"nodeType":"YulFunctionCall","src":"1754:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1742:6:4"},"nodeType":"YulFunctionCall","src":"1742:37:4"},"nodeType":"YulExpressionStatement","src":"1742:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1720:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1727:3:4","type":""}],"src":"1677:108:4"},{"body":{"nodeType":"YulBlock","src":"1846:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"1863:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1886:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"1868:17:4"},"nodeType":"YulFunctionCall","src":"1868:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"1856:6:4"},"nodeType":"YulFunctionCall","src":"1856:37:4"},"nodeType":"YulExpressionStatement","src":"1856:37:4"}]},"name":"abi_encode_t_address_to_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1834:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"1841:3:4","type":""}],"src":"1791:108:4"},{"body":{"nodeType":"YulBlock","src":"1964:40:4","statements":[{"nodeType":"YulAssignment","src":"1975:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"1991:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"1985:5:4"},"nodeType":"YulFunctionCall","src":"1985:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"1975:6:4"}]}]},"name":"array_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"1947:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"1957:6:4","type":""}],"src":"1905:99:4"},{"body":{"nodeType":"YulBlock","src":"2096:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2113:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"2118:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2106:6:4"},"nodeType":"YulFunctionCall","src":"2106:19:4"},"nodeType":"YulExpressionStatement","src":"2106:19:4"},{"nodeType":"YulAssignment","src":"2134:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2153:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"2158:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2149:3:4"},"nodeType":"YulFunctionCall","src":"2149:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"2134:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"2068:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"2073:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"2084:11:4","type":""}],"src":"2010:159:4"},{"body":{"nodeType":"YulBlock","src":"2237:184:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2247:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"2256:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"2251:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"2316:63:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2341:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"2346:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2337:3:4"},"nodeType":"YulFunctionCall","src":"2337:11:4"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"2360:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"2365:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2356:3:4"},"nodeType":"YulFunctionCall","src":"2356:11:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"2350:5:4"},"nodeType":"YulFunctionCall","src":"2350:18:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2330:6:4"},"nodeType":"YulFunctionCall","src":"2330:39:4"},"nodeType":"YulExpressionStatement","src":"2330:39:4"}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2277:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"2280:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"2274:2:4"},"nodeType":"YulFunctionCall","src":"2274:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"2288:19:4","statements":[{"nodeType":"YulAssignment","src":"2290:15:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"2299:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"2302:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2295:3:4"},"nodeType":"YulFunctionCall","src":"2295:10:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"2290:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"2270:3:4","statements":[]},"src":"2266:113:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"2399:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"2404:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2395:3:4"},"nodeType":"YulFunctionCall","src":"2395:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"2413:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"2388:6:4"},"nodeType":"YulFunctionCall","src":"2388:27:4"},"nodeType":"YulExpressionStatement","src":"2388:27:4"}]},"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"2219:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"2224:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"2229:6:4","type":""}],"src":"2175:246:4"},{"body":{"nodeType":"YulBlock","src":"2475:54:4","statements":[{"nodeType":"YulAssignment","src":"2485:38:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2503:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"2510:2:4","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2499:3:4"},"nodeType":"YulFunctionCall","src":"2499:14:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"2519:2:4","type":"","value":"31"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"2515:3:4"},"nodeType":"YulFunctionCall","src":"2515:7:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"2495:3:4"},"nodeType":"YulFunctionCall","src":"2495:28:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"2485:6:4"}]}]},"name":"round_up_to_mul_of_32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2458:5:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"2468:6:4","type":""}],"src":"2427:102:4"},{"body":{"nodeType":"YulBlock","src":"2617:275:4","statements":[{"nodeType":"YulVariableDeclaration","src":"2627:53:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2674:5:4"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2641:32:4"},"nodeType":"YulFunctionCall","src":"2641:39:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"2631:6:4","type":""}]},{"nodeType":"YulAssignment","src":"2689:68:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2745:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"2750:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr","nodeType":"YulIdentifier","src":"2696:48:4"},"nodeType":"YulFunctionCall","src":"2696:61:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"2689:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2805:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"2812:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2801:3:4"},"nodeType":"YulFunctionCall","src":"2801:16:4"},{"name":"pos","nodeType":"YulIdentifier","src":"2819:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"2824:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"2766:34:4"},"nodeType":"YulFunctionCall","src":"2766:65:4"},"nodeType":"YulExpressionStatement","src":"2766:65:4"},{"nodeType":"YulAssignment","src":"2840:46:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"2851:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"2878:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"2856:21:4"},"nodeType":"YulFunctionCall","src":"2856:29:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"2847:3:4"},"nodeType":"YulFunctionCall","src":"2847:39:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"2840:3:4"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2598:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"2605:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"2613:3:4","type":""}],"src":"2535:357:4"},{"body":{"nodeType":"YulBlock","src":"2940:48:4","statements":[{"nodeType":"YulAssignment","src":"2950:32:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"2975:5:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2968:6:4"},"nodeType":"YulFunctionCall","src":"2968:13:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"2961:6:4"},"nodeType":"YulFunctionCall","src":"2961:21:4"},"variableNames":[{"name":"cleaned","nodeType":"YulIdentifier","src":"2950:7:4"}]}]},"name":"cleanup_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"2922:5:4","type":""}],"returnVariables":[{"name":"cleaned","nodeType":"YulTypedName","src":"2932:7:4","type":""}],"src":"2898:90:4"},{"body":{"nodeType":"YulBlock","src":"3043:50:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3060:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3080:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"3065:14:4"},"nodeType":"YulFunctionCall","src":"3065:21:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3053:6:4"},"nodeType":"YulFunctionCall","src":"3053:34:4"},"nodeType":"YulExpressionStatement","src":"3053:34:4"}]},"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3031:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3038:3:4","type":""}],"src":"2994:99:4"},{"body":{"nodeType":"YulBlock","src":"3173:40:4","statements":[{"nodeType":"YulAssignment","src":"3184:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"3200:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"3194:5:4"},"nodeType":"YulFunctionCall","src":"3194:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"3184:6:4"}]}]},"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3156:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"3166:6:4","type":""}],"src":"3099:114:4"},{"body":{"nodeType":"YulBlock","src":"3320:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3337:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"3342:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"3330:6:4"},"nodeType":"YulFunctionCall","src":"3330:19:4"},"nodeType":"YulExpressionStatement","src":"3330:19:4"},{"nodeType":"YulAssignment","src":"3358:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3377:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3382:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3373:3:4"},"nodeType":"YulFunctionCall","src":"3373:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"3358:11:4"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"3292:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"3297:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"3308:11:4","type":""}],"src":"3219:174:4"},{"body":{"nodeType":"YulBlock","src":"3471:60:4","statements":[{"nodeType":"YulAssignment","src":"3481:11:4","value":{"name":"ptr","nodeType":"YulIdentifier","src":"3489:3:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3481:4:4"}]},{"nodeType":"YulAssignment","src":"3502:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3514:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3519:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3510:3:4"},"nodeType":"YulFunctionCall","src":"3510:14:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"3502:4:4"}]}]},"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3458:3:4","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"3466:4:4","type":""}],"src":"3399:132:4"},{"body":{"nodeType":"YulBlock","src":"3617:99:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"3661:6:4"},{"name":"pos","nodeType":"YulIdentifier","src":"3669:3:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"3627:33:4"},"nodeType":"YulFunctionCall","src":"3627:46:4"},"nodeType":"YulExpressionStatement","src":"3627:46:4"},{"nodeType":"YulAssignment","src":"3682:28:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"3700:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3705:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3696:3:4"},"nodeType":"YulFunctionCall","src":"3696:14:4"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"3682:10:4"}]}]},"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"3590:6:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3598:3:4","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"3606:10:4","type":""}],"src":"3537:179:4"},{"body":{"nodeType":"YulBlock","src":"3797:38:4","statements":[{"nodeType":"YulAssignment","src":"3807:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"3819:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"3824:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"3815:3:4"},"nodeType":"YulFunctionCall","src":"3815:14:4"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"3807:4:4"}]}]},"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"3784:3:4","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"3792:4:4","type":""}],"src":"3722:113:4"},{"body":{"nodeType":"YulBlock","src":"3985:598:4","statements":[{"nodeType":"YulVariableDeclaration","src":"3995:68:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4057:5:4"}],"functionName":{"name":"array_length_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4009:47:4"},"nodeType":"YulFunctionCall","src":"4009:54:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"3999:6:4","type":""}]},{"nodeType":"YulAssignment","src":"4072:83:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4143:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"4148:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4079:63:4"},"nodeType":"YulFunctionCall","src":"4079:76:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4072:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"4164:71:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4229:5:4"}],"functionName":{"name":"array_dataslot_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4179:49:4"},"nodeType":"YulFunctionCall","src":"4179:56:4"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"4168:7:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"4244:21:4","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"4258:7:4"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"4248:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"4334:224:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4348:34:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4375:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4369:5:4"},"nodeType":"YulFunctionCall","src":"4369:13:4"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"4352:13:4","type":""}]},{"nodeType":"YulAssignment","src":"4395:70:4","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"4446:13:4"},{"name":"pos","nodeType":"YulIdentifier","src":"4461:3:4"}],"functionName":{"name":"abi_encodeUpdatedPos_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4402:43:4"},"nodeType":"YulFunctionCall","src":"4402:63:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"4395:3:4"}]},{"nodeType":"YulAssignment","src":"4478:70:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4541:6:4"}],"functionName":{"name":"array_nextElement_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"4488:52:4"},"nodeType":"YulFunctionCall","src":"4488:60:4"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"4478:6:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4296:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"4299:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"4293:2:4"},"nodeType":"YulFunctionCall","src":"4293:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"4307:18:4","statements":[{"nodeType":"YulAssignment","src":"4309:14:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"4318:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"4321:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4314:3:4"},"nodeType":"YulFunctionCall","src":"4314:9:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"4309:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"4278:14:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4280:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"4289:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"4284:1:4","type":""}]}]},"src":"4274:284:4"},{"nodeType":"YulAssignment","src":"4567:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"4574:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"4567:3:4"}]}]},"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"3964:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"3971:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"3980:3:4","type":""}],"src":"3871:712:4"},{"body":{"nodeType":"YulBlock","src":"4793:1503:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4803:26:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4819:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4824:4:4","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4815:3:4"},"nodeType":"YulFunctionCall","src":"4815:14:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"4807:4:4","type":""}]},{"nodeType":"YulBlock","src":"4839:171:4","statements":[{"nodeType":"YulVariableDeclaration","src":"4881:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"4911:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"4918:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4907:3:4"},"nodeType":"YulFunctionCall","src":"4907:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"4901:5:4"},"nodeType":"YulFunctionCall","src":"4901:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"4885:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"4971:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"4989:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"4994:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"4985:3:4"},"nodeType":"YulFunctionCall","src":"4985:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"4937:33:4"},"nodeType":"YulFunctionCall","src":"4937:63:4"},"nodeType":"YulExpressionStatement","src":"4937:63:4"}]},{"nodeType":"YulBlock","src":"5020:173:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5064:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5094:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"5101:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5090:3:4"},"nodeType":"YulFunctionCall","src":"5090:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5084:5:4"},"nodeType":"YulFunctionCall","src":"5084:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5068:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5154:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5172:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5177:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5168:3:4"},"nodeType":"YulFunctionCall","src":"5168:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5120:33:4"},"nodeType":"YulFunctionCall","src":"5120:63:4"},"nodeType":"YulExpressionStatement","src":"5120:63:4"}]},{"nodeType":"YulBlock","src":"5203:173:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5247:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5277:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"5284:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5273:3:4"},"nodeType":"YulFunctionCall","src":"5273:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5267:5:4"},"nodeType":"YulFunctionCall","src":"5267:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5251:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5337:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5355:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5360:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5351:3:4"},"nodeType":"YulFunctionCall","src":"5351:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"5303:33:4"},"nodeType":"YulFunctionCall","src":"5303:63:4"},"nodeType":"YulExpressionStatement","src":"5303:63:4"}]},{"nodeType":"YulBlock","src":"5386:243:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5429:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5459:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"5466:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5455:3:4"},"nodeType":"YulFunctionCall","src":"5455:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5449:5:4"},"nodeType":"YulFunctionCall","src":"5449:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5433:12:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5497:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5502:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5493:3:4"},"nodeType":"YulFunctionCall","src":"5493:14:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"5513:4:4"},{"name":"pos","nodeType":"YulIdentifier","src":"5519:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"5509:3:4"},"nodeType":"YulFunctionCall","src":"5509:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"5486:6:4"},"nodeType":"YulFunctionCall","src":"5486:38:4"},"nodeType":"YulExpressionStatement","src":"5486:38:4"},{"nodeType":"YulAssignment","src":"5537:81:4","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5599:12:4"},{"name":"tail","nodeType":"YulIdentifier","src":"5613:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"5545:53:4"},"nodeType":"YulFunctionCall","src":"5545:73:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"5537:4:4"}]}]},{"nodeType":"YulBlock","src":"5639:169:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5679:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5709:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"5716:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5705:3:4"},"nodeType":"YulFunctionCall","src":"5705:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5699:5:4"},"nodeType":"YulFunctionCall","src":"5699:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5683:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5769:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5787:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5792:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5783:3:4"},"nodeType":"YulFunctionCall","src":"5783:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"5735:33:4"},"nodeType":"YulFunctionCall","src":"5735:63:4"},"nodeType":"YulExpressionStatement","src":"5735:63:4"}]},{"nodeType":"YulBlock","src":"5818:161:4","statements":[{"nodeType":"YulVariableDeclaration","src":"5856:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"5886:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"5893:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5882:3:4"},"nodeType":"YulFunctionCall","src":"5882:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"5876:5:4"},"nodeType":"YulFunctionCall","src":"5876:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"5860:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"5940:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"5958:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"5963:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"5954:3:4"},"nodeType":"YulFunctionCall","src":"5954:14:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"5912:27:4"},"nodeType":"YulFunctionCall","src":"5912:57:4"},"nodeType":"YulExpressionStatement","src":"5912:57:4"}]},{"nodeType":"YulBlock","src":"5989:280:4","statements":[{"nodeType":"YulVariableDeclaration","src":"6039:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"6069:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"6076:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6065:3:4"},"nodeType":"YulFunctionCall","src":"6065:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"6059:5:4"},"nodeType":"YulFunctionCall","src":"6059:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"6043:12:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"6107:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"6112:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6103:3:4"},"nodeType":"YulFunctionCall","src":"6103:14:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6123:4:4"},{"name":"pos","nodeType":"YulIdentifier","src":"6129:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6119:3:4"},"nodeType":"YulFunctionCall","src":"6119:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6096:6:4"},"nodeType":"YulFunctionCall","src":"6096:38:4"},"nodeType":"YulExpressionStatement","src":"6096:38:4"},{"nodeType":"YulAssignment","src":"6147:111:4","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"6239:12:4"},{"name":"tail","nodeType":"YulIdentifier","src":"6253:4:4"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"6155:83:4"},"nodeType":"YulFunctionCall","src":"6155:103:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6147:4:4"}]}]},{"nodeType":"YulAssignment","src":"6279:11:4","value":{"name":"tail","nodeType":"YulIdentifier","src":"6286:4:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"6279:3:4"}]}]},"name":"abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"4772:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"4779:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"4788:3:4","type":""}],"src":"4667:1629:4"},{"body":{"nodeType":"YulBlock","src":"6452:227:4","statements":[{"nodeType":"YulAssignment","src":"6462:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6474:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6485:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6470:3:4"},"nodeType":"YulFunctionCall","src":"6470:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6462:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"6509:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"6520:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6505:3:4"},"nodeType":"YulFunctionCall","src":"6505:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"6528:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"6534:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6524:3:4"},"nodeType":"YulFunctionCall","src":"6524:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"6498:6:4"},"nodeType":"YulFunctionCall","src":"6498:47:4"},"nodeType":"YulExpressionStatement","src":"6498:47:4"},{"nodeType":"YulAssignment","src":"6554:118:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"6658:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"6667:4:4"}],"functionName":{"name":"abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"6562:95:4"},"nodeType":"YulFunctionCall","src":"6562:110:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"6554:4:4"}]}]},"name":"abi_encode_tuple_t_struct$_Document_$1708_memory_ptr__to_t_struct$_Document_$1708_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6424:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"6436:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"6447:4:4","type":""}],"src":"6302:377:4"},{"body":{"nodeType":"YulBlock","src":"6785:519:4","statements":[{"body":{"nodeType":"YulBlock","src":"6831:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"6833:77:4"},"nodeType":"YulFunctionCall","src":"6833:79:4"},"nodeType":"YulExpressionStatement","src":"6833:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"6806:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"6815:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"6802:3:4"},"nodeType":"YulFunctionCall","src":"6802:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"6827:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"6798:3:4"},"nodeType":"YulFunctionCall","src":"6798:32:4"},"nodeType":"YulIf","src":"6795:119:4"},{"nodeType":"YulBlock","src":"6924:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"6939:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"6953:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"6943:6:4","type":""}]},{"nodeType":"YulAssignment","src":"6968:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7003:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7014:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"6999:3:4"},"nodeType":"YulFunctionCall","src":"6999:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7023:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"6978:20:4"},"nodeType":"YulFunctionCall","src":"6978:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"6968:6:4"}]}]},{"nodeType":"YulBlock","src":"7051:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7066:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"7080:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7070:6:4","type":""}]},{"nodeType":"YulAssignment","src":"7096:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7131:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7142:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7127:3:4"},"nodeType":"YulFunctionCall","src":"7127:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7151:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"7106:20:4"},"nodeType":"YulFunctionCall","src":"7106:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"7096:6:4"}]}]},{"nodeType":"YulBlock","src":"7179:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7194:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"7208:2:4","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7198:6:4","type":""}]},{"nodeType":"YulAssignment","src":"7224:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7259:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7270:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7255:3:4"},"nodeType":"YulFunctionCall","src":"7255:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7279:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7234:20:4"},"nodeType":"YulFunctionCall","src":"7234:53:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"7224:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"6739:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"6750:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"6762:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"6770:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"6778:6:4","type":""}],"src":"6685:619:4"},{"body":{"nodeType":"YulBlock","src":"7369:50:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"7386:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"7406:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"7391:14:4"},"nodeType":"YulFunctionCall","src":"7391:21:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"7379:6:4"},"nodeType":"YulFunctionCall","src":"7379:34:4"},"nodeType":"YulExpressionStatement","src":"7379:34:4"}]},"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"7357:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"7364:3:4","type":""}],"src":"7310:109:4"},{"body":{"nodeType":"YulBlock","src":"7517:118:4","statements":[{"nodeType":"YulAssignment","src":"7527:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7539:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7550:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7535:3:4"},"nodeType":"YulFunctionCall","src":"7535:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"7527:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"7601:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7614:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"7625:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7610:3:4"},"nodeType":"YulFunctionCall","src":"7610:17:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"7563:37:4"},"nodeType":"YulFunctionCall","src":"7563:65:4"},"nodeType":"YulExpressionStatement","src":"7563:65:4"}]},"name":"abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7489:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"7501:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"7512:4:4","type":""}],"src":"7425:210:4"},{"body":{"nodeType":"YulBlock","src":"7707:263:4","statements":[{"body":{"nodeType":"YulBlock","src":"7753:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"7755:77:4"},"nodeType":"YulFunctionCall","src":"7755:79:4"},"nodeType":"YulExpressionStatement","src":"7755:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"7728:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"7737:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"7724:3:4"},"nodeType":"YulFunctionCall","src":"7724:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"7749:2:4","type":"","value":"32"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"7720:3:4"},"nodeType":"YulFunctionCall","src":"7720:32:4"},"nodeType":"YulIf","src":"7717:119:4"},{"nodeType":"YulBlock","src":"7846:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"7861:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"7875:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"7865:6:4","type":""}]},{"nodeType":"YulAssignment","src":"7890:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"7925:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"7936:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"7921:3:4"},"nodeType":"YulFunctionCall","src":"7921:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"7945:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"7900:20:4"},"nodeType":"YulFunctionCall","src":"7900:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"7890:6:4"}]}]}]},"name":"abi_decode_tuple_t_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"7677:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"7688:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"7700:6:4","type":""}],"src":"7641:329:4"},{"body":{"nodeType":"YulBlock","src":"8076:40:4","statements":[{"nodeType":"YulAssignment","src":"8087:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8103:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8097:5:4"},"nodeType":"YulFunctionCall","src":"8097:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"8087:6:4"}]}]},"name":"array_length_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8059:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"8069:6:4","type":""}],"src":"7976:140:4"},{"body":{"nodeType":"YulBlock","src":"8259:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8276:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"8281:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"8269:6:4"},"nodeType":"YulFunctionCall","src":"8269:19:4"},"nodeType":"YulExpressionStatement","src":"8269:19:4"},{"nodeType":"YulAssignment","src":"8297:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8316:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"8321:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8312:3:4"},"nodeType":"YulFunctionCall","src":"8312:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"8297:11:4"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"8231:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"8236:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"8247:11:4","type":""}],"src":"8122:210:4"},{"body":{"nodeType":"YulBlock","src":"8436:60:4","statements":[{"nodeType":"YulAssignment","src":"8446:11:4","value":{"name":"ptr","nodeType":"YulIdentifier","src":"8454:3:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8446:4:4"}]},{"nodeType":"YulAssignment","src":"8467:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"8479:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"8484:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8475:3:4"},"nodeType":"YulFunctionCall","src":"8475:14:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"8467:4:4"}]}]},"name":"array_dataslot_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"8423:3:4","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"8431:4:4","type":""}],"src":"8338:158:4"},{"body":{"nodeType":"YulBlock","src":"8696:1503:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8706:26:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8722:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"8727:4:4","type":"","value":"0xe0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8718:3:4"},"nodeType":"YulFunctionCall","src":"8718:14:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"8710:4:4","type":""}]},{"nodeType":"YulBlock","src":"8742:171:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8784:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8814:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"8821:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8810:3:4"},"nodeType":"YulFunctionCall","src":"8810:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8804:5:4"},"nodeType":"YulFunctionCall","src":"8804:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8788:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"8874:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"8892:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"8897:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8888:3:4"},"nodeType":"YulFunctionCall","src":"8888:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"8840:33:4"},"nodeType":"YulFunctionCall","src":"8840:63:4"},"nodeType":"YulExpressionStatement","src":"8840:63:4"}]},{"nodeType":"YulBlock","src":"8923:173:4","statements":[{"nodeType":"YulVariableDeclaration","src":"8967:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"8997:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9004:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"8993:3:4"},"nodeType":"YulFunctionCall","src":"8993:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"8987:5:4"},"nodeType":"YulFunctionCall","src":"8987:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"8971:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9057:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9075:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"9080:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9071:3:4"},"nodeType":"YulFunctionCall","src":"9071:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9023:33:4"},"nodeType":"YulFunctionCall","src":"9023:63:4"},"nodeType":"YulExpressionStatement","src":"9023:63:4"}]},{"nodeType":"YulBlock","src":"9106:173:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9150:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9180:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9187:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9176:3:4"},"nodeType":"YulFunctionCall","src":"9176:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9170:5:4"},"nodeType":"YulFunctionCall","src":"9170:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9154:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9240:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9258:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"9263:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9254:3:4"},"nodeType":"YulFunctionCall","src":"9254:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"9206:33:4"},"nodeType":"YulFunctionCall","src":"9206:63:4"},"nodeType":"YulExpressionStatement","src":"9206:63:4"}]},{"nodeType":"YulBlock","src":"9289:243:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9332:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9362:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9369:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9358:3:4"},"nodeType":"YulFunctionCall","src":"9358:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9352:5:4"},"nodeType":"YulFunctionCall","src":"9352:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9336:12:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9400:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"9405:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9396:3:4"},"nodeType":"YulFunctionCall","src":"9396:14:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"9416:4:4"},{"name":"pos","nodeType":"YulIdentifier","src":"9422:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"9412:3:4"},"nodeType":"YulFunctionCall","src":"9412:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9389:6:4"},"nodeType":"YulFunctionCall","src":"9389:38:4"},"nodeType":"YulExpressionStatement","src":"9389:38:4"},{"nodeType":"YulAssignment","src":"9440:81:4","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9502:12:4"},{"name":"tail","nodeType":"YulIdentifier","src":"9516:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"9448:53:4"},"nodeType":"YulFunctionCall","src":"9448:73:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"9440:4:4"}]}]},{"nodeType":"YulBlock","src":"9542:169:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9582:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9612:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9619:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9608:3:4"},"nodeType":"YulFunctionCall","src":"9608:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9602:5:4"},"nodeType":"YulFunctionCall","src":"9602:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9586:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9672:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9690:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"9695:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9686:3:4"},"nodeType":"YulFunctionCall","src":"9686:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"9638:33:4"},"nodeType":"YulFunctionCall","src":"9638:63:4"},"nodeType":"YulExpressionStatement","src":"9638:63:4"}]},{"nodeType":"YulBlock","src":"9721:161:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9759:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9789:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9796:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9785:3:4"},"nodeType":"YulFunctionCall","src":"9785:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9779:5:4"},"nodeType":"YulFunctionCall","src":"9779:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9763:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"9843:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"9861:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"9866:4:4","type":"","value":"0xa0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9857:3:4"},"nodeType":"YulFunctionCall","src":"9857:14:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"9815:27:4"},"nodeType":"YulFunctionCall","src":"9815:57:4"},"nodeType":"YulExpressionStatement","src":"9815:57:4"}]},{"nodeType":"YulBlock","src":"9892:280:4","statements":[{"nodeType":"YulVariableDeclaration","src":"9942:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"9972:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"9979:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"9968:3:4"},"nodeType":"YulFunctionCall","src":"9968:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"9962:5:4"},"nodeType":"YulFunctionCall","src":"9962:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"9946:12:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"10010:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"10015:4:4","type":"","value":"0xc0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10006:3:4"},"nodeType":"YulFunctionCall","src":"10006:14:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"10026:4:4"},{"name":"pos","nodeType":"YulIdentifier","src":"10032:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"10022:3:4"},"nodeType":"YulFunctionCall","src":"10022:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"9999:6:4"},"nodeType":"YulFunctionCall","src":"9999:38:4"},"nodeType":"YulExpressionStatement","src":"9999:38:4"},{"nodeType":"YulAssignment","src":"10050:111:4","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"10142:12:4"},{"name":"tail","nodeType":"YulIdentifier","src":"10156:4:4"}],"functionName":{"name":"abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10058:83:4"},"nodeType":"YulFunctionCall","src":"10058:103:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"10050:4:4"}]}]},{"nodeType":"YulAssignment","src":"10182:11:4","value":{"name":"tail","nodeType":"YulIdentifier","src":"10189:4:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"10182:3:4"}]}]},"name":"abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"8675:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"8682:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"8691:3:4","type":""}],"src":"8580:1619:4"},{"body":{"nodeType":"YulBlock","src":"10337:128:4","statements":[{"nodeType":"YulAssignment","src":"10347:112:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"10447:6:4"},{"name":"pos","nodeType":"YulIdentifier","src":"10455:3:4"}],"functionName":{"name":"abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr","nodeType":"YulIdentifier","src":"10361:85:4"},"nodeType":"YulFunctionCall","src":"10361:98:4"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"10347:10:4"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"10310:6:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10318:3:4","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"10326:10:4","type":""}],"src":"10205:260:4"},{"body":{"nodeType":"YulBlock","src":"10572:38:4","statements":[{"nodeType":"YulAssignment","src":"10582:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"10594:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"10599:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"10590:3:4"},"nodeType":"YulFunctionCall","src":"10590:14:4"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"10582:4:4"}]}]},"name":"array_nextElement_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"10559:3:4","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"10567:4:4","type":""}],"src":"10471:139:4"},{"body":{"nodeType":"YulBlock","src":"10874:943:4","statements":[{"nodeType":"YulVariableDeclaration","src":"10884:94:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"10972:5:4"}],"functionName":{"name":"array_length_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"10898:73:4"},"nodeType":"YulFunctionCall","src":"10898:80:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"10888:6:4","type":""}]},{"nodeType":"YulAssignment","src":"10987:119:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11094:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"11099:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"10994:99:4"},"nodeType":"YulFunctionCall","src":"10994:112:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"10987:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"11115:20:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"11132:3:4"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"11119:9:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11144:39:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11160:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"11169:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"11177:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"11165:3:4"},"nodeType":"YulFunctionCall","src":"11165:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11156:3:4"},"nodeType":"YulFunctionCall","src":"11156:27:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"11148:4:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11192:97:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"11283:5:4"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11207:75:4"},"nodeType":"YulFunctionCall","src":"11207:82:4"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"11196:7:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"11298:21:4","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"11312:7:4"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"11302:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"11388:384:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11409:3:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"11418:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"11424:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"11414:3:4"},"nodeType":"YulFunctionCall","src":"11414:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"11402:6:4"},"nodeType":"YulFunctionCall","src":"11402:33:4"},"nodeType":"YulExpressionStatement","src":"11402:33:4"},{"nodeType":"YulVariableDeclaration","src":"11448:34:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11475:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"11469:5:4"},"nodeType":"YulFunctionCall","src":"11469:13:4"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"11452:13:4","type":""}]},{"nodeType":"YulAssignment","src":"11495:124:4","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"11599:13:4"},{"name":"tail","nodeType":"YulIdentifier","src":"11614:4:4"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr","nodeType":"YulIdentifier","src":"11503:95:4"},"nodeType":"YulFunctionCall","src":"11503:116:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"11495:4:4"}]},{"nodeType":"YulAssignment","src":"11632:96:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11721:6:4"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"11642:78:4"},"nodeType":"YulFunctionCall","src":"11642:86:4"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"11632:6:4"}]},{"nodeType":"YulAssignment","src":"11741:21:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"11752:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"11757:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11748:3:4"},"nodeType":"YulFunctionCall","src":"11748:14:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11741:3:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11350:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"11353:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"11347:2:4"},"nodeType":"YulFunctionCall","src":"11347:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"11361:18:4","statements":[{"nodeType":"YulAssignment","src":"11363:14:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"11372:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"11375:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"11368:3:4"},"nodeType":"YulFunctionCall","src":"11368:9:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"11363:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"11332:14:4","statements":[{"nodeType":"YulVariableDeclaration","src":"11334:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"11343:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"11338:1:4","type":""}]}]},"src":"11328:444:4"},{"nodeType":"YulAssignment","src":"11781:11:4","value":{"name":"tail","nodeType":"YulIdentifier","src":"11788:4:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"11781:3:4"}]},{"nodeType":"YulAssignment","src":"11801:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"11808:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"11801:3:4"}]}]},"name":"abi_encode_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"10853:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"10860:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"10869:3:4","type":""}],"src":"10698:1119:4"},{"body":{"nodeType":"YulBlock","src":"12023:277:4","statements":[{"nodeType":"YulAssignment","src":"12033:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12045:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12056:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12041:3:4"},"nodeType":"YulFunctionCall","src":"12041:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12033:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12080:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"12091:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12076:3:4"},"nodeType":"YulFunctionCall","src":"12076:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"12099:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"12105:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12095:3:4"},"nodeType":"YulFunctionCall","src":"12095:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"12069:6:4"},"nodeType":"YulFunctionCall","src":"12069:47:4"},"nodeType":"YulExpressionStatement","src":"12069:47:4"},{"nodeType":"YulAssignment","src":"12125:168:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"12279:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"12288:4:4"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"12133:145:4"},"nodeType":"YulFunctionCall","src":"12133:160:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"12125:4:4"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"11995:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"12007:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"12018:4:4","type":""}],"src":"11823:477:4"},{"body":{"nodeType":"YulBlock","src":"12389:391:4","statements":[{"body":{"nodeType":"YulBlock","src":"12435:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"12437:77:4"},"nodeType":"YulFunctionCall","src":"12437:79:4"},"nodeType":"YulExpressionStatement","src":"12437:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"12410:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"12419:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"12406:3:4"},"nodeType":"YulFunctionCall","src":"12406:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"12431:2:4","type":"","value":"64"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"12402:3:4"},"nodeType":"YulFunctionCall","src":"12402:32:4"},"nodeType":"YulIf","src":"12399:119:4"},{"nodeType":"YulBlock","src":"12528:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"12543:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"12557:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12547:6:4","type":""}]},{"nodeType":"YulAssignment","src":"12572:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12607:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"12618:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12603:3:4"},"nodeType":"YulFunctionCall","src":"12603:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12627:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12582:20:4"},"nodeType":"YulFunctionCall","src":"12582:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"12572:6:4"}]}]},{"nodeType":"YulBlock","src":"12655:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"12670:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"12684:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"12674:6:4","type":""}]},{"nodeType":"YulAssignment","src":"12700:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"12735:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"12746:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"12731:3:4"},"nodeType":"YulFunctionCall","src":"12731:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"12755:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"12710:20:4"},"nodeType":"YulFunctionCall","src":"12710:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"12700:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_address","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"12351:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"12362:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"12374:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"12382:6:4","type":""}],"src":"12306:474:4"},{"body":{"nodeType":"YulBlock","src":"12890:40:4","statements":[{"nodeType":"YulAssignment","src":"12901:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"12917:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"12911:5:4"},"nodeType":"YulFunctionCall","src":"12911:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"12901:6:4"}]}]},"name":"array_length_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"12873:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"12883:6:4","type":""}],"src":"12786:144:4"},{"body":{"nodeType":"YulBlock","src":"13077:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13094:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"13099:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"13087:6:4"},"nodeType":"YulFunctionCall","src":"13087:19:4"},"nodeType":"YulExpressionStatement","src":"13087:19:4"},{"nodeType":"YulAssignment","src":"13115:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13134:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"13139:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13130:3:4"},"nodeType":"YulFunctionCall","src":"13130:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"13115:11:4"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"13049:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"13054:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"13065:11:4","type":""}],"src":"12936:214:4"},{"body":{"nodeType":"YulBlock","src":"13258:60:4","statements":[{"nodeType":"YulAssignment","src":"13268:11:4","value":{"name":"ptr","nodeType":"YulIdentifier","src":"13276:3:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13268:4:4"}]},{"nodeType":"YulAssignment","src":"13289:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"13301:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"13306:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13297:3:4"},"nodeType":"YulFunctionCall","src":"13297:14:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"13289:4:4"}]}]},"name":"array_dataslot_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"13245:3:4","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"13253:4:4","type":""}],"src":"13156:162:4"},{"body":{"nodeType":"YulBlock","src":"13534:834:4","statements":[{"nodeType":"YulVariableDeclaration","src":"13544:26:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13560:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"13565:4:4","type":"","value":"0x80"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13556:3:4"},"nodeType":"YulFunctionCall","src":"13556:14:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"13548:4:4","type":""}]},{"nodeType":"YulBlock","src":"13580:164:4","statements":[{"nodeType":"YulVariableDeclaration","src":"13615:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13645:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"13652:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13641:3:4"},"nodeType":"YulFunctionCall","src":"13641:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13635:5:4"},"nodeType":"YulFunctionCall","src":"13635:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13619:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13705:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13723:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"13728:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13719:3:4"},"nodeType":"YulFunctionCall","src":"13719:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"13671:33:4"},"nodeType":"YulFunctionCall","src":"13671:63:4"},"nodeType":"YulExpressionStatement","src":"13671:63:4"}]},{"nodeType":"YulBlock","src":"13754:169:4","statements":[{"nodeType":"YulVariableDeclaration","src":"13794:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"13824:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"13831:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13820:3:4"},"nodeType":"YulFunctionCall","src":"13820:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13814:5:4"},"nodeType":"YulFunctionCall","src":"13814:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13798:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"13884:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"13902:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"13907:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13898:3:4"},"nodeType":"YulFunctionCall","src":"13898:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"13850:33:4"},"nodeType":"YulFunctionCall","src":"13850:63:4"},"nodeType":"YulExpressionStatement","src":"13850:63:4"}]},{"nodeType":"YulBlock","src":"13933:237:4","statements":[{"nodeType":"YulVariableDeclaration","src":"13970:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14000:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"14007:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"13996:3:4"},"nodeType":"YulFunctionCall","src":"13996:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"13990:5:4"},"nodeType":"YulFunctionCall","src":"13990:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"13974:12:4","type":""}]},{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14038:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"14043:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14034:3:4"},"nodeType":"YulFunctionCall","src":"14034:14:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"14054:4:4"},{"name":"pos","nodeType":"YulIdentifier","src":"14060:3:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"14050:3:4"},"nodeType":"YulFunctionCall","src":"14050:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"14027:6:4"},"nodeType":"YulFunctionCall","src":"14027:38:4"},"nodeType":"YulExpressionStatement","src":"14027:38:4"},{"nodeType":"YulAssignment","src":"14078:81:4","value":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14140:12:4"},{"name":"tail","nodeType":"YulIdentifier","src":"14154:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr","nodeType":"YulIdentifier","src":"14086:53:4"},"nodeType":"YulFunctionCall","src":"14086:73:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"14078:4:4"}]}]},{"nodeType":"YulBlock","src":"14180:161:4","statements":[{"nodeType":"YulVariableDeclaration","src":"14218:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"14248:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"14255:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14244:3:4"},"nodeType":"YulFunctionCall","src":"14244:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"14238:5:4"},"nodeType":"YulFunctionCall","src":"14238:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"14222:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"14302:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"14320:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"14325:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14316:3:4"},"nodeType":"YulFunctionCall","src":"14316:14:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool","nodeType":"YulIdentifier","src":"14274:27:4"},"nodeType":"YulFunctionCall","src":"14274:57:4"},"nodeType":"YulExpressionStatement","src":"14274:57:4"}]},{"nodeType":"YulAssignment","src":"14351:11:4","value":{"name":"tail","nodeType":"YulIdentifier","src":"14358:4:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"14351:3:4"}]}]},"name":"abi_encode_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"13513:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"13520:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"13529:3:4","type":""}],"src":"13410:958:4"},{"body":{"nodeType":"YulBlock","src":"14514:136:4","statements":[{"nodeType":"YulAssignment","src":"14524:120:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"14632:6:4"},{"name":"pos","nodeType":"YulIdentifier","src":"14640:3:4"}],"functionName":{"name":"abi_encode_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr","nodeType":"YulIdentifier","src":"14538:93:4"},"nodeType":"YulFunctionCall","src":"14538:106:4"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"14524:10:4"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"14487:6:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"14495:3:4","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"14503:10:4","type":""}],"src":"14374:276:4"},{"body":{"nodeType":"YulBlock","src":"14761:38:4","statements":[{"nodeType":"YulAssignment","src":"14771:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"14783:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"14788:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"14779:3:4"},"nodeType":"YulFunctionCall","src":"14779:14:4"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"14771:4:4"}]}]},"name":"array_nextElement_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"14748:3:4","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"14756:4:4","type":""}],"src":"14656:143:4"},{"body":{"nodeType":"YulBlock","src":"15079:967:4","statements":[{"nodeType":"YulVariableDeclaration","src":"15089:98:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15181:5:4"}],"functionName":{"name":"array_length_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15103:77:4"},"nodeType":"YulFunctionCall","src":"15103:84:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"15093:6:4","type":""}]},{"nodeType":"YulAssignment","src":"15196:123:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15307:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"15312:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"15203:103:4"},"nodeType":"YulFunctionCall","src":"15203:116:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15196:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"15328:20:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"15345:3:4"},"variables":[{"name":"headStart","nodeType":"YulTypedName","src":"15332:9:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15357:39:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15373:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"15382:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"15390:4:4","type":"","value":"0x20"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"15378:3:4"},"nodeType":"YulFunctionCall","src":"15378:17:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15369:3:4"},"nodeType":"YulFunctionCall","src":"15369:27:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"15361:4:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15405:101:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"15500:5:4"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15420:79:4"},"nodeType":"YulFunctionCall","src":"15420:86:4"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"15409:7:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"15515:21:4","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"15529:7:4"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"15519:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"15605:396:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15626:3:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"15635:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"15641:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"15631:3:4"},"nodeType":"YulFunctionCall","src":"15631:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"15619:6:4"},"nodeType":"YulFunctionCall","src":"15619:33:4"},"nodeType":"YulExpressionStatement","src":"15619:33:4"},{"nodeType":"YulVariableDeclaration","src":"15665:34:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15692:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"15686:5:4"},"nodeType":"YulFunctionCall","src":"15686:13:4"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"15669:13:4","type":""}]},{"nodeType":"YulAssignment","src":"15712:132:4","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"15824:13:4"},{"name":"tail","nodeType":"YulIdentifier","src":"15839:4:4"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr","nodeType":"YulIdentifier","src":"15720:103:4"},"nodeType":"YulFunctionCall","src":"15720:124:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"15712:4:4"}]},{"nodeType":"YulAssignment","src":"15857:100:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15950:6:4"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"15867:82:4"},"nodeType":"YulFunctionCall","src":"15867:90:4"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"15857:6:4"}]},{"nodeType":"YulAssignment","src":"15970:21:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"15981:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"15986:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15977:3:4"},"nodeType":"YulFunctionCall","src":"15977:14:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"15970:3:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15567:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"15570:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"15564:2:4"},"nodeType":"YulFunctionCall","src":"15564:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"15578:18:4","statements":[{"nodeType":"YulAssignment","src":"15580:14:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"15589:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"15592:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"15585:3:4"},"nodeType":"YulFunctionCall","src":"15585:9:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"15580:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"15549:14:4","statements":[{"nodeType":"YulVariableDeclaration","src":"15551:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"15560:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"15555:1:4","type":""}]}]},"src":"15545:456:4"},{"nodeType":"YulAssignment","src":"16010:11:4","value":{"name":"tail","nodeType":"YulIdentifier","src":"16017:4:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"16010:3:4"}]},{"nodeType":"YulAssignment","src":"16030:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"16037:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"16030:3:4"}]}]},"name":"abi_encode_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"15058:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"15065:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"15074:3:4","type":""}],"src":"14895:1151:4"},{"body":{"nodeType":"YulBlock","src":"16260:285:4","statements":[{"nodeType":"YulAssignment","src":"16270:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16282:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"16293:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16278:3:4"},"nodeType":"YulFunctionCall","src":"16278:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16270:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"16317:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"16328:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"16313:3:4"},"nodeType":"YulFunctionCall","src":"16313:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"16336:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"16342:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"16332:3:4"},"nodeType":"YulFunctionCall","src":"16332:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16306:6:4"},"nodeType":"YulFunctionCall","src":"16306:47:4"},"nodeType":"YulExpressionStatement","src":"16306:47:4"},{"nodeType":"YulAssignment","src":"16362:176:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"16524:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"16533:4:4"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"16370:153:4"},"nodeType":"YulFunctionCall","src":"16370:168:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"16362:4:4"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"16232:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"16244:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"16255:4:4","type":""}],"src":"16052:493:4"},{"body":{"nodeType":"YulBlock","src":"16640:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16657:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16660:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16650:6:4"},"nodeType":"YulFunctionCall","src":"16650:12:4"},"nodeType":"YulExpressionStatement","src":"16650:12:4"}]},"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulFunctionDefinition","src":"16551:117:4"},{"body":{"nodeType":"YulBlock","src":"16763:28:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16780:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16783:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16773:6:4"},"nodeType":"YulFunctionCall","src":"16773:12:4"},"nodeType":"YulExpressionStatement","src":"16773:12:4"}]},"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulFunctionDefinition","src":"16674:117:4"},{"body":{"nodeType":"YulBlock","src":"16825:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16842:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16845:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16835:6:4"},"nodeType":"YulFunctionCall","src":"16835:88:4"},"nodeType":"YulExpressionStatement","src":"16835:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16939:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"16942:4:4","type":"","value":"0x41"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"16932:6:4"},"nodeType":"YulFunctionCall","src":"16932:15:4"},"nodeType":"YulExpressionStatement","src":"16932:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"16963:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"16966:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"16956:6:4"},"nodeType":"YulFunctionCall","src":"16956:15:4"},"nodeType":"YulExpressionStatement","src":"16956:15:4"}]},"name":"panic_error_0x41","nodeType":"YulFunctionDefinition","src":"16797:180:4"},{"body":{"nodeType":"YulBlock","src":"17026:238:4","statements":[{"nodeType":"YulVariableDeclaration","src":"17036:58:4","value":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17058:6:4"},{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17088:4:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17066:21:4"},"nodeType":"YulFunctionCall","src":"17066:27:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17054:3:4"},"nodeType":"YulFunctionCall","src":"17054:40:4"},"variables":[{"name":"newFreePtr","nodeType":"YulTypedName","src":"17040:10:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"17205:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17207:16:4"},"nodeType":"YulFunctionCall","src":"17207:18:4"},"nodeType":"YulExpressionStatement","src":"17207:18:4"}]},"condition":{"arguments":[{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"17148:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"17160:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17145:2:4"},"nodeType":"YulFunctionCall","src":"17145:34:4"},{"arguments":[{"name":"newFreePtr","nodeType":"YulIdentifier","src":"17184:10:4"},{"name":"memPtr","nodeType":"YulIdentifier","src":"17196:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"17181:2:4"},"nodeType":"YulFunctionCall","src":"17181:22:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"17142:2:4"},"nodeType":"YulFunctionCall","src":"17142:62:4"},"nodeType":"YulIf","src":"17139:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"17243:2:4","type":"","value":"64"},{"name":"newFreePtr","nodeType":"YulIdentifier","src":"17247:10:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17236:6:4"},"nodeType":"YulFunctionCall","src":"17236:22:4"},"nodeType":"YulExpressionStatement","src":"17236:22:4"}]},"name":"finalize_allocation","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"17012:6:4","type":""},{"name":"size","nodeType":"YulTypedName","src":"17020:4:4","type":""}],"src":"16983:281:4"},{"body":{"nodeType":"YulBlock","src":"17311:88:4","statements":[{"nodeType":"YulAssignment","src":"17321:30:4","value":{"arguments":[],"functionName":{"name":"allocate_unbounded","nodeType":"YulIdentifier","src":"17331:18:4"},"nodeType":"YulFunctionCall","src":"17331:20:4"},"variableNames":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17321:6:4"}]},{"expression":{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"17380:6:4"},{"name":"size","nodeType":"YulIdentifier","src":"17388:4:4"}],"functionName":{"name":"finalize_allocation","nodeType":"YulIdentifier","src":"17360:19:4"},"nodeType":"YulFunctionCall","src":"17360:33:4"},"nodeType":"YulExpressionStatement","src":"17360:33:4"}]},"name":"allocate_memory","nodeType":"YulFunctionDefinition","parameters":[{"name":"size","nodeType":"YulTypedName","src":"17295:4:4","type":""}],"returnVariables":[{"name":"memPtr","nodeType":"YulTypedName","src":"17304:6:4","type":""}],"src":"17270:129:4"},{"body":{"nodeType":"YulBlock","src":"17472:241:4","statements":[{"body":{"nodeType":"YulBlock","src":"17577:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"17579:16:4"},"nodeType":"YulFunctionCall","src":"17579:18:4"},"nodeType":"YulExpressionStatement","src":"17579:18:4"}]},"condition":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17549:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"17557:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"17546:2:4"},"nodeType":"YulFunctionCall","src":"17546:30:4"},"nodeType":"YulIf","src":"17543:56:4"},{"nodeType":"YulAssignment","src":"17609:37:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"17639:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"17617:21:4"},"nodeType":"YulFunctionCall","src":"17617:29:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17609:4:4"}]},{"nodeType":"YulAssignment","src":"17683:23:4","value":{"arguments":[{"name":"size","nodeType":"YulIdentifier","src":"17695:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"17701:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17691:3:4"},"nodeType":"YulFunctionCall","src":"17691:15:4"},"variableNames":[{"name":"size","nodeType":"YulIdentifier","src":"17683:4:4"}]}]},"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"length","nodeType":"YulTypedName","src":"17456:6:4","type":""}],"returnVariables":[{"name":"size","nodeType":"YulTypedName","src":"17467:4:4","type":""}],"src":"17405:308:4"},{"body":{"nodeType":"YulBlock","src":"17783:82:4","statements":[{"expression":{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17806:3:4"},{"name":"src","nodeType":"YulIdentifier","src":"17811:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"17816:6:4"}],"functionName":{"name":"calldatacopy","nodeType":"YulIdentifier","src":"17793:12:4"},"nodeType":"YulFunctionCall","src":"17793:30:4"},"nodeType":"YulExpressionStatement","src":"17793:30:4"},{"expression":{"arguments":[{"arguments":[{"name":"dst","nodeType":"YulIdentifier","src":"17843:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"17848:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"17839:3:4"},"nodeType":"YulFunctionCall","src":"17839:16:4"},{"kind":"number","nodeType":"YulLiteral","src":"17857:1:4","type":"","value":"0"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"17832:6:4"},"nodeType":"YulFunctionCall","src":"17832:27:4"},"nodeType":"YulExpressionStatement","src":"17832:27:4"}]},"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17765:3:4","type":""},{"name":"dst","nodeType":"YulTypedName","src":"17770:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"17775:6:4","type":""}],"src":"17719:146:4"},{"body":{"nodeType":"YulBlock","src":"17955:341:4","statements":[{"nodeType":"YulAssignment","src":"17965:75:4","value":{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"18032:6:4"}],"functionName":{"name":"array_allocation_size_t_string_memory_ptr","nodeType":"YulIdentifier","src":"17990:41:4"},"nodeType":"YulFunctionCall","src":"17990:49:4"}],"functionName":{"name":"allocate_memory","nodeType":"YulIdentifier","src":"17974:15:4"},"nodeType":"YulFunctionCall","src":"17974:66:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"17965:5:4"}]},{"expression":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18056:5:4"},{"name":"length","nodeType":"YulIdentifier","src":"18063:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"18049:6:4"},"nodeType":"YulFunctionCall","src":"18049:21:4"},"nodeType":"YulExpressionStatement","src":"18049:21:4"},{"nodeType":"YulVariableDeclaration","src":"18079:27:4","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"18094:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"18101:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18090:3:4"},"nodeType":"YulFunctionCall","src":"18090:16:4"},"variables":[{"name":"dst","nodeType":"YulTypedName","src":"18083:3:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"18144:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae","nodeType":"YulIdentifier","src":"18146:77:4"},"nodeType":"YulFunctionCall","src":"18146:79:4"},"nodeType":"YulExpressionStatement","src":"18146:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18125:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"18130:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18121:3:4"},"nodeType":"YulFunctionCall","src":"18121:16:4"},{"name":"end","nodeType":"YulIdentifier","src":"18139:3:4"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"18118:2:4"},"nodeType":"YulFunctionCall","src":"18118:25:4"},"nodeType":"YulIf","src":"18115:112:4"},{"expression":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"18273:3:4"},{"name":"dst","nodeType":"YulIdentifier","src":"18278:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"18283:6:4"}],"functionName":{"name":"copy_calldata_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"18236:36:4"},"nodeType":"YulFunctionCall","src":"18236:54:4"},"nodeType":"YulExpressionStatement","src":"18236:54:4"}]},"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"src","nodeType":"YulTypedName","src":"17928:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"17933:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"17941:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"17949:5:4","type":""}],"src":"17871:425:4"},{"body":{"nodeType":"YulBlock","src":"18378:278:4","statements":[{"body":{"nodeType":"YulBlock","src":"18427:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d","nodeType":"YulIdentifier","src":"18429:77:4"},"nodeType":"YulFunctionCall","src":"18429:79:4"},"nodeType":"YulExpressionStatement","src":"18429:79:4"}]},"condition":{"arguments":[{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18406:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"18414:4:4","type":"","value":"0x1f"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18402:3:4"},"nodeType":"YulFunctionCall","src":"18402:17:4"},{"name":"end","nodeType":"YulIdentifier","src":"18421:3:4"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18398:3:4"},"nodeType":"YulFunctionCall","src":"18398:27:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"18391:6:4"},"nodeType":"YulFunctionCall","src":"18391:35:4"},"nodeType":"YulIf","src":"18388:122:4"},{"nodeType":"YulVariableDeclaration","src":"18519:34:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18546:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"18533:12:4"},"nodeType":"YulFunctionCall","src":"18533:20:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"18523:6:4","type":""}]},{"nodeType":"YulAssignment","src":"18562:88:4","value":{"arguments":[{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"18623:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"18631:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18619:3:4"},"nodeType":"YulFunctionCall","src":"18619:17:4"},{"name":"length","nodeType":"YulIdentifier","src":"18638:6:4"},{"name":"end","nodeType":"YulIdentifier","src":"18646:3:4"}],"functionName":{"name":"abi_decode_available_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"18571:47:4"},"nodeType":"YulFunctionCall","src":"18571:79:4"},"variableNames":[{"name":"array","nodeType":"YulIdentifier","src":"18562:5:4"}]}]},"name":"abi_decode_t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"18356:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"18364:3:4","type":""}],"returnVariables":[{"name":"array","nodeType":"YulTypedName","src":"18372:5:4","type":""}],"src":"18316:340:4"},{"body":{"nodeType":"YulBlock","src":"18772:689:4","statements":[{"body":{"nodeType":"YulBlock","src":"18818:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"18820:77:4"},"nodeType":"YulFunctionCall","src":"18820:79:4"},"nodeType":"YulExpressionStatement","src":"18820:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"18793:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"18802:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"18789:3:4"},"nodeType":"YulFunctionCall","src":"18789:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"18814:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"18785:3:4"},"nodeType":"YulFunctionCall","src":"18785:32:4"},"nodeType":"YulIf","src":"18782:119:4"},{"nodeType":"YulBlock","src":"18911:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"18926:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"18940:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"18930:6:4","type":""}]},{"nodeType":"YulAssignment","src":"18955:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"18990:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"19001:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"18986:3:4"},"nodeType":"YulFunctionCall","src":"18986:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19010:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"18965:20:4"},"nodeType":"YulFunctionCall","src":"18965:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"18955:6:4"}]}]},{"nodeType":"YulBlock","src":"19038:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"19053:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"19067:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19057:6:4","type":""}]},{"nodeType":"YulAssignment","src":"19083:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19118:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"19129:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19114:3:4"},"nodeType":"YulFunctionCall","src":"19114:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19138:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"19093:20:4"},"nodeType":"YulFunctionCall","src":"19093:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"19083:6:4"}]}]},{"nodeType":"YulBlock","src":"19166:288:4","statements":[{"nodeType":"YulVariableDeclaration","src":"19181:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19212:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"19223:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19208:3:4"},"nodeType":"YulFunctionCall","src":"19208:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"19195:12:4"},"nodeType":"YulFunctionCall","src":"19195:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"19185:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"19274:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"19276:77:4"},"nodeType":"YulFunctionCall","src":"19276:79:4"},"nodeType":"YulExpressionStatement","src":"19276:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"19246:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"19254:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"19243:2:4"},"nodeType":"YulFunctionCall","src":"19243:30:4"},"nodeType":"YulIf","src":"19240:117:4"},{"nodeType":"YulAssignment","src":"19371:73:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19416:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"19427:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19412:3:4"},"nodeType":"YulFunctionCall","src":"19412:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"19436:7:4"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"19381:30:4"},"nodeType":"YulFunctionCall","src":"19381:63:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"19371:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"18726:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"18737:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"18749:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"18757:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"18765:6:4","type":""}],"src":"18662:799:4"},{"body":{"nodeType":"YulBlock","src":"19532:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"19549:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19572:5:4"}],"functionName":{"name":"cleanup_t_address","nodeType":"YulIdentifier","src":"19554:17:4"},"nodeType":"YulFunctionCall","src":"19554:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"19542:6:4"},"nodeType":"YulFunctionCall","src":"19542:37:4"},"nodeType":"YulExpressionStatement","src":"19542:37:4"}]},"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19520:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"19527:3:4","type":""}],"src":"19467:118:4"},{"body":{"nodeType":"YulBlock","src":"19689:124:4","statements":[{"nodeType":"YulAssignment","src":"19699:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19711:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"19722:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19707:3:4"},"nodeType":"YulFunctionCall","src":"19707:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"19699:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"19779:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"19792:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"19803:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"19788:3:4"},"nodeType":"YulFunctionCall","src":"19788:17:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address_fromStack","nodeType":"YulIdentifier","src":"19735:43:4"},"nodeType":"YulFunctionCall","src":"19735:71:4"},"nodeType":"YulExpressionStatement","src":"19735:71:4"}]},"name":"abi_encode_tuple_t_address__to_t_address__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"19661:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"19673:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"19684:4:4","type":""}],"src":"19591:222:4"},{"body":{"nodeType":"YulBlock","src":"19928:40:4","statements":[{"nodeType":"YulAssignment","src":"19939:22:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"19955:5:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"19949:5:4"},"nodeType":"YulFunctionCall","src":"19949:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"19939:6:4"}]}]},"name":"array_length_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"19911:5:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"19921:6:4","type":""}],"src":"19819:149:4"},{"body":{"nodeType":"YulBlock","src":"20120:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20137:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"20142:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"20130:6:4"},"nodeType":"YulFunctionCall","src":"20130:19:4"},"nodeType":"YulExpressionStatement","src":"20130:19:4"},{"nodeType":"YulAssignment","src":"20158:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20177:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"20182:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20173:3:4"},"nodeType":"YulFunctionCall","src":"20173:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"20158:11:4"}]}]},"name":"array_storeLengthForEncoding_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"20092:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"20097:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"20108:11:4","type":""}],"src":"19974:219:4"},{"body":{"nodeType":"YulBlock","src":"20306:60:4","statements":[{"nodeType":"YulAssignment","src":"20316:11:4","value":{"name":"ptr","nodeType":"YulIdentifier","src":"20324:3:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20316:4:4"}]},{"nodeType":"YulAssignment","src":"20337:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"20349:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"20354:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20345:3:4"},"nodeType":"YulFunctionCall","src":"20345:14:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"20337:4:4"}]}]},"name":"array_dataslot_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"20293:3:4","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"20301:4:4","type":""}],"src":"20199:167:4"},{"body":{"nodeType":"YulBlock","src":"20594:588:4","statements":[{"nodeType":"YulVariableDeclaration","src":"20604:26:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20620:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"20625:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20616:3:4"},"nodeType":"YulFunctionCall","src":"20616:14:4"},"variables":[{"name":"tail","nodeType":"YulTypedName","src":"20608:4:4","type":""}]},{"nodeType":"YulBlock","src":"20640:176:4","statements":[{"nodeType":"YulVariableDeclaration","src":"20687:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20717:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"20724:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20713:3:4"},"nodeType":"YulFunctionCall","src":"20713:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20707:5:4"},"nodeType":"YulFunctionCall","src":"20707:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20691:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20777:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20795:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"20800:4:4","type":"","value":"0x00"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20791:3:4"},"nodeType":"YulFunctionCall","src":"20791:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"20743:33:4"},"nodeType":"YulFunctionCall","src":"20743:63:4"},"nodeType":"YulExpressionStatement","src":"20743:63:4"}]},{"nodeType":"YulBlock","src":"20826:174:4","statements":[{"nodeType":"YulVariableDeclaration","src":"20871:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"20901:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"20908:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20897:3:4"},"nodeType":"YulFunctionCall","src":"20897:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"20891:5:4"},"nodeType":"YulFunctionCall","src":"20891:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"20875:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"20961:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"20979:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"20984:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"20975:3:4"},"nodeType":"YulFunctionCall","src":"20975:14:4"}],"functionName":{"name":"abi_encode_t_address_to_t_address","nodeType":"YulIdentifier","src":"20927:33:4"},"nodeType":"YulFunctionCall","src":"20927:63:4"},"nodeType":"YulExpressionStatement","src":"20927:63:4"}]},{"nodeType":"YulBlock","src":"21010:165:4","statements":[{"nodeType":"YulVariableDeclaration","src":"21046:43:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"21076:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"21083:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21072:3:4"},"nodeType":"YulFunctionCall","src":"21072:16:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"21066:5:4"},"nodeType":"YulFunctionCall","src":"21066:23:4"},"variables":[{"name":"memberValue0","nodeType":"YulTypedName","src":"21050:12:4","type":""}]},{"expression":{"arguments":[{"name":"memberValue0","nodeType":"YulIdentifier","src":"21136:12:4"},{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21154:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"21159:4:4","type":"","value":"0x40"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21150:3:4"},"nodeType":"YulFunctionCall","src":"21150:14:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"21102:33:4"},"nodeType":"YulFunctionCall","src":"21102:63:4"},"nodeType":"YulExpressionStatement","src":"21102:63:4"}]}]},"name":"abi_encode_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"20581:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"20588:3:4","type":""}],"src":"20468:714:4"},{"body":{"nodeType":"YulBlock","src":"21338:169:4","statements":[{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"21452:6:4"},{"name":"pos","nodeType":"YulIdentifier","src":"21460:3:4"}],"functionName":{"name":"abi_encode_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr","nodeType":"YulIdentifier","src":"21348:103:4"},"nodeType":"YulFunctionCall","src":"21348:116:4"},"nodeType":"YulExpressionStatement","src":"21348:116:4"},{"nodeType":"YulAssignment","src":"21473:28:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"21491:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"21496:4:4","type":"","value":"0x60"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21487:3:4"},"nodeType":"YulFunctionCall","src":"21487:14:4"},"variableNames":[{"name":"updatedPos","nodeType":"YulIdentifier","src":"21473:10:4"}]}]},"name":"abi_encodeUpdatedPos_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"value0","nodeType":"YulTypedName","src":"21311:6:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21319:3:4","type":""}],"returnVariables":[{"name":"updatedPos","nodeType":"YulTypedName","src":"21327:10:4","type":""}],"src":"21188:319:4"},{"body":{"nodeType":"YulBlock","src":"21623:38:4","statements":[{"nodeType":"YulAssignment","src":"21633:22:4","value":{"arguments":[{"name":"ptr","nodeType":"YulIdentifier","src":"21645:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"21650:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"21641:3:4"},"nodeType":"YulFunctionCall","src":"21641:14:4"},"variableNames":[{"name":"next","nodeType":"YulIdentifier","src":"21633:4:4"}]}]},"name":"array_nextElement_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"21610:3:4","type":""}],"returnVariables":[{"name":"next","nodeType":"YulTypedName","src":"21618:4:4","type":""}],"src":"21513:148:4"},{"body":{"nodeType":"YulBlock","src":"21961:818:4","statements":[{"nodeType":"YulVariableDeclaration","src":"21971:103:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22068:5:4"}],"functionName":{"name":"array_length_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"21985:82:4"},"nodeType":"YulFunctionCall","src":"21985:89:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"21975:6:4","type":""}]},{"nodeType":"YulAssignment","src":"22083:128:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"22199:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"22204:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"22090:108:4"},"nodeType":"YulFunctionCall","src":"22090:121:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22083:3:4"}]},{"nodeType":"YulVariableDeclaration","src":"22220:106:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"22320:5:4"}],"functionName":{"name":"array_dataslot_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22235:84:4"},"nodeType":"YulFunctionCall","src":"22235:91:4"},"variables":[{"name":"baseRef","nodeType":"YulTypedName","src":"22224:7:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"22335:21:4","value":{"name":"baseRef","nodeType":"YulIdentifier","src":"22349:7:4"},"variables":[{"name":"srcPtr","nodeType":"YulTypedName","src":"22339:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"22425:329:4","statements":[{"nodeType":"YulVariableDeclaration","src":"22439:34:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22466:6:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"22460:5:4"},"nodeType":"YulFunctionCall","src":"22460:13:4"},"variables":[{"name":"elementValue0","nodeType":"YulTypedName","src":"22443:13:4","type":""}]},{"nodeType":"YulAssignment","src":"22486:140:4","value":{"arguments":[{"name":"elementValue0","nodeType":"YulIdentifier","src":"22607:13:4"},{"name":"pos","nodeType":"YulIdentifier","src":"22622:3:4"}],"functionName":{"name":"abi_encodeUpdatedPos_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr","nodeType":"YulIdentifier","src":"22493:113:4"},"nodeType":"YulFunctionCall","src":"22493:133:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"22486:3:4"}]},{"nodeType":"YulAssignment","src":"22639:105:4","value":{"arguments":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22737:6:4"}],"functionName":{"name":"array_nextElement_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr","nodeType":"YulIdentifier","src":"22649:87:4"},"nodeType":"YulFunctionCall","src":"22649:95:4"},"variableNames":[{"name":"srcPtr","nodeType":"YulIdentifier","src":"22639:6:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22387:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"22390:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"22384:2:4"},"nodeType":"YulFunctionCall","src":"22384:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"22398:18:4","statements":[{"nodeType":"YulAssignment","src":"22400:14:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"22409:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"22412:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"22405:3:4"},"nodeType":"YulFunctionCall","src":"22405:9:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"22400:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"22369:14:4","statements":[{"nodeType":"YulVariableDeclaration","src":"22371:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"22380:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"22375:1:4","type":""}]}]},"src":"22365:389:4"},{"nodeType":"YulAssignment","src":"22763:10:4","value":{"name":"pos","nodeType":"YulIdentifier","src":"22770:3:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"22763:3:4"}]}]},"name":"abi_encode_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"21940:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"21947:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"21956:3:4","type":""}],"src":"21767:1012:4"},{"body":{"nodeType":"YulBlock","src":"23003:295:4","statements":[{"nodeType":"YulAssignment","src":"23013:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23025:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"23036:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23021:3:4"},"nodeType":"YulFunctionCall","src":"23021:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23013:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23060:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"23071:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23056:3:4"},"nodeType":"YulFunctionCall","src":"23056:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"23079:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"23085:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23075:3:4"},"nodeType":"YulFunctionCall","src":"23075:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"23049:6:4"},"nodeType":"YulFunctionCall","src":"23049:47:4"},"nodeType":"YulExpressionStatement","src":"23049:47:4"},{"nodeType":"YulAssignment","src":"23105:186:4","value":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"23277:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"23286:4:4"}],"functionName":{"name":"abi_encode_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"23113:163:4"},"nodeType":"YulFunctionCall","src":"23113:178:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"23105:4:4"}]}]},"name":"abi_encode_tuple_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"22975:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"22987:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"22998:4:4","type":""}],"src":"22785:513:4"},{"body":{"nodeType":"YulBlock","src":"23414:689:4","statements":[{"body":{"nodeType":"YulBlock","src":"23460:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"23462:77:4"},"nodeType":"YulFunctionCall","src":"23462:79:4"},"nodeType":"YulExpressionStatement","src":"23462:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"23435:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"23444:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"23431:3:4"},"nodeType":"YulFunctionCall","src":"23431:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"23456:2:4","type":"","value":"96"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"23427:3:4"},"nodeType":"YulFunctionCall","src":"23427:32:4"},"nodeType":"YulIf","src":"23424:119:4"},{"nodeType":"YulBlock","src":"23553:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"23568:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"23582:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23572:6:4","type":""}]},{"nodeType":"YulAssignment","src":"23597:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23632:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"23643:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23628:3:4"},"nodeType":"YulFunctionCall","src":"23628:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23652:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23607:20:4"},"nodeType":"YulFunctionCall","src":"23607:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"23597:6:4"}]}]},{"nodeType":"YulBlock","src":"23680:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"23695:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"23709:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23699:6:4","type":""}]},{"nodeType":"YulAssignment","src":"23725:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23760:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"23771:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23756:3:4"},"nodeType":"YulFunctionCall","src":"23756:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"23780:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"23735:20:4"},"nodeType":"YulFunctionCall","src":"23735:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"23725:6:4"}]}]},{"nodeType":"YulBlock","src":"23808:288:4","statements":[{"nodeType":"YulVariableDeclaration","src":"23823:46:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"23854:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"23865:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"23850:3:4"},"nodeType":"YulFunctionCall","src":"23850:18:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"23837:12:4"},"nodeType":"YulFunctionCall","src":"23837:32:4"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"23827:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"23916:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db","nodeType":"YulIdentifier","src":"23918:77:4"},"nodeType":"YulFunctionCall","src":"23918:79:4"},"nodeType":"YulExpressionStatement","src":"23918:79:4"}]},"condition":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"23888:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"23896:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"23885:2:4"},"nodeType":"YulFunctionCall","src":"23885:30:4"},"nodeType":"YulIf","src":"23882:117:4"},{"nodeType":"YulAssignment","src":"24013:73:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24058:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"24069:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24054:3:4"},"nodeType":"YulFunctionCall","src":"24054:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24078:7:4"}],"functionName":{"name":"abi_decode_t_string_memory_ptr","nodeType":"YulIdentifier","src":"24023:30:4"},"nodeType":"YulFunctionCall","src":"24023:63:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24013:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_addresst_string_memory_ptr","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"23368:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"23379:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"23391:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"23399:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"23407:6:4","type":""}],"src":"23304:799:4"},{"body":{"nodeType":"YulBlock","src":"24149:76:4","statements":[{"body":{"nodeType":"YulBlock","src":"24203:16:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"24212:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"24215:1:4","type":"","value":"0"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"24205:6:4"},"nodeType":"YulFunctionCall","src":"24205:12:4"},"nodeType":"YulExpressionStatement","src":"24205:12:4"}]},"condition":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24172:5:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24194:5:4"}],"functionName":{"name":"cleanup_t_bool","nodeType":"YulIdentifier","src":"24179:14:4"},"nodeType":"YulFunctionCall","src":"24179:21:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"24169:2:4"},"nodeType":"YulFunctionCall","src":"24169:32:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"24162:6:4"},"nodeType":"YulFunctionCall","src":"24162:40:4"},"nodeType":"YulIf","src":"24159:60:4"}]},"name":"validator_revert_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"24142:5:4","type":""}],"src":"24109:116:4"},{"body":{"nodeType":"YulBlock","src":"24280:84:4","statements":[{"nodeType":"YulAssignment","src":"24290:29:4","value":{"arguments":[{"name":"offset","nodeType":"YulIdentifier","src":"24312:6:4"}],"functionName":{"name":"calldataload","nodeType":"YulIdentifier","src":"24299:12:4"},"nodeType":"YulFunctionCall","src":"24299:20:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"24290:5:4"}]},{"expression":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"24352:5:4"}],"functionName":{"name":"validator_revert_t_bool","nodeType":"YulIdentifier","src":"24328:23:4"},"nodeType":"YulFunctionCall","src":"24328:30:4"},"nodeType":"YulExpressionStatement","src":"24328:30:4"}]},"name":"abi_decode_t_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"offset","nodeType":"YulTypedName","src":"24258:6:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"24266:3:4","type":""}],"returnVariables":[{"name":"value","nodeType":"YulTypedName","src":"24274:5:4","type":""}],"src":"24231:133:4"},{"body":{"nodeType":"YulBlock","src":"24484:645:4","statements":[{"body":{"nodeType":"YulBlock","src":"24531:83:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b","nodeType":"YulIdentifier","src":"24533:77:4"},"nodeType":"YulFunctionCall","src":"24533:79:4"},"nodeType":"YulExpressionStatement","src":"24533:79:4"}]},"condition":{"arguments":[{"arguments":[{"name":"dataEnd","nodeType":"YulIdentifier","src":"24505:7:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"24514:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"24501:3:4"},"nodeType":"YulFunctionCall","src":"24501:23:4"},{"kind":"number","nodeType":"YulLiteral","src":"24526:3:4","type":"","value":"128"}],"functionName":{"name":"slt","nodeType":"YulIdentifier","src":"24497:3:4"},"nodeType":"YulFunctionCall","src":"24497:33:4"},"nodeType":"YulIf","src":"24494:120:4"},{"nodeType":"YulBlock","src":"24624:117:4","statements":[{"nodeType":"YulVariableDeclaration","src":"24639:15:4","value":{"kind":"number","nodeType":"YulLiteral","src":"24653:1:4","type":"","value":"0"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24643:6:4","type":""}]},{"nodeType":"YulAssignment","src":"24668:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24703:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"24714:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24699:3:4"},"nodeType":"YulFunctionCall","src":"24699:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24723:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"24678:20:4"},"nodeType":"YulFunctionCall","src":"24678:53:4"},"variableNames":[{"name":"value0","nodeType":"YulIdentifier","src":"24668:6:4"}]}]},{"nodeType":"YulBlock","src":"24751:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"24766:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"24780:2:4","type":"","value":"32"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24770:6:4","type":""}]},{"nodeType":"YulAssignment","src":"24796:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24831:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"24842:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24827:3:4"},"nodeType":"YulFunctionCall","src":"24827:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24851:7:4"}],"functionName":{"name":"abi_decode_t_uint256","nodeType":"YulIdentifier","src":"24806:20:4"},"nodeType":"YulFunctionCall","src":"24806:53:4"},"variableNames":[{"name":"value1","nodeType":"YulIdentifier","src":"24796:6:4"}]}]},{"nodeType":"YulBlock","src":"24879:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"24894:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"24908:2:4","type":"","value":"64"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"24898:6:4","type":""}]},{"nodeType":"YulAssignment","src":"24924:63:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"24959:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"24970:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"24955:3:4"},"nodeType":"YulFunctionCall","src":"24955:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"24979:7:4"}],"functionName":{"name":"abi_decode_t_address","nodeType":"YulIdentifier","src":"24934:20:4"},"nodeType":"YulFunctionCall","src":"24934:53:4"},"variableNames":[{"name":"value2","nodeType":"YulIdentifier","src":"24924:6:4"}]}]},{"nodeType":"YulBlock","src":"25007:115:4","statements":[{"nodeType":"YulVariableDeclaration","src":"25022:16:4","value":{"kind":"number","nodeType":"YulLiteral","src":"25036:2:4","type":"","value":"96"},"variables":[{"name":"offset","nodeType":"YulTypedName","src":"25026:6:4","type":""}]},{"nodeType":"YulAssignment","src":"25052:60:4","value":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"25084:9:4"},{"name":"offset","nodeType":"YulIdentifier","src":"25095:6:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25080:3:4"},"nodeType":"YulFunctionCall","src":"25080:22:4"},{"name":"dataEnd","nodeType":"YulIdentifier","src":"25104:7:4"}],"functionName":{"name":"abi_decode_t_bool","nodeType":"YulIdentifier","src":"25062:17:4"},"nodeType":"YulFunctionCall","src":"25062:50:4"},"variableNames":[{"name":"value3","nodeType":"YulIdentifier","src":"25052:6:4"}]}]}]},"name":"abi_decode_tuple_t_addresst_uint256t_addresst_bool","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"24430:9:4","type":""},{"name":"dataEnd","nodeType":"YulTypedName","src":"24441:7:4","type":""}],"returnVariables":[{"name":"value0","nodeType":"YulTypedName","src":"24453:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"24461:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"24469:6:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"24477:6:4","type":""}],"src":"24370:759:4"},{"body":{"nodeType":"YulBlock","src":"25231:73:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25248:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"25253:6:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25241:6:4"},"nodeType":"YulFunctionCall","src":"25241:19:4"},"nodeType":"YulExpressionStatement","src":"25241:19:4"},{"nodeType":"YulAssignment","src":"25269:29:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25288:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"25293:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25284:3:4"},"nodeType":"YulFunctionCall","src":"25284:14:4"},"variableNames":[{"name":"updated_pos","nodeType":"YulIdentifier","src":"25269:11:4"}]}]},"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25203:3:4","type":""},{"name":"length","nodeType":"YulTypedName","src":"25208:6:4","type":""}],"returnVariables":[{"name":"updated_pos","nodeType":"YulTypedName","src":"25219:11:4","type":""}],"src":"25135:169:4"},{"body":{"nodeType":"YulBlock","src":"25416:58:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"25438:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"25446:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25434:3:4"},"nodeType":"YulFunctionCall","src":"25434:14:4"},{"hexValue":"4e6f7420617574686f72697a6564","kind":"string","nodeType":"YulLiteral","src":"25450:16:4","type":"","value":"Not authorized"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"25427:6:4"},"nodeType":"YulFunctionCall","src":"25427:40:4"},"nodeType":"YulExpressionStatement","src":"25427:40:4"}]},"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"25408:6:4","type":""}],"src":"25310:164:4"},{"body":{"nodeType":"YulBlock","src":"25626:220:4","statements":[{"nodeType":"YulAssignment","src":"25636:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25702:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"25707:2:4","type":"","value":"14"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"25643:58:4"},"nodeType":"YulFunctionCall","src":"25643:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"25636:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25808:3:4"}],"functionName":{"name":"store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36","nodeType":"YulIdentifier","src":"25719:88:4"},"nodeType":"YulFunctionCall","src":"25719:93:4"},"nodeType":"YulExpressionStatement","src":"25719:93:4"},{"nodeType":"YulAssignment","src":"25821:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"25832:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"25837:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"25828:3:4"},"nodeType":"YulFunctionCall","src":"25828:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"25821:3:4"}]}]},"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"25614:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"25622:3:4","type":""}],"src":"25480:366:4"},{"body":{"nodeType":"YulBlock","src":"26023:248:4","statements":[{"nodeType":"YulAssignment","src":"26033:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26045:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"26056:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26041:3:4"},"nodeType":"YulFunctionCall","src":"26041:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26033:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"26080:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"26091:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26076:3:4"},"nodeType":"YulFunctionCall","src":"26076:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26099:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"26105:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"26095:3:4"},"nodeType":"YulFunctionCall","src":"26095:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26069:6:4"},"nodeType":"YulFunctionCall","src":"26069:47:4"},"nodeType":"YulExpressionStatement","src":"26069:47:4"},{"nodeType":"YulAssignment","src":"26125:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"26259:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26133:124:4"},"nodeType":"YulFunctionCall","src":"26133:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26125:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26003:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26018:4:4","type":""}],"src":"25852:419:4"},{"body":{"nodeType":"YulBlock","src":"26383:57:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"26405:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"26413:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26401:3:4"},"nodeType":"YulFunctionCall","src":"26401:14:4"},{"hexValue":"496e76616c696420696e646578","kind":"string","nodeType":"YulLiteral","src":"26417:15:4","type":"","value":"Invalid index"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"26394:6:4"},"nodeType":"YulFunctionCall","src":"26394:39:4"},"nodeType":"YulExpressionStatement","src":"26394:39:4"}]},"name":"store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"26375:6:4","type":""}],"src":"26277:163:4"},{"body":{"nodeType":"YulBlock","src":"26592:220:4","statements":[{"nodeType":"YulAssignment","src":"26602:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26668:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"26673:2:4","type":"","value":"13"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"26609:58:4"},"nodeType":"YulFunctionCall","src":"26609:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"26602:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26774:3:4"}],"functionName":{"name":"store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60","nodeType":"YulIdentifier","src":"26685:88:4"},"nodeType":"YulFunctionCall","src":"26685:93:4"},"nodeType":"YulExpressionStatement","src":"26685:93:4"},{"nodeType":"YulAssignment","src":"26787:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"26798:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"26803:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"26794:3:4"},"nodeType":"YulFunctionCall","src":"26794:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"26787:3:4"}]}]},"name":"abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"26580:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"26588:3:4","type":""}],"src":"26446:366:4"},{"body":{"nodeType":"YulBlock","src":"26989:248:4","statements":[{"nodeType":"YulAssignment","src":"26999:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27011:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"27022:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27007:3:4"},"nodeType":"YulFunctionCall","src":"27007:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"26999:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"27046:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"27057:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"27042:3:4"},"nodeType":"YulFunctionCall","src":"27042:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27065:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"27071:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"27061:3:4"},"nodeType":"YulFunctionCall","src":"27061:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27035:6:4"},"nodeType":"YulFunctionCall","src":"27035:47:4"},"nodeType":"YulExpressionStatement","src":"27035:47:4"},{"nodeType":"YulAssignment","src":"27091:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"27225:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"27099:124:4"},"nodeType":"YulFunctionCall","src":"27099:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"27091:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"26969:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"26984:4:4","type":""}],"src":"26818:419:4"},{"body":{"nodeType":"YulBlock","src":"27271:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27288:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27291:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27281:6:4"},"nodeType":"YulFunctionCall","src":"27281:88:4"},"nodeType":"YulExpressionStatement","src":"27281:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27385:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27388:4:4","type":"","value":"0x32"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27378:6:4"},"nodeType":"YulFunctionCall","src":"27378:15:4"},"nodeType":"YulExpressionStatement","src":"27378:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27409:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27412:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27402:6:4"},"nodeType":"YulFunctionCall","src":"27402:15:4"},"nodeType":"YulExpressionStatement","src":"27402:15:4"}]},"name":"panic_error_0x32","nodeType":"YulFunctionDefinition","src":"27243:180:4"},{"body":{"nodeType":"YulBlock","src":"27457:152:4","statements":[{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27474:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27477:77:4","type":"","value":"35408467139433450592217433187231851964531694900788300625387963629091585785856"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27467:6:4"},"nodeType":"YulFunctionCall","src":"27467:88:4"},"nodeType":"YulExpressionStatement","src":"27467:88:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27571:1:4","type":"","value":"4"},{"kind":"number","nodeType":"YulLiteral","src":"27574:4:4","type":"","value":"0x22"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"27564:6:4"},"nodeType":"YulFunctionCall","src":"27564:15:4"},"nodeType":"YulExpressionStatement","src":"27564:15:4"},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"27595:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"27598:4:4","type":"","value":"0x24"}],"functionName":{"name":"revert","nodeType":"YulIdentifier","src":"27588:6:4"},"nodeType":"YulFunctionCall","src":"27588:15:4"},"nodeType":"YulExpressionStatement","src":"27588:15:4"}]},"name":"panic_error_0x22","nodeType":"YulFunctionDefinition","src":"27429:180:4"},{"body":{"nodeType":"YulBlock","src":"27666:269:4","statements":[{"nodeType":"YulAssignment","src":"27676:22:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27690:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"27696:1:4","type":"","value":"2"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"27686:3:4"},"nodeType":"YulFunctionCall","src":"27686:12:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27676:6:4"}]},{"nodeType":"YulVariableDeclaration","src":"27707:38:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"27737:4:4"},{"kind":"number","nodeType":"YulLiteral","src":"27743:1:4","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27733:3:4"},"nodeType":"YulFunctionCall","src":"27733:12:4"},"variables":[{"name":"outOfPlaceEncoding","nodeType":"YulTypedName","src":"27711:18:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"27784:51:4","statements":[{"nodeType":"YulAssignment","src":"27798:27:4","value":{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27812:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"27820:4:4","type":"","value":"0x7f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"27808:3:4"},"nodeType":"YulFunctionCall","src":"27808:17:4"},"variableNames":[{"name":"length","nodeType":"YulIdentifier","src":"27798:6:4"}]}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27764:18:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"27757:6:4"},"nodeType":"YulFunctionCall","src":"27757:26:4"},"nodeType":"YulIf","src":"27754:81:4"},{"body":{"nodeType":"YulBlock","src":"27887:42:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x22","nodeType":"YulIdentifier","src":"27901:16:4"},"nodeType":"YulFunctionCall","src":"27901:18:4"},"nodeType":"YulExpressionStatement","src":"27901:18:4"}]},"condition":{"arguments":[{"name":"outOfPlaceEncoding","nodeType":"YulIdentifier","src":"27851:18:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"27874:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"27882:2:4","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"27871:2:4"},"nodeType":"YulFunctionCall","src":"27871:14:4"}],"functionName":{"name":"eq","nodeType":"YulIdentifier","src":"27848:2:4"},"nodeType":"YulFunctionCall","src":"27848:38:4"},"nodeType":"YulIf","src":"27845:84:4"}]},"name":"extract_byte_array_length","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"27650:4:4","type":""}],"returnVariables":[{"name":"length","nodeType":"YulTypedName","src":"27659:6:4","type":""}],"src":"27615:320:4"},{"body":{"nodeType":"YulBlock","src":"28047:119:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28069:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"28077:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28065:3:4"},"nodeType":"YulFunctionCall","src":"28065:14:4"},{"hexValue":"4f6e6c79207468652062726f6b65722063616e2063616c6c2074686973206675","kind":"string","nodeType":"YulLiteral","src":"28081:34:4","type":"","value":"Only the broker can call this fu"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28058:6:4"},"nodeType":"YulFunctionCall","src":"28058:58:4"},"nodeType":"YulExpressionStatement","src":"28058:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"28137:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"28145:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28133:3:4"},"nodeType":"YulFunctionCall","src":"28133:15:4"},{"hexValue":"6e6374696f6e","kind":"string","nodeType":"YulLiteral","src":"28150:8:4","type":"","value":"nction"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28126:6:4"},"nodeType":"YulFunctionCall","src":"28126:33:4"},"nodeType":"YulExpressionStatement","src":"28126:33:4"}]},"name":"store_literal_in_memory_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"28039:6:4","type":""}],"src":"27941:225:4"},{"body":{"nodeType":"YulBlock","src":"28318:220:4","statements":[{"nodeType":"YulAssignment","src":"28328:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28394:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"28399:2:4","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28335:58:4"},"nodeType":"YulFunctionCall","src":"28335:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"28328:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28500:3:4"}],"functionName":{"name":"store_literal_in_memory_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68","nodeType":"YulIdentifier","src":"28411:88:4"},"nodeType":"YulFunctionCall","src":"28411:93:4"},"nodeType":"YulExpressionStatement","src":"28411:93:4"},{"nodeType":"YulAssignment","src":"28513:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"28524:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"28529:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28520:3:4"},"nodeType":"YulFunctionCall","src":"28520:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"28513:3:4"}]}]},"name":"abi_encode_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"28306:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"28314:3:4","type":""}],"src":"28172:366:4"},{"body":{"nodeType":"YulBlock","src":"28715:248:4","statements":[{"nodeType":"YulAssignment","src":"28725:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28737:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"28748:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28733:3:4"},"nodeType":"YulFunctionCall","src":"28733:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28725:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"28772:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"28783:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"28768:3:4"},"nodeType":"YulFunctionCall","src":"28768:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28791:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"28797:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"28787:3:4"},"nodeType":"YulFunctionCall","src":"28787:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"28761:6:4"},"nodeType":"YulFunctionCall","src":"28761:47:4"},"nodeType":"YulExpressionStatement","src":"28761:47:4"},{"nodeType":"YulAssignment","src":"28817:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"28951:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"28825:124:4"},"nodeType":"YulFunctionCall","src":"28825:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"28817:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"28695:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"28710:4:4","type":""}],"src":"28544:419:4"},{"body":{"nodeType":"YulBlock","src":"29075:117:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29097:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"29105:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29093:3:4"},"nodeType":"YulFunctionCall","src":"29093:14:4"},{"hexValue":"4e6f7420617574686f72697a656420746f206765742061636365737320636f6e","kind":"string","nodeType":"YulLiteral","src":"29109:34:4","type":"","value":"Not authorized to get access con"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29086:6:4"},"nodeType":"YulFunctionCall","src":"29086:58:4"},"nodeType":"YulExpressionStatement","src":"29086:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"29165:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"29173:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29161:3:4"},"nodeType":"YulFunctionCall","src":"29161:15:4"},{"hexValue":"74726f6c","kind":"string","nodeType":"YulLiteral","src":"29178:6:4","type":"","value":"trol"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29154:6:4"},"nodeType":"YulFunctionCall","src":"29154:31:4"},"nodeType":"YulExpressionStatement","src":"29154:31:4"}]},"name":"store_literal_in_memory_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"29067:6:4","type":""}],"src":"28969:223:4"},{"body":{"nodeType":"YulBlock","src":"29344:220:4","statements":[{"nodeType":"YulAssignment","src":"29354:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29420:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"29425:2:4","type":"","value":"36"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29361:58:4"},"nodeType":"YulFunctionCall","src":"29361:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"29354:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29526:3:4"}],"functionName":{"name":"store_literal_in_memory_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3","nodeType":"YulIdentifier","src":"29437:88:4"},"nodeType":"YulFunctionCall","src":"29437:93:4"},"nodeType":"YulExpressionStatement","src":"29437:93:4"},{"nodeType":"YulAssignment","src":"29539:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"29550:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"29555:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29546:3:4"},"nodeType":"YulFunctionCall","src":"29546:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"29539:3:4"}]}]},"name":"abi_encode_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"29332:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"29340:3:4","type":""}],"src":"29198:366:4"},{"body":{"nodeType":"YulBlock","src":"29741:248:4","statements":[{"nodeType":"YulAssignment","src":"29751:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29763:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"29774:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29759:3:4"},"nodeType":"YulFunctionCall","src":"29759:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29751:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"29798:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"29809:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"29794:3:4"},"nodeType":"YulFunctionCall","src":"29794:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29817:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"29823:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"29813:3:4"},"nodeType":"YulFunctionCall","src":"29813:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"29787:6:4"},"nodeType":"YulFunctionCall","src":"29787:47:4"},"nodeType":"YulExpressionStatement","src":"29787:47:4"},{"nodeType":"YulAssignment","src":"29843:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"29977:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"29851:124:4"},"nodeType":"YulFunctionCall","src":"29851:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"29843:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"29721:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"29736:4:4","type":""}],"src":"29570:419:4"},{"body":{"nodeType":"YulBlock","src":"30101:62:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"30123:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"30131:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30119:3:4"},"nodeType":"YulFunctionCall","src":"30119:14:4"},{"hexValue":"416363657373206e6f74206772616e746564","kind":"string","nodeType":"YulLiteral","src":"30135:20:4","type":"","value":"Access not granted"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30112:6:4"},"nodeType":"YulFunctionCall","src":"30112:44:4"},"nodeType":"YulExpressionStatement","src":"30112:44:4"}]},"name":"store_literal_in_memory_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"30093:6:4","type":""}],"src":"29995:168:4"},{"body":{"nodeType":"YulBlock","src":"30315:220:4","statements":[{"nodeType":"YulAssignment","src":"30325:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30391:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"30396:2:4","type":"","value":"18"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30332:58:4"},"nodeType":"YulFunctionCall","src":"30332:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"30325:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30497:3:4"}],"functionName":{"name":"store_literal_in_memory_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f","nodeType":"YulIdentifier","src":"30408:88:4"},"nodeType":"YulFunctionCall","src":"30408:93:4"},"nodeType":"YulExpressionStatement","src":"30408:93:4"},{"nodeType":"YulAssignment","src":"30510:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"30521:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"30526:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30517:3:4"},"nodeType":"YulFunctionCall","src":"30517:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"30510:3:4"}]}]},"name":"abi_encode_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"30303:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"30311:3:4","type":""}],"src":"30169:366:4"},{"body":{"nodeType":"YulBlock","src":"30712:248:4","statements":[{"nodeType":"YulAssignment","src":"30722:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30734:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"30745:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30730:3:4"},"nodeType":"YulFunctionCall","src":"30730:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30722:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"30769:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"30780:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"30765:3:4"},"nodeType":"YulFunctionCall","src":"30765:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30788:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"30794:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"30784:3:4"},"nodeType":"YulFunctionCall","src":"30784:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"30758:6:4"},"nodeType":"YulFunctionCall","src":"30758:47:4"},"nodeType":"YulExpressionStatement","src":"30758:47:4"},{"nodeType":"YulAssignment","src":"30814:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"30948:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"30822:124:4"},"nodeType":"YulFunctionCall","src":"30822:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"30814:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"30692:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"30707:4:4","type":""}],"src":"30541:419:4"},{"body":{"nodeType":"YulBlock","src":"31072:116:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31094:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"31102:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31090:3:4"},"nodeType":"YulFunctionCall","src":"31090:14:4"},{"hexValue":"416363657373206e6f74206772616e74656420746f207669657720646f63756d","kind":"string","nodeType":"YulLiteral","src":"31106:34:4","type":"","value":"Access not granted to view docum"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31083:6:4"},"nodeType":"YulFunctionCall","src":"31083:58:4"},"nodeType":"YulExpressionStatement","src":"31083:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"31162:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"31170:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31158:3:4"},"nodeType":"YulFunctionCall","src":"31158:15:4"},{"hexValue":"656e74","kind":"string","nodeType":"YulLiteral","src":"31175:5:4","type":"","value":"ent"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31151:6:4"},"nodeType":"YulFunctionCall","src":"31151:30:4"},"nodeType":"YulExpressionStatement","src":"31151:30:4"}]},"name":"store_literal_in_memory_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"31064:6:4","type":""}],"src":"30966:222:4"},{"body":{"nodeType":"YulBlock","src":"31340:220:4","statements":[{"nodeType":"YulAssignment","src":"31350:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31416:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"31421:2:4","type":"","value":"35"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31357:58:4"},"nodeType":"YulFunctionCall","src":"31357:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"31350:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31522:3:4"}],"functionName":{"name":"store_literal_in_memory_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b","nodeType":"YulIdentifier","src":"31433:88:4"},"nodeType":"YulFunctionCall","src":"31433:93:4"},"nodeType":"YulExpressionStatement","src":"31433:93:4"},{"nodeType":"YulAssignment","src":"31535:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"31546:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"31551:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31542:3:4"},"nodeType":"YulFunctionCall","src":"31542:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"31535:3:4"}]}]},"name":"abi_encode_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"31328:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"31336:3:4","type":""}],"src":"31194:366:4"},{"body":{"nodeType":"YulBlock","src":"31737:248:4","statements":[{"nodeType":"YulAssignment","src":"31747:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31759:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"31770:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31755:3:4"},"nodeType":"YulFunctionCall","src":"31755:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31747:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"31794:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"31805:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"31790:3:4"},"nodeType":"YulFunctionCall","src":"31790:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31813:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"31819:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"31809:3:4"},"nodeType":"YulFunctionCall","src":"31809:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"31783:6:4"},"nodeType":"YulFunctionCall","src":"31783:47:4"},"nodeType":"YulExpressionStatement","src":"31783:47:4"},{"nodeType":"YulAssignment","src":"31839:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"31973:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"31847:124:4"},"nodeType":"YulFunctionCall","src":"31847:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"31839:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"31717:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"31732:4:4","type":""}],"src":"31566:419:4"},{"body":{"nodeType":"YulBlock","src":"32045:87:4","statements":[{"nodeType":"YulAssignment","src":"32055:11:4","value":{"name":"ptr","nodeType":"YulIdentifier","src":"32063:3:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32055:4:4"}]},{"expression":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32083:1:4","type":"","value":"0"},{"name":"ptr","nodeType":"YulIdentifier","src":"32086:3:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"32076:6:4"},"nodeType":"YulFunctionCall","src":"32076:14:4"},"nodeType":"YulExpressionStatement","src":"32076:14:4"},{"nodeType":"YulAssignment","src":"32099:26:4","value":{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"32117:1:4","type":"","value":"0"},{"kind":"number","nodeType":"YulLiteral","src":"32120:4:4","type":"","value":"0x20"}],"functionName":{"name":"keccak256","nodeType":"YulIdentifier","src":"32107:9:4"},"nodeType":"YulFunctionCall","src":"32107:18:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"32099:4:4"}]}]},"name":"array_dataslot_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"ptr","nodeType":"YulTypedName","src":"32032:3:4","type":""}],"returnVariables":[{"name":"data","nodeType":"YulTypedName","src":"32040:4:4","type":""}],"src":"31991:141:4"},{"body":{"nodeType":"YulBlock","src":"32182:49:4","statements":[{"nodeType":"YulAssignment","src":"32192:33:4","value":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32210:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"32217:2:4","type":"","value":"31"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"32206:3:4"},"nodeType":"YulFunctionCall","src":"32206:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"32222:2:4","type":"","value":"32"}],"functionName":{"name":"div","nodeType":"YulIdentifier","src":"32202:3:4"},"nodeType":"YulFunctionCall","src":"32202:23:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32192:6:4"}]}]},"name":"divide_by_32_ceil","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32165:5:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32175:6:4","type":""}],"src":"32138:93:4"},{"body":{"nodeType":"YulBlock","src":"32290:54:4","statements":[{"nodeType":"YulAssignment","src":"32300:37:4","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"32325:4:4"},{"name":"value","nodeType":"YulIdentifier","src":"32331:5:4"}],"functionName":{"name":"shl","nodeType":"YulIdentifier","src":"32321:3:4"},"nodeType":"YulFunctionCall","src":"32321:16:4"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"32300:8:4"}]}]},"name":"shift_left_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"32265:4:4","type":""},{"name":"value","nodeType":"YulTypedName","src":"32271:5:4","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"32281:8:4","type":""}],"src":"32237:107:4"},{"body":{"nodeType":"YulBlock","src":"32426:317:4","statements":[{"nodeType":"YulVariableDeclaration","src":"32436:35:4","value":{"arguments":[{"name":"shiftBytes","nodeType":"YulIdentifier","src":"32457:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"32469:1:4","type":"","value":"8"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"32453:3:4"},"nodeType":"YulFunctionCall","src":"32453:18:4"},"variables":[{"name":"shiftBits","nodeType":"YulTypedName","src":"32440:9:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"32480:109:4","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32511:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"32522:66:4","type":"","value":"0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32492:18:4"},"nodeType":"YulFunctionCall","src":"32492:97:4"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"32484:4:4","type":""}]},{"nodeType":"YulAssignment","src":"32598:51:4","value":{"arguments":[{"name":"shiftBits","nodeType":"YulIdentifier","src":"32629:9:4"},{"name":"toInsert","nodeType":"YulIdentifier","src":"32640:8:4"}],"functionName":{"name":"shift_left_dynamic","nodeType":"YulIdentifier","src":"32610:18:4"},"nodeType":"YulFunctionCall","src":"32610:39:4"},"variableNames":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32598:8:4"}]},{"nodeType":"YulAssignment","src":"32658:30:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32671:5:4"},{"arguments":[{"name":"mask","nodeType":"YulIdentifier","src":"32682:4:4"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"32678:3:4"},"nodeType":"YulFunctionCall","src":"32678:9:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32667:3:4"},"nodeType":"YulFunctionCall","src":"32667:21:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"32658:5:4"}]},{"nodeType":"YulAssignment","src":"32697:40:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32710:5:4"},{"arguments":[{"name":"toInsert","nodeType":"YulIdentifier","src":"32721:8:4"},{"name":"mask","nodeType":"YulIdentifier","src":"32731:4:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"32717:3:4"},"nodeType":"YulFunctionCall","src":"32717:19:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"32707:2:4"},"nodeType":"YulFunctionCall","src":"32707:30:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"32697:6:4"}]}]},"name":"update_byte_slice_dynamic32","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32387:5:4","type":""},{"name":"shiftBytes","nodeType":"YulTypedName","src":"32394:10:4","type":""},{"name":"toInsert","nodeType":"YulTypedName","src":"32406:8:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"32419:6:4","type":""}],"src":"32350:393:4"},{"body":{"nodeType":"YulBlock","src":"32781:28:4","statements":[{"nodeType":"YulAssignment","src":"32791:12:4","value":{"name":"value","nodeType":"YulIdentifier","src":"32798:5:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"32791:3:4"}]}]},"name":"identity","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32767:5:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"32777:3:4","type":""}],"src":"32749:60:4"},{"body":{"nodeType":"YulBlock","src":"32875:82:4","statements":[{"nodeType":"YulAssignment","src":"32885:66:4","value":{"arguments":[{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"32943:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32925:17:4"},"nodeType":"YulFunctionCall","src":"32925:24:4"}],"functionName":{"name":"identity","nodeType":"YulIdentifier","src":"32916:8:4"},"nodeType":"YulFunctionCall","src":"32916:34:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"32898:17:4"},"nodeType":"YulFunctionCall","src":"32898:53:4"},"variableNames":[{"name":"converted","nodeType":"YulIdentifier","src":"32885:9:4"}]}]},"name":"convert_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32855:5:4","type":""}],"returnVariables":[{"name":"converted","nodeType":"YulTypedName","src":"32865:9:4","type":""}],"src":"32815:142:4"},{"body":{"nodeType":"YulBlock","src":"33010:28:4","statements":[{"nodeType":"YulAssignment","src":"33020:12:4","value":{"name":"value","nodeType":"YulIdentifier","src":"33027:5:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33020:3:4"}]}]},"name":"prepare_store_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"32996:5:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33006:3:4","type":""}],"src":"32963:75:4"},{"body":{"nodeType":"YulBlock","src":"33120:193:4","statements":[{"nodeType":"YulVariableDeclaration","src":"33130:63:4","value":{"arguments":[{"name":"value_0","nodeType":"YulIdentifier","src":"33185:7:4"}],"functionName":{"name":"convert_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33154:30:4"},"nodeType":"YulFunctionCall","src":"33154:39:4"},"variables":[{"name":"convertedValue_0","nodeType":"YulTypedName","src":"33134:16:4","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33209:4:4"},{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33249:4:4"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"33243:5:4"},"nodeType":"YulFunctionCall","src":"33243:11:4"},{"name":"offset","nodeType":"YulIdentifier","src":"33256:6:4"},{"arguments":[{"name":"convertedValue_0","nodeType":"YulIdentifier","src":"33288:16:4"}],"functionName":{"name":"prepare_store_t_uint256","nodeType":"YulIdentifier","src":"33264:23:4"},"nodeType":"YulFunctionCall","src":"33264:41:4"}],"functionName":{"name":"update_byte_slice_dynamic32","nodeType":"YulIdentifier","src":"33215:27:4"},"nodeType":"YulFunctionCall","src":"33215:91:4"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"33202:6:4"},"nodeType":"YulFunctionCall","src":"33202:105:4"},"nodeType":"YulExpressionStatement","src":"33202:105:4"}]},"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33097:4:4","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33103:6:4","type":""},{"name":"value_0","nodeType":"YulTypedName","src":"33111:7:4","type":""}],"src":"33044:269:4"},{"body":{"nodeType":"YulBlock","src":"33368:24:4","statements":[{"nodeType":"YulAssignment","src":"33378:8:4","value":{"kind":"number","nodeType":"YulLiteral","src":"33385:1:4","type":"","value":"0"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"33378:3:4"}]}]},"name":"zero_value_for_split_t_uint256","nodeType":"YulFunctionDefinition","returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"33364:3:4","type":""}],"src":"33319:73:4"},{"body":{"nodeType":"YulBlock","src":"33451:136:4","statements":[{"nodeType":"YulVariableDeclaration","src":"33461:46:4","value":{"arguments":[],"functionName":{"name":"zero_value_for_split_t_uint256","nodeType":"YulIdentifier","src":"33475:30:4"},"nodeType":"YulFunctionCall","src":"33475:32:4"},"variables":[{"name":"zero_0","nodeType":"YulTypedName","src":"33465:6:4","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"33560:4:4"},{"name":"offset","nodeType":"YulIdentifier","src":"33566:6:4"},{"name":"zero_0","nodeType":"YulIdentifier","src":"33574:6:4"}],"functionName":{"name":"update_storage_value_t_uint256_to_t_uint256","nodeType":"YulIdentifier","src":"33516:43:4"},"nodeType":"YulFunctionCall","src":"33516:65:4"},"nodeType":"YulExpressionStatement","src":"33516:65:4"}]},"name":"storage_set_to_zero_t_uint256","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"33437:4:4","type":""},{"name":"offset","nodeType":"YulTypedName","src":"33443:6:4","type":""}],"src":"33398:189:4"},{"body":{"nodeType":"YulBlock","src":"33643:136:4","statements":[{"body":{"nodeType":"YulBlock","src":"33710:63:4","statements":[{"expression":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33754:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"33761:1:4","type":"","value":"0"}],"functionName":{"name":"storage_set_to_zero_t_uint256","nodeType":"YulIdentifier","src":"33724:29:4"},"nodeType":"YulFunctionCall","src":"33724:39:4"},"nodeType":"YulExpressionStatement","src":"33724:39:4"}]},"condition":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33663:5:4"},{"name":"end","nodeType":"YulIdentifier","src":"33670:3:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"33660:2:4"},"nodeType":"YulFunctionCall","src":"33660:14:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"33675:26:4","statements":[{"nodeType":"YulAssignment","src":"33677:22:4","value":{"arguments":[{"name":"start","nodeType":"YulIdentifier","src":"33690:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"33697:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33686:3:4"},"nodeType":"YulFunctionCall","src":"33686:13:4"},"variableNames":[{"name":"start","nodeType":"YulIdentifier","src":"33677:5:4"}]}]},"pre":{"nodeType":"YulBlock","src":"33657:2:4","statements":[]},"src":"33653:120:4"}]},"name":"clear_storage_range_t_bytes1","nodeType":"YulFunctionDefinition","parameters":[{"name":"start","nodeType":"YulTypedName","src":"33631:5:4","type":""},{"name":"end","nodeType":"YulTypedName","src":"33638:3:4","type":""}],"src":"33593:186:4"},{"body":{"nodeType":"YulBlock","src":"33864:464:4","statements":[{"body":{"nodeType":"YulBlock","src":"33890:431:4","statements":[{"nodeType":"YulVariableDeclaration","src":"33904:54:4","value":{"arguments":[{"name":"array","nodeType":"YulIdentifier","src":"33952:5:4"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"33920:31:4"},"nodeType":"YulFunctionCall","src":"33920:38:4"},"variables":[{"name":"dataArea","nodeType":"YulTypedName","src":"33908:8:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"33971:63:4","value":{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"33994:8:4"},{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34022:10:4"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34004:17:4"},"nodeType":"YulFunctionCall","src":"34004:29:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"33990:3:4"},"nodeType":"YulFunctionCall","src":"33990:44:4"},"variables":[{"name":"deleteStart","nodeType":"YulTypedName","src":"33975:11:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"34191:27:4","statements":[{"nodeType":"YulAssignment","src":"34193:23:4","value":{"name":"dataArea","nodeType":"YulIdentifier","src":"34208:8:4"},"variableNames":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"34193:11:4"}]}]},"condition":{"arguments":[{"name":"startIndex","nodeType":"YulIdentifier","src":"34175:10:4"},{"kind":"number","nodeType":"YulLiteral","src":"34187:2:4","type":"","value":"32"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"34172:2:4"},"nodeType":"YulFunctionCall","src":"34172:18:4"},"nodeType":"YulIf","src":"34169:49:4"},{"expression":{"arguments":[{"name":"deleteStart","nodeType":"YulIdentifier","src":"34260:11:4"},{"arguments":[{"name":"dataArea","nodeType":"YulIdentifier","src":"34277:8:4"},{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"34305:3:4"}],"functionName":{"name":"divide_by_32_ceil","nodeType":"YulIdentifier","src":"34287:17:4"},"nodeType":"YulFunctionCall","src":"34287:22:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"34273:3:4"},"nodeType":"YulFunctionCall","src":"34273:37:4"}],"functionName":{"name":"clear_storage_range_t_bytes1","nodeType":"YulIdentifier","src":"34231:28:4"},"nodeType":"YulFunctionCall","src":"34231:80:4"},"nodeType":"YulExpressionStatement","src":"34231:80:4"}]},"condition":{"arguments":[{"name":"len","nodeType":"YulIdentifier","src":"33881:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"33886:2:4","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"33878:2:4"},"nodeType":"YulFunctionCall","src":"33878:11:4"},"nodeType":"YulIf","src":"33875:446:4"}]},"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"array","nodeType":"YulTypedName","src":"33840:5:4","type":""},{"name":"len","nodeType":"YulTypedName","src":"33847:3:4","type":""},{"name":"startIndex","nodeType":"YulTypedName","src":"33852:10:4","type":""}],"src":"33785:543:4"},{"body":{"nodeType":"YulBlock","src":"34397:54:4","statements":[{"nodeType":"YulAssignment","src":"34407:37:4","value":{"arguments":[{"name":"bits","nodeType":"YulIdentifier","src":"34432:4:4"},{"name":"value","nodeType":"YulIdentifier","src":"34438:5:4"}],"functionName":{"name":"shr","nodeType":"YulIdentifier","src":"34428:3:4"},"nodeType":"YulFunctionCall","src":"34428:16:4"},"variableNames":[{"name":"newValue","nodeType":"YulIdentifier","src":"34407:8:4"}]}]},"name":"shift_right_unsigned_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"bits","nodeType":"YulTypedName","src":"34372:4:4","type":""},{"name":"value","nodeType":"YulTypedName","src":"34378:5:4","type":""}],"returnVariables":[{"name":"newValue","nodeType":"YulTypedName","src":"34388:8:4","type":""}],"src":"34334:117:4"},{"body":{"nodeType":"YulBlock","src":"34508:118:4","statements":[{"nodeType":"YulVariableDeclaration","src":"34518:68:4","value":{"arguments":[{"arguments":[{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34567:1:4","type":"","value":"8"},{"name":"bytes","nodeType":"YulIdentifier","src":"34570:5:4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34563:3:4"},"nodeType":"YulFunctionCall","src":"34563:13:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34582:1:4","type":"","value":"0"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34578:3:4"},"nodeType":"YulFunctionCall","src":"34578:6:4"}],"functionName":{"name":"shift_right_unsigned_dynamic","nodeType":"YulIdentifier","src":"34534:28:4"},"nodeType":"YulFunctionCall","src":"34534:51:4"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"34530:3:4"},"nodeType":"YulFunctionCall","src":"34530:56:4"},"variables":[{"name":"mask","nodeType":"YulTypedName","src":"34522:4:4","type":""}]},{"nodeType":"YulAssignment","src":"34595:25:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34609:4:4"},{"name":"mask","nodeType":"YulIdentifier","src":"34615:4:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"34605:3:4"},"nodeType":"YulFunctionCall","src":"34605:15:4"},"variableNames":[{"name":"result","nodeType":"YulIdentifier","src":"34595:6:4"}]}]},"name":"mask_bytes_dynamic","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34485:4:4","type":""},{"name":"bytes","nodeType":"YulTypedName","src":"34491:5:4","type":""}],"returnVariables":[{"name":"result","nodeType":"YulTypedName","src":"34501:6:4","type":""}],"src":"34457:169:4"},{"body":{"nodeType":"YulBlock","src":"34712:214:4","statements":[{"nodeType":"YulAssignment","src":"34845:37:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34872:4:4"},{"name":"len","nodeType":"YulIdentifier","src":"34878:3:4"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"34853:18:4"},"nodeType":"YulFunctionCall","src":"34853:29:4"},"variableNames":[{"name":"data","nodeType":"YulIdentifier","src":"34845:4:4"}]},{"nodeType":"YulAssignment","src":"34891:29:4","value":{"arguments":[{"name":"data","nodeType":"YulIdentifier","src":"34902:4:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"34912:1:4","type":"","value":"2"},{"name":"len","nodeType":"YulIdentifier","src":"34915:3:4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"34908:3:4"},"nodeType":"YulFunctionCall","src":"34908:11:4"}],"functionName":{"name":"or","nodeType":"YulIdentifier","src":"34899:2:4"},"nodeType":"YulFunctionCall","src":"34899:21:4"},"variableNames":[{"name":"used","nodeType":"YulIdentifier","src":"34891:4:4"}]}]},"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulFunctionDefinition","parameters":[{"name":"data","nodeType":"YulTypedName","src":"34693:4:4","type":""},{"name":"len","nodeType":"YulTypedName","src":"34699:3:4","type":""}],"returnVariables":[{"name":"used","nodeType":"YulTypedName","src":"34707:4:4","type":""}],"src":"34631:295:4"},{"body":{"nodeType":"YulBlock","src":"35023:1303:4","statements":[{"nodeType":"YulVariableDeclaration","src":"35034:51:4","value":{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35081:3:4"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"35048:32:4"},"nodeType":"YulFunctionCall","src":"35048:37:4"},"variables":[{"name":"newLen","nodeType":"YulTypedName","src":"35038:6:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"35170:22:4","statements":[{"expression":{"arguments":[],"functionName":{"name":"panic_error_0x41","nodeType":"YulIdentifier","src":"35172:16:4"},"nodeType":"YulFunctionCall","src":"35172:18:4"},"nodeType":"YulExpressionStatement","src":"35172:18:4"}]},"condition":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35142:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"35150:18:4","type":"","value":"0xffffffffffffffff"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35139:2:4"},"nodeType":"YulFunctionCall","src":"35139:30:4"},"nodeType":"YulIf","src":"35136:56:4"},{"nodeType":"YulVariableDeclaration","src":"35202:52:4","value":{"arguments":[{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35248:4:4"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"35242:5:4"},"nodeType":"YulFunctionCall","src":"35242:11:4"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"35216:25:4"},"nodeType":"YulFunctionCall","src":"35216:38:4"},"variables":[{"name":"oldLen","nodeType":"YulTypedName","src":"35206:6:4","type":""}]},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35347:4:4"},{"name":"oldLen","nodeType":"YulIdentifier","src":"35353:6:4"},{"name":"newLen","nodeType":"YulIdentifier","src":"35361:6:4"}],"functionName":{"name":"clean_up_bytearray_end_slots_t_string_storage","nodeType":"YulIdentifier","src":"35301:45:4"},"nodeType":"YulFunctionCall","src":"35301:67:4"},"nodeType":"YulExpressionStatement","src":"35301:67:4"},{"nodeType":"YulVariableDeclaration","src":"35378:18:4","value":{"kind":"number","nodeType":"YulLiteral","src":"35395:1:4","type":"","value":"0"},"variables":[{"name":"srcOffset","nodeType":"YulTypedName","src":"35382:9:4","type":""}]},{"nodeType":"YulAssignment","src":"35406:17:4","value":{"kind":"number","nodeType":"YulLiteral","src":"35419:4:4","type":"","value":"0x20"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35406:9:4"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"35470:611:4","statements":[{"nodeType":"YulVariableDeclaration","src":"35484:37:4","value":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35503:6:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"35515:4:4","type":"","value":"0x1f"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"35511:3:4"},"nodeType":"YulFunctionCall","src":"35511:9:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35499:3:4"},"nodeType":"YulFunctionCall","src":"35499:22:4"},"variables":[{"name":"loopEnd","nodeType":"YulTypedName","src":"35488:7:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35535:51:4","value":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"35581:4:4"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"35549:31:4"},"nodeType":"YulFunctionCall","src":"35549:37:4"},"variables":[{"name":"dstPtr","nodeType":"YulTypedName","src":"35539:6:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"35599:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"35608:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"35603:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"35667:163:4","statements":[{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35692:6:4"},{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35710:3:4"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35715:9:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35706:3:4"},"nodeType":"YulFunctionCall","src":"35706:19:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35700:5:4"},"nodeType":"YulFunctionCall","src":"35700:26:4"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35685:6:4"},"nodeType":"YulFunctionCall","src":"35685:42:4"},"nodeType":"YulExpressionStatement","src":"35685:42:4"},{"nodeType":"YulAssignment","src":"35744:24:4","value":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35758:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"35766:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35754:3:4"},"nodeType":"YulFunctionCall","src":"35754:14:4"},"variableNames":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35744:6:4"}]},{"nodeType":"YulAssignment","src":"35785:31:4","value":{"arguments":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35802:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"35813:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35798:3:4"},"nodeType":"YulFunctionCall","src":"35798:18:4"},"variableNames":[{"name":"srcOffset","nodeType":"YulIdentifier","src":"35785:9:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35633:1:4"},{"name":"loopEnd","nodeType":"YulIdentifier","src":"35636:7:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35630:2:4"},"nodeType":"YulFunctionCall","src":"35630:14:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"35645:21:4","statements":[{"nodeType":"YulAssignment","src":"35647:17:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"35656:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"35659:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35652:3:4"},"nodeType":"YulFunctionCall","src":"35652:12:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"35647:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"35626:3:4","statements":[]},"src":"35622:208:4"},{"body":{"nodeType":"YulBlock","src":"35866:156:4","statements":[{"nodeType":"YulVariableDeclaration","src":"35884:43:4","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"35911:3:4"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"35916:9:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"35907:3:4"},"nodeType":"YulFunctionCall","src":"35907:19:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"35901:5:4"},"nodeType":"YulFunctionCall","src":"35901:26:4"},"variables":[{"name":"lastValue","nodeType":"YulTypedName","src":"35888:9:4","type":""}]},{"expression":{"arguments":[{"name":"dstPtr","nodeType":"YulIdentifier","src":"35951:6:4"},{"arguments":[{"name":"lastValue","nodeType":"YulIdentifier","src":"35978:9:4"},{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35993:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"36001:4:4","type":"","value":"0x1f"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"35989:3:4"},"nodeType":"YulFunctionCall","src":"35989:17:4"}],"functionName":{"name":"mask_bytes_dynamic","nodeType":"YulIdentifier","src":"35959:18:4"},"nodeType":"YulFunctionCall","src":"35959:48:4"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"35944:6:4"},"nodeType":"YulFunctionCall","src":"35944:64:4"},"nodeType":"YulExpressionStatement","src":"35944:64:4"}]},"condition":{"arguments":[{"name":"loopEnd","nodeType":"YulIdentifier","src":"35849:7:4"},{"name":"newLen","nodeType":"YulIdentifier","src":"35858:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"35846:2:4"},"nodeType":"YulFunctionCall","src":"35846:19:4"},"nodeType":"YulIf","src":"35843:179:4"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36042:4:4"},{"arguments":[{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"36056:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"36064:1:4","type":"","value":"2"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"36052:3:4"},"nodeType":"YulFunctionCall","src":"36052:14:4"},{"kind":"number","nodeType":"YulLiteral","src":"36068:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36048:3:4"},"nodeType":"YulFunctionCall","src":"36048:22:4"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36035:6:4"},"nodeType":"YulFunctionCall","src":"36035:36:4"},"nodeType":"YulExpressionStatement","src":"36035:36:4"}]},"nodeType":"YulCase","src":"35463:618:4","value":{"kind":"number","nodeType":"YulLiteral","src":"35468:1:4","type":"","value":"1"}},{"body":{"nodeType":"YulBlock","src":"36098:222:4","statements":[{"nodeType":"YulVariableDeclaration","src":"36112:14:4","value":{"kind":"number","nodeType":"YulLiteral","src":"36125:1:4","type":"","value":"0"},"variables":[{"name":"value","nodeType":"YulTypedName","src":"36116:5:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"36149:67:4","statements":[{"nodeType":"YulAssignment","src":"36167:35:4","value":{"arguments":[{"arguments":[{"name":"src","nodeType":"YulIdentifier","src":"36186:3:4"},{"name":"srcOffset","nodeType":"YulIdentifier","src":"36191:9:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36182:3:4"},"nodeType":"YulFunctionCall","src":"36182:19:4"}],"functionName":{"name":"mload","nodeType":"YulIdentifier","src":"36176:5:4"},"nodeType":"YulFunctionCall","src":"36176:26:4"},"variableNames":[{"name":"value","nodeType":"YulIdentifier","src":"36167:5:4"}]}]},"condition":{"name":"newLen","nodeType":"YulIdentifier","src":"36142:6:4"},"nodeType":"YulIf","src":"36139:77:4"},{"expression":{"arguments":[{"name":"slot","nodeType":"YulIdentifier","src":"36236:4:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36295:5:4"},{"name":"newLen","nodeType":"YulIdentifier","src":"36302:6:4"}],"functionName":{"name":"extract_used_part_and_set_length_of_short_byte_array","nodeType":"YulIdentifier","src":"36242:52:4"},"nodeType":"YulFunctionCall","src":"36242:67:4"}],"functionName":{"name":"sstore","nodeType":"YulIdentifier","src":"36229:6:4"},"nodeType":"YulFunctionCall","src":"36229:81:4"},"nodeType":"YulExpressionStatement","src":"36229:81:4"}]},"nodeType":"YulCase","src":"36090:230:4","value":"default"}],"expression":{"arguments":[{"name":"newLen","nodeType":"YulIdentifier","src":"35443:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"35451:2:4","type":"","value":"31"}],"functionName":{"name":"gt","nodeType":"YulIdentifier","src":"35440:2:4"},"nodeType":"YulFunctionCall","src":"35440:14:4"},"nodeType":"YulSwitch","src":"35433:887:4"}]},"name":"copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage","nodeType":"YulFunctionDefinition","parameters":[{"name":"slot","nodeType":"YulTypedName","src":"35012:4:4","type":""},{"name":"src","nodeType":"YulTypedName","src":"35018:3:4","type":""}],"src":"34931:1395:4"},{"body":{"nodeType":"YulBlock","src":"36397:53:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36414:3:4"},{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36437:5:4"}],"functionName":{"name":"cleanup_t_uint256","nodeType":"YulIdentifier","src":"36419:17:4"},"nodeType":"YulFunctionCall","src":"36419:24:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"36407:6:4"},"nodeType":"YulFunctionCall","src":"36407:37:4"},"nodeType":"YulExpressionStatement","src":"36407:37:4"}]},"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36385:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36392:3:4","type":""}],"src":"36332:118:4"},{"body":{"nodeType":"YulBlock","src":"36548:285:4","statements":[{"nodeType":"YulVariableDeclaration","src":"36558:53:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36605:5:4"}],"functionName":{"name":"array_length_t_string_memory_ptr","nodeType":"YulIdentifier","src":"36572:32:4"},"nodeType":"YulFunctionCall","src":"36572:39:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"36562:6:4","type":""}]},{"nodeType":"YulAssignment","src":"36620:78:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36686:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"36691:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"36627:58:4"},"nodeType":"YulFunctionCall","src":"36627:71:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"36620:3:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36746:5:4"},{"kind":"number","nodeType":"YulLiteral","src":"36753:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36742:3:4"},"nodeType":"YulFunctionCall","src":"36742:16:4"},{"name":"pos","nodeType":"YulIdentifier","src":"36760:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"36765:6:4"}],"functionName":{"name":"copy_memory_to_memory_with_cleanup","nodeType":"YulIdentifier","src":"36707:34:4"},"nodeType":"YulFunctionCall","src":"36707:65:4"},"nodeType":"YulExpressionStatement","src":"36707:65:4"},{"nodeType":"YulAssignment","src":"36781:46:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"36792:3:4"},{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"36819:6:4"}],"functionName":{"name":"round_up_to_mul_of_32","nodeType":"YulIdentifier","src":"36797:21:4"},"nodeType":"YulFunctionCall","src":"36797:29:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"36788:3:4"},"nodeType":"YulFunctionCall","src":"36788:39:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"36781:3:4"}]}]},"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36529:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36536:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"36544:3:4","type":""}],"src":"36456:377:4"},{"body":{"nodeType":"YulBlock","src":"36952:742:4","statements":[{"nodeType":"YulVariableDeclaration","src":"36962:29:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"36985:5:4"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"36979:5:4"},"nodeType":"YulFunctionCall","src":"36979:12:4"},"variables":[{"name":"slotValue","nodeType":"YulTypedName","src":"36966:9:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37000:50:4","value":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"37040:9:4"}],"functionName":{"name":"extract_byte_array_length","nodeType":"YulIdentifier","src":"37014:25:4"},"nodeType":"YulFunctionCall","src":"37014:36:4"},"variables":[{"name":"length","nodeType":"YulTypedName","src":"37004:6:4","type":""}]},{"nodeType":"YulAssignment","src":"37059:78:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37125:3:4"},{"name":"length","nodeType":"YulIdentifier","src":"37130:6:4"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"37066:58:4"},"nodeType":"YulFunctionCall","src":"37066:71:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"37059:3:4"}]},{"cases":[{"body":{"nodeType":"YulBlock","src":"37186:157:4","statements":[{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37239:3:4"},{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"37248:9:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37263:4:4","type":"","value":"0xff"}],"functionName":{"name":"not","nodeType":"YulIdentifier","src":"37259:3:4"},"nodeType":"YulFunctionCall","src":"37259:9:4"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37244:3:4"},"nodeType":"YulFunctionCall","src":"37244:25:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37232:6:4"},"nodeType":"YulFunctionCall","src":"37232:38:4"},"nodeType":"YulExpressionStatement","src":"37232:38:4"},{"nodeType":"YulAssignment","src":"37283:50:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37294:3:4"},{"arguments":[{"kind":"number","nodeType":"YulLiteral","src":"37303:4:4","type":"","value":"0x20"},{"arguments":[{"arguments":[{"name":"length","nodeType":"YulIdentifier","src":"37323:6:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37316:6:4"},"nodeType":"YulFunctionCall","src":"37316:14:4"}],"functionName":{"name":"iszero","nodeType":"YulIdentifier","src":"37309:6:4"},"nodeType":"YulFunctionCall","src":"37309:22:4"}],"functionName":{"name":"mul","nodeType":"YulIdentifier","src":"37299:3:4"},"nodeType":"YulFunctionCall","src":"37299:33:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37290:3:4"},"nodeType":"YulFunctionCall","src":"37290:43:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37283:3:4"}]}]},"nodeType":"YulCase","src":"37179:164:4","value":{"kind":"number","nodeType":"YulLiteral","src":"37184:1:4","type":"","value":"0"}},{"body":{"nodeType":"YulBlock","src":"37359:329:4","statements":[{"nodeType":"YulVariableDeclaration","src":"37404:53:4","value":{"arguments":[{"name":"value","nodeType":"YulIdentifier","src":"37451:5:4"}],"functionName":{"name":"array_dataslot_t_string_storage","nodeType":"YulIdentifier","src":"37419:31:4"},"nodeType":"YulFunctionCall","src":"37419:38:4"},"variables":[{"name":"dataPos","nodeType":"YulTypedName","src":"37408:7:4","type":""}]},{"nodeType":"YulVariableDeclaration","src":"37470:10:4","value":{"kind":"number","nodeType":"YulLiteral","src":"37479:1:4","type":"","value":"0"},"variables":[{"name":"i","nodeType":"YulTypedName","src":"37474:1:4","type":""}]},{"body":{"nodeType":"YulBlock","src":"37537:110:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37566:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"37571:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37562:3:4"},"nodeType":"YulFunctionCall","src":"37562:11:4"},{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"37581:7:4"}],"functionName":{"name":"sload","nodeType":"YulIdentifier","src":"37575:5:4"},"nodeType":"YulFunctionCall","src":"37575:14:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"37555:6:4"},"nodeType":"YulFunctionCall","src":"37555:35:4"},"nodeType":"YulExpressionStatement","src":"37555:35:4"},{"nodeType":"YulAssignment","src":"37607:26:4","value":{"arguments":[{"name":"dataPos","nodeType":"YulIdentifier","src":"37622:7:4"},{"kind":"number","nodeType":"YulLiteral","src":"37631:1:4","type":"","value":"1"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37618:3:4"},"nodeType":"YulFunctionCall","src":"37618:15:4"},"variableNames":[{"name":"dataPos","nodeType":"YulIdentifier","src":"37607:7:4"}]}]},"condition":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37504:1:4"},{"name":"length","nodeType":"YulIdentifier","src":"37507:6:4"}],"functionName":{"name":"lt","nodeType":"YulIdentifier","src":"37501:2:4"},"nodeType":"YulFunctionCall","src":"37501:13:4"},"nodeType":"YulForLoop","post":{"nodeType":"YulBlock","src":"37515:21:4","statements":[{"nodeType":"YulAssignment","src":"37517:17:4","value":{"arguments":[{"name":"i","nodeType":"YulIdentifier","src":"37526:1:4"},{"kind":"number","nodeType":"YulLiteral","src":"37529:4:4","type":"","value":"0x20"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37522:3:4"},"nodeType":"YulFunctionCall","src":"37522:12:4"},"variableNames":[{"name":"i","nodeType":"YulIdentifier","src":"37517:1:4"}]}]},"pre":{"nodeType":"YulBlock","src":"37497:3:4","statements":[]},"src":"37493:154:4"},{"nodeType":"YulAssignment","src":"37660:18:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"37671:3:4"},{"name":"i","nodeType":"YulIdentifier","src":"37676:1:4"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37667:3:4"},"nodeType":"YulFunctionCall","src":"37667:11:4"},"variableNames":[{"name":"ret","nodeType":"YulIdentifier","src":"37660:3:4"}]}]},"nodeType":"YulCase","src":"37352:336:4","value":{"kind":"number","nodeType":"YulLiteral","src":"37357:1:4","type":"","value":"1"}}],"expression":{"arguments":[{"name":"slotValue","nodeType":"YulIdentifier","src":"37157:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"37168:1:4","type":"","value":"1"}],"functionName":{"name":"and","nodeType":"YulIdentifier","src":"37153:3:4"},"nodeType":"YulFunctionCall","src":"37153:17:4"},"nodeType":"YulSwitch","src":"37146:542:4"}]},"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"value","nodeType":"YulTypedName","src":"36933:5:4","type":""},{"name":"pos","nodeType":"YulTypedName","src":"36940:3:4","type":""}],"returnVariables":[{"name":"ret","nodeType":"YulTypedName","src":"36948:3:4","type":""}],"src":"36863:831:4"},{"body":{"nodeType":"YulBlock","src":"37913:504:4","statements":[{"nodeType":"YulAssignment","src":"37923:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"37935:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"37946:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"37931:3:4"},"nodeType":"YulFunctionCall","src":"37931:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"37923:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"38004:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38017:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"38028:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38013:3:4"},"nodeType":"YulFunctionCall","src":"38013:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"37960:43:4"},"nodeType":"YulFunctionCall","src":"37960:71:4"},"nodeType":"YulExpressionStatement","src":"37960:71:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38052:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"38063:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38048:3:4"},"nodeType":"YulFunctionCall","src":"38048:18:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38072:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"38078:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38068:3:4"},"nodeType":"YulFunctionCall","src":"38068:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38041:6:4"},"nodeType":"YulFunctionCall","src":"38041:48:4"},"nodeType":"YulExpressionStatement","src":"38041:48:4"},{"nodeType":"YulAssignment","src":"38098:86:4","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"38170:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"38179:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38106:63:4"},"nodeType":"YulFunctionCall","src":"38106:78:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38098:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38205:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"38216:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38201:3:4"},"nodeType":"YulFunctionCall","src":"38201:18:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"38225:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"38231:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"38221:3:4"},"nodeType":"YulFunctionCall","src":"38221:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38194:6:4"},"nodeType":"YulFunctionCall","src":"38194:48:4"},"nodeType":"YulExpressionStatement","src":"38194:48:4"},{"nodeType":"YulAssignment","src":"38251:83:4","value":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"38320:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"38329:4:4"}],"functionName":{"name":"abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38259:60:4"},"nodeType":"YulFunctionCall","src":"38259:75:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"38251:4:4"}]},{"expression":{"arguments":[{"name":"value3","nodeType":"YulIdentifier","src":"38382:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"38395:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"38406:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38391:3:4"},"nodeType":"YulFunctionCall","src":"38391:18:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"38344:37:4"},"nodeType":"YulFunctionCall","src":"38344:66:4"},"nodeType":"YulExpressionStatement","src":"38344:66:4"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_storage_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"37861:9:4","type":""},{"name":"value3","nodeType":"YulTypedName","src":"37873:6:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"37881:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"37889:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"37897:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"37908:4:4","type":""}],"src":"37700:717:4"},{"body":{"nodeType":"YulBlock","src":"38529:71:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"38551:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"38559:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38547:3:4"},"nodeType":"YulFunctionCall","src":"38547:14:4"},{"hexValue":"446f63756d656e742046657463686564204e6f742076616c696421","kind":"string","nodeType":"YulLiteral","src":"38563:29:4","type":"","value":"Document Fetched Not valid!"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"38540:6:4"},"nodeType":"YulFunctionCall","src":"38540:53:4"},"nodeType":"YulExpressionStatement","src":"38540:53:4"}]},"name":"store_literal_in_memory_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"38521:6:4","type":""}],"src":"38423:177:4"},{"body":{"nodeType":"YulBlock","src":"38752:220:4","statements":[{"nodeType":"YulAssignment","src":"38762:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38828:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"38833:2:4","type":"","value":"27"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"38769:58:4"},"nodeType":"YulFunctionCall","src":"38769:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"38762:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38934:3:4"}],"functionName":{"name":"store_literal_in_memory_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c","nodeType":"YulIdentifier","src":"38845:88:4"},"nodeType":"YulFunctionCall","src":"38845:93:4"},"nodeType":"YulExpressionStatement","src":"38845:93:4"},{"nodeType":"YulAssignment","src":"38947:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"38958:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"38963:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"38954:3:4"},"nodeType":"YulFunctionCall","src":"38954:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"38947:3:4"}]}]},"name":"abi_encode_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"38740:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"38748:3:4","type":""}],"src":"38606:366:4"},{"body":{"nodeType":"YulBlock","src":"39247:560:4","statements":[{"nodeType":"YulAssignment","src":"39257:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39269:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"39280:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39265:3:4"},"nodeType":"YulFunctionCall","src":"39265:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39257:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"39338:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39351:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"39362:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39347:3:4"},"nodeType":"YulFunctionCall","src":"39347:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"39294:43:4"},"nodeType":"YulFunctionCall","src":"39294:71:4"},"nodeType":"YulExpressionStatement","src":"39294:71:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39386:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"39397:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39382:3:4"},"nodeType":"YulFunctionCall","src":"39382:18:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39406:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"39412:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39402:3:4"},"nodeType":"YulFunctionCall","src":"39402:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39375:6:4"},"nodeType":"YulFunctionCall","src":"39375:48:4"},"nodeType":"YulExpressionStatement","src":"39375:48:4"},{"nodeType":"YulAssignment","src":"39432:86:4","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"39504:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"39513:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39440:63:4"},"nodeType":"YulFunctionCall","src":"39440:78:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39432:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39539:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"39550:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39535:3:4"},"nodeType":"YulFunctionCall","src":"39535:18:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39559:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"39565:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"39555:3:4"},"nodeType":"YulFunctionCall","src":"39555:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39528:6:4"},"nodeType":"YulFunctionCall","src":"39528:48:4"},"nodeType":"YulExpressionStatement","src":"39528:48:4"},{"nodeType":"YulAssignment","src":"39585:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"39719:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"39593:124:4"},"nodeType":"YulFunctionCall","src":"39593:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"39585:4:4"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"39772:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"39785:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"39796:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39781:3:4"},"nodeType":"YulFunctionCall","src":"39781:18:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"39734:37:4"},"nodeType":"YulFunctionCall","src":"39734:66:4"},"nodeType":"YulExpressionStatement","src":"39734:66:4"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"39203:9:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"39215:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"39223:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"39231:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"39242:4:4","type":""}],"src":"38978:829:4"},{"body":{"nodeType":"YulBlock","src":"39919:60:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"39941:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"39949:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"39937:3:4"},"nodeType":"YulFunctionCall","src":"39937:14:4"},{"hexValue":"43616e74204163636573732048617368","kind":"string","nodeType":"YulLiteral","src":"39953:18:4","type":"","value":"Cant Access Hash"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"39930:6:4"},"nodeType":"YulFunctionCall","src":"39930:42:4"},"nodeType":"YulExpressionStatement","src":"39930:42:4"}]},"name":"store_literal_in_memory_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"39911:6:4","type":""}],"src":"39813:166:4"},{"body":{"nodeType":"YulBlock","src":"40131:220:4","statements":[{"nodeType":"YulAssignment","src":"40141:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40207:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"40212:2:4","type":"","value":"16"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40148:58:4"},"nodeType":"YulFunctionCall","src":"40148:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"40141:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40313:3:4"}],"functionName":{"name":"store_literal_in_memory_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa","nodeType":"YulIdentifier","src":"40224:88:4"},"nodeType":"YulFunctionCall","src":"40224:93:4"},"nodeType":"YulExpressionStatement","src":"40224:93:4"},{"nodeType":"YulAssignment","src":"40326:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"40337:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"40342:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40333:3:4"},"nodeType":"YulFunctionCall","src":"40333:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"40326:3:4"}]}]},"name":"abi_encode_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"40119:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"40127:3:4","type":""}],"src":"39985:366:4"},{"body":{"nodeType":"YulBlock","src":"40626:560:4","statements":[{"nodeType":"YulAssignment","src":"40636:27:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40648:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"40659:3:4","type":"","value":"128"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40644:3:4"},"nodeType":"YulFunctionCall","src":"40644:19:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40636:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"40717:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40730:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"40741:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40726:3:4"},"nodeType":"YulFunctionCall","src":"40726:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"40673:43:4"},"nodeType":"YulFunctionCall","src":"40673:71:4"},"nodeType":"YulExpressionStatement","src":"40673:71:4"},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40765:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"40776:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40761:3:4"},"nodeType":"YulFunctionCall","src":"40761:18:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40785:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"40791:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40781:3:4"},"nodeType":"YulFunctionCall","src":"40781:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40754:6:4"},"nodeType":"YulFunctionCall","src":"40754:48:4"},"nodeType":"YulExpressionStatement","src":"40754:48:4"},{"nodeType":"YulAssignment","src":"40811:86:4","value":{"arguments":[{"name":"value1","nodeType":"YulIdentifier","src":"40883:6:4"},{"name":"tail","nodeType":"YulIdentifier","src":"40892:4:4"}],"functionName":{"name":"abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40819:63:4"},"nodeType":"YulFunctionCall","src":"40819:78:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40811:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"40918:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"40929:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"40914:3:4"},"nodeType":"YulFunctionCall","src":"40914:18:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"40938:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"40944:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"40934:3:4"},"nodeType":"YulFunctionCall","src":"40934:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"40907:6:4"},"nodeType":"YulFunctionCall","src":"40907:48:4"},"nodeType":"YulExpressionStatement","src":"40907:48:4"},{"nodeType":"YulAssignment","src":"40964:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"41098:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"40972:124:4"},"nodeType":"YulFunctionCall","src":"40972:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"40964:4:4"}]},{"expression":{"arguments":[{"name":"value2","nodeType":"YulIdentifier","src":"41151:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41164:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"41175:2:4","type":"","value":"96"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41160:3:4"},"nodeType":"YulFunctionCall","src":"41160:18:4"}],"functionName":{"name":"abi_encode_t_bool_to_t_bool_fromStack","nodeType":"YulIdentifier","src":"41113:37:4"},"nodeType":"YulFunctionCall","src":"41113:66:4"},"nodeType":"YulExpressionStatement","src":"41113:66:4"}]},"name":"abi_encode_tuple_t_uint256_t_string_memory_ptr_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"40582:9:4","type":""},{"name":"value2","nodeType":"YulTypedName","src":"40594:6:4","type":""},{"name":"value1","nodeType":"YulTypedName","src":"40602:6:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"40610:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"40621:4:4","type":""}],"src":"40357:829:4"},{"body":{"nodeType":"YulBlock","src":"41290:124:4","statements":[{"nodeType":"YulAssignment","src":"41300:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41312:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"41323:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41308:3:4"},"nodeType":"YulFunctionCall","src":"41308:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"41300:4:4"}]},{"expression":{"arguments":[{"name":"value0","nodeType":"YulIdentifier","src":"41380:6:4"},{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"41393:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"41404:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41389:3:4"},"nodeType":"YulFunctionCall","src":"41389:17:4"}],"functionName":{"name":"abi_encode_t_uint256_to_t_uint256_fromStack","nodeType":"YulIdentifier","src":"41336:43:4"},"nodeType":"YulFunctionCall","src":"41336:71:4"},"nodeType":"YulExpressionStatement","src":"41336:71:4"}]},"name":"abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"41262:9:4","type":""},{"name":"value0","nodeType":"YulTypedName","src":"41274:6:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"41285:4:4","type":""}],"src":"41192:222:4"},{"body":{"nodeType":"YulBlock","src":"41526:119:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41548:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"41556:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41544:3:4"},"nodeType":"YulFunctionCall","src":"41544:14:4"},{"hexValue":"4f776e61626c653a206e6577206f776e657220697320746865207a65726f2061","kind":"string","nodeType":"YulLiteral","src":"41560:34:4","type":"","value":"Ownable: new owner is the zero a"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41537:6:4"},"nodeType":"YulFunctionCall","src":"41537:58:4"},"nodeType":"YulExpressionStatement","src":"41537:58:4"},{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"41616:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"41624:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41612:3:4"},"nodeType":"YulFunctionCall","src":"41612:15:4"},{"hexValue":"646472657373","kind":"string","nodeType":"YulLiteral","src":"41629:8:4","type":"","value":"ddress"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"41605:6:4"},"nodeType":"YulFunctionCall","src":"41605:33:4"},"nodeType":"YulExpressionStatement","src":"41605:33:4"}]},"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"41518:6:4","type":""}],"src":"41420:225:4"},{"body":{"nodeType":"YulBlock","src":"41797:220:4","statements":[{"nodeType":"YulAssignment","src":"41807:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41873:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"41878:2:4","type":"","value":"38"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"41814:58:4"},"nodeType":"YulFunctionCall","src":"41814:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"41807:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"41979:3:4"}],"functionName":{"name":"store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe","nodeType":"YulIdentifier","src":"41890:88:4"},"nodeType":"YulFunctionCall","src":"41890:93:4"},"nodeType":"YulExpressionStatement","src":"41890:93:4"},{"nodeType":"YulAssignment","src":"41992:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42003:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"42008:2:4","type":"","value":"64"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"41999:3:4"},"nodeType":"YulFunctionCall","src":"41999:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"41992:3:4"}]}]},"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"41785:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"41793:3:4","type":""}],"src":"41651:366:4"},{"body":{"nodeType":"YulBlock","src":"42194:248:4","statements":[{"nodeType":"YulAssignment","src":"42204:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42216:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"42227:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42212:3:4"},"nodeType":"YulFunctionCall","src":"42212:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42204:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"42251:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"42262:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42247:3:4"},"nodeType":"YulFunctionCall","src":"42247:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42270:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"42276:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"42266:3:4"},"nodeType":"YulFunctionCall","src":"42266:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42240:6:4"},"nodeType":"YulFunctionCall","src":"42240:47:4"},"nodeType":"YulExpressionStatement","src":"42240:47:4"},{"nodeType":"YulAssignment","src":"42296:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"42430:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42304:124:4"},"nodeType":"YulFunctionCall","src":"42304:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"42296:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"42174:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"42189:4:4","type":""}],"src":"42023:419:4"},{"body":{"nodeType":"YulBlock","src":"42554:76:4","statements":[{"expression":{"arguments":[{"arguments":[{"name":"memPtr","nodeType":"YulIdentifier","src":"42576:6:4"},{"kind":"number","nodeType":"YulLiteral","src":"42584:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42572:3:4"},"nodeType":"YulFunctionCall","src":"42572:14:4"},{"hexValue":"4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572","kind":"string","nodeType":"YulLiteral","src":"42588:34:4","type":"","value":"Ownable: caller is not the owner"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"42565:6:4"},"nodeType":"YulFunctionCall","src":"42565:58:4"},"nodeType":"YulExpressionStatement","src":"42565:58:4"}]},"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulFunctionDefinition","parameters":[{"name":"memPtr","nodeType":"YulTypedName","src":"42546:6:4","type":""}],"src":"42448:182:4"},{"body":{"nodeType":"YulBlock","src":"42782:220:4","statements":[{"nodeType":"YulAssignment","src":"42792:74:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42858:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"42863:2:4","type":"","value":"32"}],"functionName":{"name":"array_storeLengthForEncoding_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"42799:58:4"},"nodeType":"YulFunctionCall","src":"42799:67:4"},"variableNames":[{"name":"pos","nodeType":"YulIdentifier","src":"42792:3:4"}]},{"expression":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42964:3:4"}],"functionName":{"name":"store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe","nodeType":"YulIdentifier","src":"42875:88:4"},"nodeType":"YulFunctionCall","src":"42875:93:4"},"nodeType":"YulExpressionStatement","src":"42875:93:4"},{"nodeType":"YulAssignment","src":"42977:19:4","value":{"arguments":[{"name":"pos","nodeType":"YulIdentifier","src":"42988:3:4"},{"kind":"number","nodeType":"YulLiteral","src":"42993:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"42984:3:4"},"nodeType":"YulFunctionCall","src":"42984:12:4"},"variableNames":[{"name":"end","nodeType":"YulIdentifier","src":"42977:3:4"}]}]},"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulFunctionDefinition","parameters":[{"name":"pos","nodeType":"YulTypedName","src":"42770:3:4","type":""}],"returnVariables":[{"name":"end","nodeType":"YulTypedName","src":"42778:3:4","type":""}],"src":"42636:366:4"},{"body":{"nodeType":"YulBlock","src":"43179:248:4","statements":[{"nodeType":"YulAssignment","src":"43189:26:4","value":{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43201:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"43212:2:4","type":"","value":"32"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43197:3:4"},"nodeType":"YulFunctionCall","src":"43197:18:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43189:4:4"}]},{"expression":{"arguments":[{"arguments":[{"name":"headStart","nodeType":"YulIdentifier","src":"43236:9:4"},{"kind":"number","nodeType":"YulLiteral","src":"43247:1:4","type":"","value":"0"}],"functionName":{"name":"add","nodeType":"YulIdentifier","src":"43232:3:4"},"nodeType":"YulFunctionCall","src":"43232:17:4"},{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43255:4:4"},{"name":"headStart","nodeType":"YulIdentifier","src":"43261:9:4"}],"functionName":{"name":"sub","nodeType":"YulIdentifier","src":"43251:3:4"},"nodeType":"YulFunctionCall","src":"43251:20:4"}],"functionName":{"name":"mstore","nodeType":"YulIdentifier","src":"43225:6:4"},"nodeType":"YulFunctionCall","src":"43225:47:4"},"nodeType":"YulExpressionStatement","src":"43225:47:4"},{"nodeType":"YulAssignment","src":"43281:139:4","value":{"arguments":[{"name":"tail","nodeType":"YulIdentifier","src":"43415:4:4"}],"functionName":{"name":"abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack","nodeType":"YulIdentifier","src":"43289:124:4"},"nodeType":"YulFunctionCall","src":"43289:131:4"},"variableNames":[{"name":"tail","nodeType":"YulIdentifier","src":"43281:4:4"}]}]},"name":"abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed","nodeType":"YulFunctionDefinition","parameters":[{"name":"headStart","nodeType":"YulTypedName","src":"43159:9:4","type":""}],"returnVariables":[{"name":"tail","nodeType":"YulTypedName","src":"43174:4:4","type":""}],"src":"43008:419:4"}]},"contents":"{\n\n    function allocate_unbounded() -> memPtr {\n        memPtr := mload(64)\n    }\n\n    function revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() {\n        revert(0, 0)\n    }\n\n    function revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() {\n        revert(0, 0)\n    }\n\n    function cleanup_t_uint160(value) -> cleaned {\n        cleaned := and(value, 0xffffffffffffffffffffffffffffffffffffffff)\n    }\n\n    function cleanup_t_address(value) -> cleaned {\n        cleaned := cleanup_t_uint160(value)\n    }\n\n    function validator_revert_t_address(value) {\n        if iszero(eq(value, cleanup_t_address(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_address(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_address(value)\n    }\n\n    function cleanup_t_uint256(value) -> cleaned {\n        cleaned := value\n    }\n\n    function validator_revert_t_uint256(value) {\n        if iszero(eq(value, cleanup_t_uint256(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_uint256(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_uint256(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_uint256_to_t_uint256(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_address_to_t_address(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function array_length_t_string_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function copy_memory_to_memory_with_cleanup(src, dst, length) {\n        let i := 0\n        for { } lt(i, length) { i := add(i, 32) }\n        {\n            mstore(add(dst, i), mload(add(src, i)))\n        }\n        mstore(add(dst, length), 0)\n    }\n\n    function round_up_to_mul_of_32(value) -> result {\n        result := and(add(value, 31), not(31))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    function cleanup_t_bool(value) -> cleaned {\n        cleaned := iszero(iszero(value))\n    }\n\n    function abi_encode_t_bool_to_t_bool(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function array_length_t_array$_t_uint256_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    function abi_encodeUpdatedPos_t_uint256_to_t_uint256(value0, pos) -> updatedPos {\n        abi_encode_t_uint256_to_t_uint256(value0, pos)\n        updatedPos := add(pos, 0x20)\n    }\n\n    function array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // uint256[] -> uint256[]\n    function abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(value, pos)  -> end  {\n        let length := array_length_t_array$_t_uint256_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_uint256_$dyn_memory_ptr(pos, length)\n        let baseRef := array_dataslot_t_array$_t_uint256_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_uint256_to_t_uint256(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_uint256_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    // struct InsuranceContract.Document -> struct InsuranceContract.Document\n    function abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr_fromStack(value, pos)  -> end  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // indexNumber\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // InsuranceFirm\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // clientAddress\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // documentHash\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isValid\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // traceabilityIndexes\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encode_tuple_t_struct$_Document_$1708_memory_ptr__to_t_struct$_Document_$1708_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_address(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_bool_to_t_bool_fromStack(value, pos) {\n        mstore(pos, cleanup_t_bool(value))\n    }\n\n    function abi_encode_tuple_t_bool__to_t_bool__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function abi_decode_tuple_t_address(headStart, dataEnd) -> value0 {\n        if slt(sub(dataEnd, headStart), 32) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct InsuranceContract.Document -> struct InsuranceContract.Document\n    function abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0xe0)\n\n        {\n            // indexNumber\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // InsuranceFirm\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // clientAddress\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x40))\n        }\n\n        {\n            // documentHash\n\n            let memberValue0 := mload(add(value, 0x60))\n\n            mstore(add(pos, 0x60), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x80))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x80))\n        }\n\n        {\n            // isValid\n\n            let memberValue0 := mload(add(value, 0xa0))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0xa0))\n        }\n\n        {\n            // traceabilityIndexes\n\n            let memberValue0 := mload(add(value, 0xc0))\n\n            mstore(add(pos, 0xc0), sub(tail, pos))\n            tail := abi_encode_t_array$_t_uint256_$dyn_memory_ptr_to_t_array$_t_uint256_$dyn_memory_ptr(memberValue0, tail)\n\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct InsuranceContract.Document[] -> struct InsuranceContract.Document[]\n    function abi_encode_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Document_$1708_memory_ptr_to_t_struct$_Document_$1708_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Document_$1708_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_address(headStart, dataEnd) -> value0, value1 {\n        if slt(sub(dataEnd, headStart), 64) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_length_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct InsuranceContract.Traceability -> struct InsuranceContract.Traceability\n    function abi_encode_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr(value, pos)  -> end  {\n        let tail := add(pos, 0x80)\n\n        {\n            // user\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // timestamp\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // reason\n\n            let memberValue0 := mload(add(value, 0x40))\n\n            mstore(add(pos, 0x40), sub(tail, pos))\n            tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr(memberValue0, tail)\n\n        }\n\n        {\n            // success\n\n            let memberValue0 := mload(add(value, 0x60))\n            abi_encode_t_bool_to_t_bool(memberValue0, add(pos, 0x60))\n        }\n\n        end := tail\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr(value0, pos) -> updatedPos {\n        updatedPos := abi_encode_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr(value0, pos)\n    }\n\n    function array_nextElement_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct InsuranceContract.Traceability[] -> struct InsuranceContract.Traceability[]\n    function abi_encode_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let headStart := pos\n        let tail := add(pos, mul(length, 0x20))\n        let baseRef := array_dataslot_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            mstore(pos, sub(tail, headStart))\n            let elementValue0 := mload(srcPtr)\n            tail := abi_encodeUpdatedPos_t_struct$_Traceability_$1717_memory_ptr_to_t_struct$_Traceability_$1717_memory_ptr(elementValue0, tail)\n            srcPtr := array_nextElement_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr(srcPtr)\n            pos := add(pos, 0x20)\n        }\n        pos := tail\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_Traceability_$1717_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() {\n        revert(0, 0)\n    }\n\n    function revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() {\n        revert(0, 0)\n    }\n\n    function panic_error_0x41() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x41)\n        revert(0, 0x24)\n    }\n\n    function finalize_allocation(memPtr, size) {\n        let newFreePtr := add(memPtr, round_up_to_mul_of_32(size))\n        // protect against overflow\n        if or(gt(newFreePtr, 0xffffffffffffffff), lt(newFreePtr, memPtr)) { panic_error_0x41() }\n        mstore(64, newFreePtr)\n    }\n\n    function allocate_memory(size) -> memPtr {\n        memPtr := allocate_unbounded()\n        finalize_allocation(memPtr, size)\n    }\n\n    function array_allocation_size_t_string_memory_ptr(length) -> size {\n        // Make sure we can allocate memory without overflow\n        if gt(length, 0xffffffffffffffff) { panic_error_0x41() }\n\n        size := round_up_to_mul_of_32(length)\n\n        // add length slot\n        size := add(size, 0x20)\n\n    }\n\n    function copy_calldata_to_memory_with_cleanup(src, dst, length) {\n        calldatacopy(dst, src, length)\n        mstore(add(dst, length), 0)\n    }\n\n    function abi_decode_available_length_t_string_memory_ptr(src, length, end) -> array {\n        array := allocate_memory(array_allocation_size_t_string_memory_ptr(length))\n        mstore(array, length)\n        let dst := add(array, 0x20)\n        if gt(add(src, length), end) { revert_error_987264b3b1d58a9c7f8255e93e81c77d86d6299019c33110a076957a3e06e2ae() }\n        copy_calldata_to_memory_with_cleanup(src, dst, length)\n    }\n\n    // string\n    function abi_decode_t_string_memory_ptr(offset, end) -> array {\n        if iszero(slt(add(offset, 0x1f), end)) { revert_error_1b9f4a0a5773e33b91aa01db23bf8c55fce1411167c872835e7fa00a4f17d46d() }\n        let length := calldataload(offset)\n        array := abi_decode_available_length_t_string_memory_ptr(add(offset, 0x20), length, end)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function abi_encode_t_address_to_t_address_fromStack(value, pos) {\n        mstore(pos, cleanup_t_address(value))\n    }\n\n    function abi_encode_tuple_t_address__to_t_address__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_address_to_t_address_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function array_length_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr(value) -> length {\n\n        length := mload(value)\n\n    }\n\n    function array_storeLengthForEncoding_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function array_dataslot_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr(ptr) -> data {\n        data := ptr\n\n        data := add(ptr, 0x20)\n\n    }\n\n    // struct InsuranceContract.documentGenerated -> struct InsuranceContract.documentGenerated\n    function abi_encode_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr(value, pos)  {\n        let tail := add(pos, 0x60)\n\n        {\n            // insuranceCompany\n\n            let memberValue0 := mload(add(value, 0x00))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x00))\n        }\n\n        {\n            // intendedClient\n\n            let memberValue0 := mload(add(value, 0x20))\n            abi_encode_t_address_to_t_address(memberValue0, add(pos, 0x20))\n        }\n\n        {\n            // Index\n\n            let memberValue0 := mload(add(value, 0x40))\n            abi_encode_t_uint256_to_t_uint256(memberValue0, add(pos, 0x40))\n        }\n\n    }\n\n    function abi_encodeUpdatedPos_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr(value0, pos) -> updatedPos {\n        abi_encode_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr(value0, pos)\n        updatedPos := add(pos, 0x60)\n    }\n\n    function array_nextElement_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr(ptr) -> next {\n        next := add(ptr, 0x20)\n    }\n\n    // struct InsuranceContract.documentGenerated[] -> struct InsuranceContract.documentGenerated[]\n    function abi_encode_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack(value, pos)  -> end  {\n        let length := array_length_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack(pos, length)\n        let baseRef := array_dataslot_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr(value)\n        let srcPtr := baseRef\n        for { let i := 0 } lt(i, length) { i := add(i, 1) }\n        {\n            let elementValue0 := mload(srcPtr)\n            pos := abi_encodeUpdatedPos_t_struct$_documentGenerated_$1724_memory_ptr_to_t_struct$_documentGenerated_$1724_memory_ptr(elementValue0, pos)\n            srcPtr := array_nextElement_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr(srcPtr)\n        }\n        end := pos\n    }\n\n    function abi_encode_tuple_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr__to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_to_t_array$_t_struct$_documentGenerated_$1724_memory_ptr_$dyn_memory_ptr_fromStack(value0,  tail)\n\n    }\n\n    function abi_decode_tuple_t_addresst_addresst_string_memory_ptr(headStart, dataEnd) -> value0, value1, value2 {\n        if slt(sub(dataEnd, headStart), 96) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := calldataload(add(headStart, 64))\n            if gt(offset, 0xffffffffffffffff) { revert_error_c1322bf8034eace5e0b5c7295db60986aa89aae5e0ea0873e4689e076861a5db() }\n\n            value2 := abi_decode_t_string_memory_ptr(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function validator_revert_t_bool(value) {\n        if iszero(eq(value, cleanup_t_bool(value))) { revert(0, 0) }\n    }\n\n    function abi_decode_t_bool(offset, end) -> value {\n        value := calldataload(offset)\n        validator_revert_t_bool(value)\n    }\n\n    function abi_decode_tuple_t_addresst_uint256t_addresst_bool(headStart, dataEnd) -> value0, value1, value2, value3 {\n        if slt(sub(dataEnd, headStart), 128) { revert_error_dbdddcbe895c83990c08b3492a0e83918d802a52331272ac6fdb6a7c4aea3b1b() }\n\n        {\n\n            let offset := 0\n\n            value0 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 32\n\n            value1 := abi_decode_t_uint256(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 64\n\n            value2 := abi_decode_t_address(add(headStart, offset), dataEnd)\n        }\n\n        {\n\n            let offset := 96\n\n            value3 := abi_decode_t_bool(add(headStart, offset), dataEnd)\n        }\n\n    }\n\n    function array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length) -> updated_pos {\n        mstore(pos, length)\n        updated_pos := add(pos, 0x20)\n    }\n\n    function store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized\")\n\n    }\n\n    function abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 14)\n        store_literal_in_memory_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_fac3bac318c0d00994f57b0f2f4c643c313072b71db2302bf4b900309cc50b36_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60(memPtr) {\n\n        mstore(add(memPtr, 0), \"Invalid index\")\n\n    }\n\n    function abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 13)\n        store_literal_in_memory_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_32cc480c4f0e15e5ce7060ec5e004886ed5a15831cba1ff1aa7cb787be55bb60_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function panic_error_0x32() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x32)\n        revert(0, 0x24)\n    }\n\n    function panic_error_0x22() {\n        mstore(0, 35408467139433450592217433187231851964531694900788300625387963629091585785856)\n        mstore(4, 0x22)\n        revert(0, 0x24)\n    }\n\n    function extract_byte_array_length(data) -> length {\n        length := div(data, 2)\n        let outOfPlaceEncoding := and(data, 1)\n        if iszero(outOfPlaceEncoding) {\n            length := and(length, 0x7f)\n        }\n\n        if eq(outOfPlaceEncoding, lt(length, 32)) {\n            panic_error_0x22()\n        }\n    }\n\n    function store_literal_in_memory_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68(memPtr) {\n\n        mstore(add(memPtr, 0), \"Only the broker can call this fu\")\n\n        mstore(add(memPtr, 32), \"nction\")\n\n    }\n\n    function abi_encode_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7225bb6bafe48892b7d4d94492e20c340de36a74fb7be877861fbe3739344f68_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3(memPtr) {\n\n        mstore(add(memPtr, 0), \"Not authorized to get access con\")\n\n        mstore(add(memPtr, 32), \"trol\")\n\n    }\n\n    function abi_encode_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 36)\n        store_literal_in_memory_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_31fa6d6776d614fd588dc68c1f8945cc7a7ef6dc552e35adb550dc781f5df1f3_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access not granted\")\n\n    }\n\n    function abi_encode_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 18)\n        store_literal_in_memory_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_a5e22722d1a14936b321a981400a21a9dde8fa10b1756ad022a7378c1d3a7d9f_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b(memPtr) {\n\n        mstore(add(memPtr, 0), \"Access not granted to view docum\")\n\n        mstore(add(memPtr, 32), \"ent\")\n\n    }\n\n    function abi_encode_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 35)\n        store_literal_in_memory_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_7e379d6974b58e303df28af6d28a2be68954ae551be57fa2aefcc4418f7e274b_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function array_dataslot_t_string_storage(ptr) -> data {\n        data := ptr\n\n        mstore(0, ptr)\n        data := keccak256(0, 0x20)\n\n    }\n\n    function divide_by_32_ceil(value) -> result {\n        result := div(add(value, 31), 32)\n    }\n\n    function shift_left_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shl(bits, value)\n\n    }\n\n    function update_byte_slice_dynamic32(value, shiftBytes, toInsert) -> result {\n        let shiftBits := mul(shiftBytes, 8)\n        let mask := shift_left_dynamic(shiftBits, 0xffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff)\n        toInsert := shift_left_dynamic(shiftBits, toInsert)\n        value := and(value, not(mask))\n        result := or(value, and(toInsert, mask))\n    }\n\n    function identity(value) -> ret {\n        ret := value\n    }\n\n    function convert_t_uint256_to_t_uint256(value) -> converted {\n        converted := cleanup_t_uint256(identity(cleanup_t_uint256(value)))\n    }\n\n    function prepare_store_t_uint256(value) -> ret {\n        ret := value\n    }\n\n    function update_storage_value_t_uint256_to_t_uint256(slot, offset, value_0) {\n        let convertedValue_0 := convert_t_uint256_to_t_uint256(value_0)\n        sstore(slot, update_byte_slice_dynamic32(sload(slot), offset, prepare_store_t_uint256(convertedValue_0)))\n    }\n\n    function zero_value_for_split_t_uint256() -> ret {\n        ret := 0\n    }\n\n    function storage_set_to_zero_t_uint256(slot, offset) {\n        let zero_0 := zero_value_for_split_t_uint256()\n        update_storage_value_t_uint256_to_t_uint256(slot, offset, zero_0)\n    }\n\n    function clear_storage_range_t_bytes1(start, end) {\n        for {} lt(start, end) { start := add(start, 1) }\n        {\n            storage_set_to_zero_t_uint256(start, 0)\n        }\n    }\n\n    function clean_up_bytearray_end_slots_t_string_storage(array, len, startIndex) {\n\n        if gt(len, 31) {\n            let dataArea := array_dataslot_t_string_storage(array)\n            let deleteStart := add(dataArea, divide_by_32_ceil(startIndex))\n            // If we are clearing array to be short byte array, we want to clear only data starting from array data area.\n            if lt(startIndex, 32) { deleteStart := dataArea }\n            clear_storage_range_t_bytes1(deleteStart, add(dataArea, divide_by_32_ceil(len)))\n        }\n\n    }\n\n    function shift_right_unsigned_dynamic(bits, value) -> newValue {\n        newValue :=\n\n        shr(bits, value)\n\n    }\n\n    function mask_bytes_dynamic(data, bytes) -> result {\n        let mask := not(shift_right_unsigned_dynamic(mul(8, bytes), not(0)))\n        result := and(data, mask)\n    }\n    function extract_used_part_and_set_length_of_short_byte_array(data, len) -> used {\n        // we want to save only elements that are part of the array after resizing\n        // others should be set to zero\n        data := mask_bytes_dynamic(data, len)\n        used := or(data, mul(2, len))\n    }\n    function copy_byte_array_to_storage_from_t_string_memory_ptr_to_t_string_storage(slot, src) {\n\n        let newLen := array_length_t_string_memory_ptr(src)\n        // Make sure array length is sane\n        if gt(newLen, 0xffffffffffffffff) { panic_error_0x41() }\n\n        let oldLen := extract_byte_array_length(sload(slot))\n\n        // potentially truncate data\n        clean_up_bytearray_end_slots_t_string_storage(slot, oldLen, newLen)\n\n        let srcOffset := 0\n\n        srcOffset := 0x20\n\n        switch gt(newLen, 31)\n        case 1 {\n            let loopEnd := and(newLen, not(0x1f))\n\n            let dstPtr := array_dataslot_t_string_storage(slot)\n            let i := 0\n            for { } lt(i, loopEnd) { i := add(i, 0x20) } {\n                sstore(dstPtr, mload(add(src, srcOffset)))\n                dstPtr := add(dstPtr, 1)\n                srcOffset := add(srcOffset, 32)\n            }\n            if lt(loopEnd, newLen) {\n                let lastValue := mload(add(src, srcOffset))\n                sstore(dstPtr, mask_bytes_dynamic(lastValue, and(newLen, 0x1f)))\n            }\n            sstore(slot, add(mul(newLen, 2), 1))\n        }\n        default {\n            let value := 0\n            if newLen {\n                value := mload(add(src, srcOffset))\n            }\n            sstore(slot, extract_used_part_and_set_length_of_short_byte_array(value, newLen))\n        }\n    }\n\n    function abi_encode_t_uint256_to_t_uint256_fromStack(value, pos) {\n        mstore(pos, cleanup_t_uint256(value))\n    }\n\n    function abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value, pos) -> end {\n        let length := array_length_t_string_memory_ptr(value)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        copy_memory_to_memory_with_cleanup(add(value, 0x20), pos, length)\n        end := add(pos, round_up_to_mul_of_32(length))\n    }\n\n    // string -> string\n    function abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value, pos) -> ret {\n        let slotValue := sload(value)\n        let length := extract_byte_array_length(slotValue)\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, length)\n        switch and(slotValue, 1)\n        case 0 {\n            // short byte array\n            mstore(pos, and(slotValue, not(0xff)))\n            ret := add(pos, mul(0x20, iszero(iszero(length))))\n        }\n        case 1 {\n            // long byte array\n            let dataPos := array_dataslot_t_string_storage(value)\n            let i := 0\n            for { } lt(i, length) { i := add(i, 0x20) } {\n                mstore(add(pos, i), sload(dataPos))\n                dataPos := add(dataPos, 1)\n            }\n            ret := add(pos, i)\n        }\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_string_storage_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value3, value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_string_storage_to_t_string_memory_ptr_fromStack(value2,  tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value3,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c(memPtr) {\n\n        mstore(add(memPtr, 0), \"Document Fetched Not valid!\")\n\n    }\n\n    function abi_encode_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 27)\n        store_literal_in_memory_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_b06a21d829b9ca28755fb92fd59e9cb5969d2ce46b9e1ae23f2b69e82af9a56c_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 96))\n\n    }\n\n    function store_literal_in_memory_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa(memPtr) {\n\n        mstore(add(memPtr, 0), \"Cant Access Hash\")\n\n    }\n\n    function abi_encode_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 16)\n        store_literal_in_memory_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_uint256_t_string_memory_ptr_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_t_bool__to_t_uint256_t_string_memory_ptr_t_string_memory_ptr_t_bool__fromStack_reversed(headStart , value2, value1, value0) -> tail {\n        tail := add(headStart, 128)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n        mstore(add(headStart, 32), sub(tail, headStart))\n        tail := abi_encode_t_string_memory_ptr_to_t_string_memory_ptr_fromStack(value1,  tail)\n\n        mstore(add(headStart, 64), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_23ba256bf9788308aab2ae6f8d30d4b7af81d53914a7dbf021ff6fdc629d03aa_to_t_string_memory_ptr_fromStack( tail)\n\n        abi_encode_t_bool_to_t_bool_fromStack(value2,  add(headStart, 96))\n\n    }\n\n    function abi_encode_tuple_t_uint256__to_t_uint256__fromStack_reversed(headStart , value0) -> tail {\n        tail := add(headStart, 32)\n\n        abi_encode_t_uint256_to_t_uint256_fromStack(value0,  add(headStart, 0))\n\n    }\n\n    function store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: new owner is the zero a\")\n\n        mstore(add(memPtr, 32), \"ddress\")\n\n    }\n\n    function abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 38)\n        store_literal_in_memory_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe(pos)\n        end := add(pos, 64)\n    }\n\n    function abi_encode_tuple_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_245f15ff17f551913a7a18385165551503906a406f905ac1c2437281a7cd0cfe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n    function store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(memPtr) {\n\n        mstore(add(memPtr, 0), \"Ownable: caller is not the owner\")\n\n    }\n\n    function abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack(pos) -> end {\n        pos := array_storeLengthForEncoding_t_string_memory_ptr_fromStack(pos, 32)\n        store_literal_in_memory_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe(pos)\n        end := add(pos, 32)\n    }\n\n    function abi_encode_tuple_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe__to_t_string_memory_ptr__fromStack_reversed(headStart ) -> tail {\n        tail := add(headStart, 32)\n\n        mstore(add(headStart, 0), sub(tail, headStart))\n        tail := abi_encode_t_stringliteral_9924ebdf1add33d25d4ef888e16131f0a5687b0580a36c21b5c301a6c462effe_to_t_string_memory_ptr_fromStack( tail)\n\n    }\n\n}\n","id":4,"language":"Yul","name":"#utility.yul"}],"immutableReferences":{},"linkReferences":{},"object":"608060405234801561001057600080fd5b50600436106100f55760003560e01c806384b2848711610097578063cecf15e311610066578063cecf15e314610284578063e3766c2f146102a0578063f2fde38b146102d0578063f63f3f89146102ec576100f5565b806384b28487146101fc5780638da5cb5b14610218578063c030224a14610236578063c2ee0dbe14610254576100f5565b806359ded538116100d357806359ded538146101765780635f6ea340146101a65780636029801b146101c2578063715018a6146101f2576100f5565b806323b60fd9146100fa57806332d125cd1461012a578063472879d514610146575b600080fd5b610114600480360381019061010f9190612f8c565b610308565b60405161012191906131e7565b60405180910390f35b610144600480360381019061013f9190612f8c565b610709565b005b610160600480360381019061015b9190613209565b610881565b60405161016d919061326b565b60405180910390f35b610190600480360381019061018b9190613286565b610c6a565b60405161019d9190613418565b60405180910390f35b6101c060048036038101906101bb919061343a565b610f42565b005b6101dc60048036038101906101d79190612f8c565b6111b5565b6040516101e9919061359f565b60405180910390f35b6101fa61146b565b005b610216600480360381019061021191906136f6565b61147f565b005b610220611ce7565b60405161022d9190613774565b60405180910390f35b61023e611d10565b60405161024b9190613880565b60405180910390f35b61026e6004803603810190610269919061343a565b611ed7565b60405161027b919061326b565b60405180910390f35b61029e600480360381019061029991906138a2565b611f6b565b005b6102ba60048036038101906102b59190613286565b612677565b6040516102c79190613418565b60405180910390f35b6102ea60048036038101906102e59190613286565b61294a565b005b6103066004803603810190610301919061393d565b6129cd565b005b610310612e0f565b82610319611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16148061037d57508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b8061040e5750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b61044d576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161044490613a01565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905083106104d1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016104c890613a6d565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061052257610521613a8d565b5b90600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461060190613aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461062d90613aeb565b801561067a5780601f1061064f5761010080835404028352916020019161067a565b820191906000526020600020905b81548152906001019060200180831161065d57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff16151515158152602001600682018054806020026020016040519081016040528092919081815260200182805480156106f757602002820191906000526020600020905b8154815260200190600101908083116106e3575b50505050508152505091505092915050565b610711611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461077e576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161077590613b8e565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508110610802576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107f990613a6d565b60405180910390fd5b6000600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020828154811061085557610854613a8d565b5b906000526020600020906007020160050160006101000a81548160ff0219169083151502179055505050565b60008361088c611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614806108f057508073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16145b806109815750600560008273ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b6109c0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109b790613a01565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508410610a44576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3b90613a6d565b60405180910390fd5b600260008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208481548110610a9557610a94613a8d565b5b906000526020600020906007020160020160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161480610b865750600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b610bc5576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610bbc90613c20565b60405180910390fd5b600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff169150509392505050565b6060610c74611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610ce1576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610cd890613b8e565b60405180910390fd5b600260008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015610f3757838290600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600382018054610e2990613aeb565b80601f0160208091040260200160405190810160405280929190818152602001828054610e5590613aeb565b8015610ea25780601f10610e7757610100808354040283529160200191610ea2565b820191906000526020600020905b815481529060010190602001808311610e8557829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff1615151515815260200160068201805480602002602001604051908101604052809291908181526020018280548015610f1f57602002820191906000526020600020905b815481526020019060010190808311610f0b575b50505050508152505081526020019060010190610d40565b505050509050919050565b610f4a611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614610fb7576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610fae90613b8e565b60405180910390fd5b60011515600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16151514611087576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161107e90613c8c565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055505050565b60606111bf611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff161461122c576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161122390613b8e565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054905082106112b0576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016112a790613a6d565b60405180910390fd5b600660008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000206000838152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561145f57838290600052602060002090600402016040518060800160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001600182015481526020016002820180546113b390613aeb565b80601f01602080910402602001604051908101604052809291908181526020018280546113df90613aeb565b801561142c5780601f106114015761010080835404028352916020019161142c565b820191906000526020600020905b81548152906001019060200180831161140f57829003601f168201915b505050505081526020016003820160009054906101000a900460ff16151515158152505081526020019060010190611320565b50505050905092915050565b611473612cc5565b61147d6000612d43565b565b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508210611503576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016114fa90613a6d565b60405180910390fd5b6000600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020838154811061155657611555613a8d565b5b906000526020600020906007020190506000600560008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff1680156116955750600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff165b90508160050160009054906101000a900460ff16156118d457806116ee576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016116e590613d1e565b60405180910390fd5b60008260060180549050905082600601819080600181540180825580915050600190039060005260206000200160009091909190915055600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff168152602001428152602001868152602001841515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010155604082015181600201908161183d9190613eea565b5060608201518160030160006101000a81548160ff02191690831515021790555050508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735428787600301876040516118c69493929190614088565b60405180910390a350611ce0565b8160050160009054906101000a900460ff1615611ac957600660008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016040518060400160405280601b81526020017f446f63756d656e742046657463686564204e6f742076616c69642100000000008152508152602001831515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081611a389190613eea565b5060608201518160030160006101000a81548160ff02191690831515021790555050508473ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735428685604051611abc93929190614127565b60405180910390a3611cdf565b6000905060008260060180549050905082600601819080600181540180825580915050600190039060005260206000200160009091909190915055600660008773ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600086815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff1681526020014281526020016040518060400160405280601d81526020017f634c49454e54204e6f7420616c6c6f77656420746f20416363657373210000008152508152602001841515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081611c519190613eea565b5060608201518160030160006101000a81548160ff02191690831515021790555050508573ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff167f32e4b9d586ef8959aa99ce37696bdbae0c46d3c125d96ca7628da896dd76c735428786604051611cd5939291906141c4565b60405180910390a3505b5b5050505050565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b6060611d1a611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611d87576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611d7e90613b8e565b60405180910390fd5b600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b82821015611ece57838290600052602060002090600302016040518060600160405290816000820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160028201548152505081526020019060010190611de6565b50505050905090565b6000600560008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060009054906101000a900460ff16905092915050565b828073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614611fda576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401611fd190613a01565b60405180910390fd5b60004290506000600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080549050905060006040518060e001604052808381526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018773ffffffffffffffffffffffffffffffffffffffff168152602001868152602001848152602001600115158152602001600067ffffffffffffffff8111156120a1576120a06135cb565b5b6040519080825280602002602001820160405280156120cf5781602001602082028036833780820191505090505b508152509050600260003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208190806001815401808255809150506001900390600052602060002090600702016000909190919091506000820151816000015560208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060408201518160020160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060608201518160030190816121eb9190613eea565b506080820151816004015560a08201518160050160006101000a81548160ff02191690831515021790555060c0820151816006019080519060200190612232929190612e7a565b5050506001600460008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff0219169083151502179055506001600560008973ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008873ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600660003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600083815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200160405180606001604052806034815260200161436260349139815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506020820151816001015560408201518160020190816124909190613eea565b5060608201518160030160006101000a81548160ff0219169083151502179055505050600060405180606001604052808973ffffffffffffffffffffffffffffffffffffffff1681526020018873ffffffffffffffffffffffffffffffffffffffff1681526020018481525090506001600061250a611ce7565b73ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081908060018154018082558091505060019003906000526020600020906003020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff16021790555060208201518160010160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055506040820151816002015550508673ffffffffffffffffffffffffffffffffffffffff168873ffffffffffffffffffffffffffffffffffffffff167f7a258764a3b2b35077d20a06a3382f6f7cbe6ba4a76a7402102fd275d88e0e68856040516126659190614215565b60405180910390a35050505050505050565b6060818073ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff16146126e8576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016126df90613a01565b60405180910390fd5b600260008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805480602002602001604051908101604052809291908181526020016000905b8282101561293e57838290600052602060002090600702016040518060e0016040529081600082015481526020016001820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020016002820160009054906101000a900473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200160038201805461283090613aeb565b80601f016020809104026020016040519081016040528092919081815260200182805461285c90613aeb565b80156128a95780601f1061287e576101008083540402835291602001916128a9565b820191906000526020600020905b81548152906001019060200180831161288c57829003601f168201915b50505050508152602001600482015481526020016005820160009054906101000a900460ff161515151581526020016006820180548060200260200160405190810160405280929190818152602001828054801561292657602002820191906000526020600020905b815481526020019060010190808311612912575b50505050508152505081526020019060010190612747565b50505050915050919050565b612952612cc5565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff16036129c1576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016129b8906142a2565b60405180910390fd5b6129ca81612d43565b50565b6129d5611ce7565b73ffffffffffffffffffffffffffffffffffffffff163373ffffffffffffffffffffffffffffffffffffffff1614612a42576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612a3990613b8e565b60405180910390fd5b600260008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805490508310612ac6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612abd90613a6d565b60405180910390fd5b80600360008673ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600085815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060006101000a81548160ff021916908315150217905550600660008573ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020600084815260200190815260200160002060405180608001604052803373ffffffffffffffffffffffffffffffffffffffff16815260200142815260200160405180606001604052806033815260200161432f60339139815260200160011515815250908060018154018082558091505060019003906000526020600020906004020160009091909190915060008201518160000160006101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff160217905550602082015181600101556040820151816002019081612c9c9190613eea565b5060608201518160030160006101000a81548160ff021916908315150217905550505050505050565b612ccd612e07565b73ffffffffffffffffffffffffffffffffffffffff16612ceb611ce7565b73ffffffffffffffffffffffffffffffffffffffff1614612d41576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401612d389061430e565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b6040518060e0016040528060008152602001600073ffffffffffffffffffffffffffffffffffffffff168152602001600073ffffffffffffffffffffffffffffffffffffffff1681526020016060815260200160008152602001600015158152602001606081525090565b828054828255906000526020600020908101928215612eb6579160200282015b82811115612eb5578251825591602001919060010190612e9a565b5b509050612ec39190612ec7565b5090565b5b80821115612ee0576000816000905550600101612ec8565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000612f2382612ef8565b9050919050565b612f3381612f18565b8114612f3e57600080fd5b50565b600081359050612f5081612f2a565b92915050565b6000819050919050565b612f6981612f56565b8114612f7457600080fd5b50565b600081359050612f8681612f60565b92915050565b60008060408385031215612fa357612fa2612eee565b5b6000612fb185828601612f41565b9250506020612fc285828601612f77565b9150509250929050565b612fd581612f56565b82525050565b612fe481612f18565b82525050565b600081519050919050565b600082825260208201905092915050565b60005b83811015613024578082015181840152602081019050613009565b60008484015250505050565b6000601f19601f8301169050919050565b600061304c82612fea565b6130568185612ff5565b9350613066818560208601613006565b61306f81613030565b840191505092915050565b60008115159050919050565b61308f8161307a565b82525050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006130cd8383612fcc565b60208301905092915050565b6000602082019050919050565b60006130f182613095565b6130fb81856130a0565b9350613106836130b1565b8060005b8381101561313757815161311e88826130c1565b9750613129836130d9565b92505060018101905061310a565b5085935050505092915050565b600060e08301600083015161315c6000860182612fcc565b50602083015161316f6020860182612fdb565b5060408301516131826040860182612fdb565b506060830151848203606086015261319a8282613041565b91505060808301516131af6080860182612fcc565b5060a08301516131c260a0860182613086565b5060c083015184820360c08601526131da82826130e6565b9150508091505092915050565b600060208201905081810360008301526132018184613144565b905092915050565b60008060006060848603121561322257613221612eee565b5b600061323086828701612f41565b935050602061324186828701612f77565b925050604061325286828701612f41565b9150509250925092565b6132658161307a565b82525050565b6000602082019050613280600083018461325c565b92915050565b60006020828403121561329c5761329b612eee565b5b60006132aa84828501612f41565b91505092915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b600060e0830160008301516132f76000860182612fcc565b50602083015161330a6020860182612fdb565b50604083015161331d6040860182612fdb565b50606083015184820360608601526133358282613041565b915050608083015161334a6080860182612fcc565b5060a083015161335d60a0860182613086565b5060c083015184820360c086015261337582826130e6565b9150508091505092915050565b600061338e83836132df565b905092915050565b6000602082019050919050565b60006133ae826132b3565b6133b881856132be565b9350836020820285016133ca856132cf565b8060005b8581101561340657848403895281516133e78582613382565b94506133f283613396565b925060208a019950506001810190506133ce565b50829750879550505050505092915050565b6000602082019050818103600083015261343281846133a3565b905092915050565b6000806040838503121561345157613450612eee565b5b600061345f85828601612f41565b925050602061347085828601612f41565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b60006080830160008301516134be6000860182612fdb565b5060208301516134d16020860182612fcc565b50604083015184820360408601526134e98282613041565b91505060608301516134fe6060860182613086565b508091505092915050565b600061351583836134a6565b905092915050565b6000602082019050919050565b60006135358261347a565b61353f8185613485565b93508360208202850161355185613496565b8060005b8581101561358d578484038952815161356e8582613509565b94506135798361351d565b925060208a01995050600181019050613555565b50829750879550505050505092915050565b600060208201905081810360008301526135b9818461352a565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61360382613030565b810181811067ffffffffffffffff82111715613622576136216135cb565b5b80604052505050565b6000613635612ee4565b905061364182826135fa565b919050565b600067ffffffffffffffff821115613661576136606135cb565b5b61366a82613030565b9050602081019050919050565b82818337600083830152505050565b600061369961369484613646565b61362b565b9050828152602081018484840111156136b5576136b46135c6565b5b6136c0848285613677565b509392505050565b600082601f8301126136dd576136dc6135c1565b5b81356136ed848260208601613686565b91505092915050565b60008060006060848603121561370f5761370e612eee565b5b600061371d86828701612f41565b935050602061372e86828701612f77565b925050604084013567ffffffffffffffff81111561374f5761374e612ef3565b5b61375b868287016136c8565b9150509250925092565b61376e81612f18565b82525050565b60006020820190506137896000830184613765565b92915050565b600081519050919050565b600082825260208201905092915050565b6000819050602082019050919050565b6060820160008201516137d16000850182612fdb565b5060208201516137e46020850182612fdb565b5060408201516137f76040850182612fcc565b50505050565b600061380983836137bb565b60608301905092915050565b6000602082019050919050565b600061382d8261378f565b613837818561379a565b9350613842836137ab565b8060005b8381101561387357815161385a88826137fd565b975061386583613815565b925050600181019050613846565b5085935050505092915050565b6000602082019050818103600083015261389a8184613822565b905092915050565b6000806000606084860312156138bb576138ba612eee565b5b60006138c986828701612f41565b93505060206138da86828701612f41565b925050604084013567ffffffffffffffff8111156138fb576138fa612ef3565b5b613907868287016136c8565b9150509250925092565b61391a8161307a565b811461392557600080fd5b50565b60008135905061393781613911565b92915050565b6000806000806080858703121561395757613956612eee565b5b600061396587828801612f41565b945050602061397687828801612f77565b935050604061398787828801612f41565b925050606061399887828801613928565b91505092959194509250565b600082825260208201905092915050565b7f4e6f7420617574686f72697a6564000000000000000000000000000000000000600082015250565b60006139eb600e836139a4565b91506139f6826139b5565b602082019050919050565b60006020820190508181036000830152613a1a816139de565b9050919050565b7f496e76616c696420696e64657800000000000000000000000000000000000000600082015250565b6000613a57600d836139a4565b9150613a6282613a21565b602082019050919050565b60006020820190508181036000830152613a8681613a4a565b9050919050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052603260045260246000fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b60006002820490506001821680613b0357607f821691505b602082108103613b1657613b15613abc565b5b50919050565b7f4f6e6c79207468652062726f6b65722063616e2063616c6c207468697320667560008201527f6e6374696f6e0000000000000000000000000000000000000000000000000000602082015250565b6000613b786026836139a4565b9150613b8382613b1c565b604082019050919050565b60006020820190508181036000830152613ba781613b6b565b9050919050565b7f4e6f7420617574686f72697a656420746f206765742061636365737320636f6e60008201527f74726f6c00000000000000000000000000000000000000000000000000000000602082015250565b6000613c0a6024836139a4565b9150613c1582613bae565b604082019050919050565b60006020820190508181036000830152613c3981613bfd565b9050919050565b7f416363657373206e6f74206772616e7465640000000000000000000000000000600082015250565b6000613c766012836139a4565b9150613c8182613c40565b602082019050919050565b60006020820190508181036000830152613ca581613c69565b9050919050565b7f416363657373206e6f74206772616e74656420746f207669657720646f63756d60008201527f656e740000000000000000000000000000000000000000000000000000000000602082015250565b6000613d086023836139a4565b9150613d1382613cac565b604082019050919050565b60006020820190508181036000830152613d3781613cfb565b9050919050565b60008190508160005260206000209050919050565b60006020601f8301049050919050565b600082821b905092915050565b600060088302613da07fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff82613d63565b613daa8683613d63565b95508019841693508086168417925050509392505050565b6000819050919050565b6000613de7613de2613ddd84612f56565b613dc2565b612f56565b9050919050565b6000819050919050565b613e0183613dcc565b613e15613e0d82613dee565b848454613d70565b825550505050565b600090565b613e2a613e1d565b613e35818484613df8565b505050565b5b81811015613e5957613e4e600082613e22565b600181019050613e3b565b5050565b601f821115613e9e57613e6f81613d3e565b613e7884613d53565b81016020851015613e87578190505b613e9b613e9385613d53565b830182613e3a565b50505b505050565b600082821c905092915050565b6000613ec160001984600802613ea3565b1980831691505092915050565b6000613eda8383613eb0565b9150826002028217905092915050565b613ef382612fea565b67ffffffffffffffff811115613f0c57613f0b6135cb565b5b613f168254613aeb565b613f21828285613e5d565b600060209050601f831160018114613f545760008415613f42578287015190505b613f4c8582613ece565b865550613fb4565b601f198416613f6286613d3e565b60005b82811015613f8a57848901518255600182019150602085019450602081019050613f65565b86831015613fa75784890151613fa3601f891682613eb0565b8355505b6001600288020188555050505b505050505050565b613fc581612f56565b82525050565b6000613fd682612fea565b613fe081856139a4565b9350613ff0818560208601613006565b613ff981613030565b840191505092915050565b6000815461401181613aeb565b61401b81866139a4565b94506001821660008114614036576001811461404c5761407f565b60ff19831686528115156020028601935061407f565b61405585613d3e565b60005b8381101561407757815481890152600182019150602081019050614058565b808801955050505b50505092915050565b600060808201905061409d6000830187613fbc565b81810360208301526140af8186613fcb565b905081810360408301526140c38185614004565b90506140d2606083018461325c565b95945050505050565b7f446f63756d656e742046657463686564204e6f742076616c6964210000000000600082015250565b6000614111601b836139a4565b915061411c826140db565b602082019050919050565b600060808201905061413c6000830186613fbc565b818103602083015261414e8185613fcb565b9050818103604083015261416181614104565b9050614170606083018461325c565b949350505050565b7f43616e7420416363657373204861736800000000000000000000000000000000600082015250565b60006141ae6010836139a4565b91506141b982614178565b602082019050919050565b60006080820190506141d96000830186613fbc565b81810360208301526141eb8185613fcb565b905081810360408301526141fe816141a1565b905061420d606083018461325c565b949350505050565b600060208201905061422a6000830184613fbc565b92915050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b600061428c6026836139a4565b915061429782614230565b604082019050919050565b600060208201905081810360008301526142bb8161427f565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006142f86020836139a4565b9150614303826142c2565b602082019050919050565b60006020820190508181036000830152614327816142eb565b905091905056fe42726f6b657220476976696e6720446f63756d656e742041636365737320746f205265737065637469766520436c69656e7421496e737572616e6365204669726d2047656e65726174657320496e737572616e636520436c61696d20666f7220636c49454e5421a264697066735822122084e929abcd0c32ee06b227122f65e674974561ea9448bf6317543f064de7ca4d64736f6c63430008130033","opcodes":"PUSH1 0x80 PUSH1 0x40 MSTORE CALLVALUE DUP1 ISZERO PUSH2 0x10 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP PUSH1 0x4 CALLDATASIZE LT PUSH2 0xF5 JUMPI PUSH1 0x0 CALLDATALOAD PUSH1 0xE0 SHR DUP1 PUSH4 0x84B28487 GT PUSH2 0x97 JUMPI DUP1 PUSH4 0xCECF15E3 GT PUSH2 0x66 JUMPI DUP1 PUSH4 0xCECF15E3 EQ PUSH2 0x284 JUMPI DUP1 PUSH4 0xE3766C2F EQ PUSH2 0x2A0 JUMPI DUP1 PUSH4 0xF2FDE38B EQ PUSH2 0x2D0 JUMPI DUP1 PUSH4 0xF63F3F89 EQ PUSH2 0x2EC JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x84B28487 EQ PUSH2 0x1FC JUMPI DUP1 PUSH4 0x8DA5CB5B EQ PUSH2 0x218 JUMPI DUP1 PUSH4 0xC030224A EQ PUSH2 0x236 JUMPI DUP1 PUSH4 0xC2EE0DBE EQ PUSH2 0x254 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x59DED538 GT PUSH2 0xD3 JUMPI DUP1 PUSH4 0x59DED538 EQ PUSH2 0x176 JUMPI DUP1 PUSH4 0x5F6EA340 EQ PUSH2 0x1A6 JUMPI DUP1 PUSH4 0x6029801B EQ PUSH2 0x1C2 JUMPI DUP1 PUSH4 0x715018A6 EQ PUSH2 0x1F2 JUMPI PUSH2 0xF5 JUMP JUMPDEST DUP1 PUSH4 0x23B60FD9 EQ PUSH2 0xFA JUMPI DUP1 PUSH4 0x32D125CD EQ PUSH2 0x12A JUMPI DUP1 PUSH4 0x472879D5 EQ PUSH2 0x146 JUMPI JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH2 0x114 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x10F SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x308 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x121 SWAP2 SWAP1 PUSH2 0x31E7 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x144 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x13F SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x709 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x160 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x15B SWAP2 SWAP1 PUSH2 0x3209 JUMP JUMPDEST PUSH2 0x881 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x16D SWAP2 SWAP1 PUSH2 0x326B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x190 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x18B SWAP2 SWAP1 PUSH2 0x3286 JUMP JUMPDEST PUSH2 0xC6A JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x19D SWAP2 SWAP1 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1C0 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1BB SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH2 0xF42 JUMP JUMPDEST STOP JUMPDEST PUSH2 0x1DC PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x1D7 SWAP2 SWAP1 PUSH2 0x2F8C JUMP JUMPDEST PUSH2 0x11B5 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x1E9 SWAP2 SWAP1 PUSH2 0x359F JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x1FA PUSH2 0x146B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x216 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x211 SWAP2 SWAP1 PUSH2 0x36F6 JUMP JUMPDEST PUSH2 0x147F JUMP JUMPDEST STOP JUMPDEST PUSH2 0x220 PUSH2 0x1CE7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x22D SWAP2 SWAP1 PUSH2 0x3774 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x23E PUSH2 0x1D10 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x24B SWAP2 SWAP1 PUSH2 0x3880 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x26E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x269 SWAP2 SWAP1 PUSH2 0x343A JUMP JUMPDEST PUSH2 0x1ED7 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x27B SWAP2 SWAP1 PUSH2 0x326B JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x29E PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x299 SWAP2 SWAP1 PUSH2 0x38A2 JUMP JUMPDEST PUSH2 0x1F6B JUMP JUMPDEST STOP JUMPDEST PUSH2 0x2BA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2B5 SWAP2 SWAP1 PUSH2 0x3286 JUMP JUMPDEST PUSH2 0x2677 JUMP JUMPDEST PUSH1 0x40 MLOAD PUSH2 0x2C7 SWAP2 SWAP1 PUSH2 0x3418 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 RETURN JUMPDEST PUSH2 0x2EA PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x2E5 SWAP2 SWAP1 PUSH2 0x3286 JUMP JUMPDEST PUSH2 0x294A JUMP JUMPDEST STOP JUMPDEST PUSH2 0x306 PUSH1 0x4 DUP1 CALLDATASIZE SUB DUP2 ADD SWAP1 PUSH2 0x301 SWAP2 SWAP1 PUSH2 0x393D JUMP JUMPDEST PUSH2 0x29CD JUMP JUMPDEST STOP JUMPDEST PUSH2 0x310 PUSH2 0x2E0F JUMP JUMPDEST DUP3 PUSH2 0x319 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x37D JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x40E JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x44D JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x444 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x4D1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x4C8 SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x522 JUMPI PUSH2 0x521 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x601 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x62D SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x67A JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x64F JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x67A JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x65D JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x6F7 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x6E3 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x711 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x77E JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x775 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP2 LT PUSH2 0x802 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x7F9 SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP3 DUP2 SLOAD DUP2 LT PUSH2 0x855 JUMPI PUSH2 0x854 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP4 PUSH2 0x88C PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0x8F0 JUMPI POP DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ JUMPDEST DUP1 PUSH2 0x981 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP3 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0x9C0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x9B7 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP5 LT PUSH2 0xA44 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xA3B SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP5 DUP2 SLOAD DUP2 LT PUSH2 0xA95 JUMPI PUSH2 0xA94 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x2 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ DUP1 PUSH2 0xB86 JUMPI POP PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST PUSH2 0xBC5 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xBBC SWAP1 PUSH2 0x3C20 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP2 POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0xC74 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xCE1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xCD8 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0xF37 JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0xE29 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0xE55 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0xEA2 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0xE77 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0xEA2 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0xE85 JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0xF1F JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0xF0B JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0xD40 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0xF4A PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0xFB7 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0xFAE SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 ISZERO ISZERO PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO EQ PUSH2 0x1087 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x107E SWAP1 PUSH2 0x3C8C JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x4 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP JUMP JUMPDEST PUSH1 0x60 PUSH2 0x11BF PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x122C JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1223 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x12B0 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x12A7 SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x6 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x145F JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD DUP1 SLOAD PUSH2 0x13B3 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x13DF SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x142C JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x1401 JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x142C JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x140F JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1320 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x1473 PUSH2 0x2CC5 JUMP JUMPDEST PUSH2 0x147D PUSH1 0x0 PUSH2 0x2D43 JUMP JUMPDEST JUMP JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP3 LT PUSH2 0x1503 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x14FA SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP4 DUP2 SLOAD DUP2 LT PUSH2 0x1556 JUMPI PUSH2 0x1555 PUSH2 0x3A8D JUMP JUMPDEST JUMPDEST SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD SWAP1 POP PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND DUP1 ISZERO PUSH2 0x1695 JUMPI POP PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND JUMPDEST SWAP1 POP DUP2 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x18D4 JUMPI DUP1 PUSH2 0x16EE JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x16E5 SWAP1 PUSH2 0x3D1E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP3 PUSH1 0x6 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x183D SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x32E4B9D586EF8959AA99CE37696BDBAE0C46D3C125D96CA7628DA896DD76C735 TIMESTAMP DUP8 DUP8 PUSH1 0x3 ADD DUP8 PUSH1 0x40 MLOAD PUSH2 0x18C6 SWAP5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4088 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP PUSH2 0x1CE0 JUMP JUMPDEST DUP2 PUSH1 0x5 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO PUSH2 0x1AC9 JUMPI PUSH1 0x6 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1B DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x446F63756D656E742046657463686564204E6F742076616C6964210000000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP4 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1A38 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x32E4B9D586EF8959AA99CE37696BDBAE0C46D3C125D96CA7628DA896DD76C735 TIMESTAMP DUP7 DUP6 PUSH1 0x40 MLOAD PUSH2 0x1ABC SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x4127 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 PUSH2 0x1CDF JUMP JUMPDEST PUSH1 0x0 SWAP1 POP PUSH1 0x0 DUP3 PUSH1 0x6 ADD DUP1 SLOAD SWAP1 POP SWAP1 POP DUP3 PUSH1 0x6 ADD DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP SSTORE PUSH1 0x6 PUSH1 0x0 DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP7 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x40 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x1D DUP2 MSTORE PUSH1 0x20 ADD PUSH32 0x634C49454E54204E6F7420616C6C6F77656420746F2041636365737321000000 DUP2 MSTORE POP DUP2 MSTORE PUSH1 0x20 ADD DUP5 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x1C51 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x32E4B9D586EF8959AA99CE37696BDBAE0C46D3C125D96CA7628DA896DD76C735 TIMESTAMP DUP8 DUP7 PUSH1 0x40 MLOAD PUSH2 0x1CD5 SWAP4 SWAP3 SWAP2 SWAP1 PUSH2 0x41C4 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP JUMPDEST JUMPDEST POP POP POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x60 PUSH2 0x1D1A PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1D87 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1D7E SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x1 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x1ECE JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD SLOAD DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x1DE6 JUMP JUMPDEST POP POP POP POP SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x5 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST DUP3 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x1FDA JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x1FD1 SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x0 TIMESTAMP SWAP1 POP PUSH1 0x0 PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP SWAP1 POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 DUP4 DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP8 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP7 DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x20A1 JUMPI PUSH2 0x20A0 PUSH2 0x35CB JUMP JUMPDEST JUMPDEST PUSH1 0x40 MLOAD SWAP1 DUP1 DUP3 MSTORE DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD DUP3 ADD PUSH1 0x40 MSTORE DUP1 ISZERO PUSH2 0x20CF JUMPI DUP2 PUSH1 0x20 ADD PUSH1 0x20 DUP3 MUL DUP1 CALLDATASIZE DUP4 CALLDATACOPY DUP1 DUP3 ADD SWAP2 POP POP SWAP1 POP JUMPDEST POP DUP2 MSTORE POP SWAP1 POP PUSH1 0x2 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD SSTORE PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD SWAP1 DUP2 PUSH2 0x21EB SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x80 DUP3 ADD MLOAD DUP2 PUSH1 0x4 ADD SSTORE PUSH1 0xA0 DUP3 ADD MLOAD DUP2 PUSH1 0x5 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0xC0 DUP3 ADD MLOAD DUP2 PUSH1 0x6 ADD SWAP1 DUP1 MLOAD SWAP1 PUSH1 0x20 ADD SWAP1 PUSH2 0x2232 SWAP3 SWAP2 SWAP1 PUSH2 0x2E7A JUMP JUMPDEST POP POP POP PUSH1 0x1 PUSH1 0x4 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x1 PUSH1 0x5 PUSH1 0x0 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP4 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x34 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x4362 PUSH1 0x34 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2490 SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP PUSH1 0x0 PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 DUP10 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD DUP5 DUP2 MSTORE POP SWAP1 POP PUSH1 0x1 PUSH1 0x0 PUSH2 0x250A PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP2 SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x3 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SSTORE POP POP DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP9 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x7A258764A3B2B35077D20A06A3382F6F7CBE6BA4A76A7402102FD275D88E0E68 DUP6 PUSH1 0x40 MLOAD PUSH2 0x2665 SWAP2 SWAP1 PUSH2 0x4215 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP POP POP POP POP POP POP JUMP JUMPDEST PUSH1 0x60 DUP2 DUP1 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x26E8 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x26DF SWAP1 PUSH2 0x3A01 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 SWAP1 JUMPDEST DUP3 DUP3 LT ISZERO PUSH2 0x293E JUMPI DUP4 DUP3 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x7 MUL ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE SWAP1 DUP2 PUSH1 0x0 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x2 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x3 DUP3 ADD DUP1 SLOAD PUSH2 0x2830 SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 PUSH1 0x1F ADD PUSH1 0x20 DUP1 SWAP2 DIV MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD PUSH2 0x285C SWAP1 PUSH2 0x3AEB JUMP JUMPDEST DUP1 ISZERO PUSH2 0x28A9 JUMPI DUP1 PUSH1 0x1F LT PUSH2 0x287E JUMPI PUSH2 0x100 DUP1 DUP4 SLOAD DIV MUL DUP4 MSTORE SWAP2 PUSH1 0x20 ADD SWAP2 PUSH2 0x28A9 JUMP JUMPDEST DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE SWAP1 PUSH1 0x1 ADD SWAP1 PUSH1 0x20 ADD DUP1 DUP4 GT PUSH2 0x288C JUMPI DUP3 SWAP1 SUB PUSH1 0x1F AND DUP3 ADD SWAP2 JUMPDEST POP POP POP POP POP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x4 DUP3 ADD SLOAD DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x5 DUP3 ADD PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH1 0xFF AND ISZERO ISZERO ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x6 DUP3 ADD DUP1 SLOAD DUP1 PUSH1 0x20 MUL PUSH1 0x20 ADD PUSH1 0x40 MLOAD SWAP1 DUP2 ADD PUSH1 0x40 MSTORE DUP1 SWAP3 SWAP2 SWAP1 DUP2 DUP2 MSTORE PUSH1 0x20 ADD DUP3 DUP1 SLOAD DUP1 ISZERO PUSH2 0x2926 JUMPI PUSH1 0x20 MUL DUP3 ADD SWAP2 SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 JUMPDEST DUP2 SLOAD DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 DUP1 DUP4 GT PUSH2 0x2912 JUMPI JUMPDEST POP POP POP POP POP DUP2 MSTORE POP POP DUP2 MSTORE PUSH1 0x20 ADD SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2747 JUMP JUMPDEST POP POP POP POP SWAP2 POP POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2952 PUSH2 0x2CC5 JUMP JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SUB PUSH2 0x29C1 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x29B8 SWAP1 PUSH2 0x42A2 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH2 0x29CA DUP2 PUSH2 0x2D43 JUMP JUMPDEST POP JUMP JUMPDEST PUSH2 0x29D5 PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2A42 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2A39 SWAP1 PUSH2 0x3B8E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST PUSH1 0x2 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 DUP1 SLOAD SWAP1 POP DUP4 LT PUSH2 0x2AC6 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2ABD SWAP1 PUSH2 0x3A6D JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST DUP1 PUSH1 0x3 PUSH1 0x0 DUP7 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP6 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP PUSH1 0x6 PUSH1 0x0 DUP6 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x0 DUP5 DUP2 MSTORE PUSH1 0x20 ADD SWAP1 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 KECCAK256 PUSH1 0x40 MLOAD DUP1 PUSH1 0x80 ADD PUSH1 0x40 MSTORE DUP1 CALLER PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD TIMESTAMP DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x40 MLOAD DUP1 PUSH1 0x60 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x33 DUP2 MSTORE PUSH1 0x20 ADD PUSH2 0x432F PUSH1 0x33 SWAP2 CODECOPY DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x1 ISZERO ISZERO DUP2 MSTORE POP SWAP1 DUP1 PUSH1 0x1 DUP2 SLOAD ADD DUP1 DUP3 SSTORE DUP1 SWAP2 POP POP PUSH1 0x1 SWAP1 SUB SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 PUSH1 0x4 MUL ADD PUSH1 0x0 SWAP1 SWAP2 SWAP1 SWAP2 SWAP1 SWAP2 POP PUSH1 0x0 DUP3 ADD MLOAD DUP2 PUSH1 0x0 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP PUSH1 0x20 DUP3 ADD MLOAD DUP2 PUSH1 0x1 ADD SSTORE PUSH1 0x40 DUP3 ADD MLOAD DUP2 PUSH1 0x2 ADD SWAP1 DUP2 PUSH2 0x2C9C SWAP2 SWAP1 PUSH2 0x3EEA JUMP JUMPDEST POP PUSH1 0x60 DUP3 ADD MLOAD DUP2 PUSH1 0x3 ADD PUSH1 0x0 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH1 0xFF MUL NOT AND SWAP1 DUP4 ISZERO ISZERO MUL OR SWAP1 SSTORE POP POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x2CCD PUSH2 0x2E07 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH2 0x2CEB PUSH2 0x1CE7 JUMP JUMPDEST PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND EQ PUSH2 0x2D41 JUMPI PUSH1 0x40 MLOAD PUSH32 0x8C379A000000000000000000000000000000000000000000000000000000000 DUP2 MSTORE PUSH1 0x4 ADD PUSH2 0x2D38 SWAP1 PUSH2 0x430E JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 REVERT JUMPDEST JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 SWAP1 SLOAD SWAP1 PUSH2 0x100 EXP SWAP1 DIV PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND SWAP1 POP DUP2 PUSH1 0x0 DUP1 PUSH2 0x100 EXP DUP2 SLOAD DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF MUL NOT AND SWAP1 DUP4 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND MUL OR SWAP1 SSTORE POP DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND PUSH32 0x8BE0079C531659141344CD1FD0A4F28419497F9722A3DAAFE3B4186F6B6457E0 PUSH1 0x40 MLOAD PUSH1 0x40 MLOAD DUP1 SWAP2 SUB SWAP1 LOG3 POP POP JUMP JUMPDEST PUSH1 0x0 CALLER SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x40 MLOAD DUP1 PUSH1 0xE0 ADD PUSH1 0x40 MSTORE DUP1 PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF AND DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x0 ISZERO ISZERO DUP2 MSTORE PUSH1 0x20 ADD PUSH1 0x60 DUP2 MSTORE POP SWAP1 JUMP JUMPDEST DUP3 DUP1 SLOAD DUP3 DUP3 SSTORE SWAP1 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 DUP2 ADD SWAP3 DUP3 ISZERO PUSH2 0x2EB6 JUMPI SWAP2 PUSH1 0x20 MUL DUP3 ADD JUMPDEST DUP3 DUP2 GT ISZERO PUSH2 0x2EB5 JUMPI DUP3 MLOAD DUP3 SSTORE SWAP2 PUSH1 0x20 ADD SWAP2 SWAP1 PUSH1 0x1 ADD SWAP1 PUSH2 0x2E9A JUMP JUMPDEST JUMPDEST POP SWAP1 POP PUSH2 0x2EC3 SWAP2 SWAP1 PUSH2 0x2EC7 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST JUMPDEST DUP1 DUP3 GT ISZERO PUSH2 0x2EE0 JUMPI PUSH1 0x0 DUP2 PUSH1 0x0 SWAP1 SSTORE POP PUSH1 0x1 ADD PUSH2 0x2EC8 JUMP JUMPDEST POP SWAP1 JUMP JUMPDEST PUSH1 0x0 PUSH1 0x40 MLOAD SWAP1 POP SWAP1 JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 PUSH20 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x2F23 DUP3 PUSH2 0x2EF8 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F33 DUP2 PUSH2 0x2F18 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F3E JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F50 DUP2 PUSH2 0x2F2A JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x2F69 DUP2 PUSH2 0x2F56 JUMP JUMPDEST DUP2 EQ PUSH2 0x2F74 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x2F86 DUP2 PUSH2 0x2F60 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x2FA3 JUMPI PUSH2 0x2FA2 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x2FB1 DUP6 DUP3 DUP7 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x2FC2 DUP6 DUP3 DUP7 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH2 0x2FD5 DUP2 PUSH2 0x2F56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH2 0x2FE4 DUP2 PUSH2 0x2F18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3024 JUMPI DUP1 DUP3 ADD MLOAD DUP2 DUP5 ADD MSTORE PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3009 JUMP JUMPDEST PUSH1 0x0 DUP5 DUP5 ADD MSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x1F NOT PUSH1 0x1F DUP4 ADD AND SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x304C DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3056 DUP2 DUP6 PUSH2 0x2FF5 JUMP JUMPDEST SWAP4 POP PUSH2 0x3066 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3006 JUMP JUMPDEST PUSH2 0x306F DUP2 PUSH2 0x3030 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 ISZERO ISZERO SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x308F DUP2 PUSH2 0x307A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30CD DUP4 DUP4 PUSH2 0x2FCC JUMP JUMPDEST PUSH1 0x20 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x30F1 DUP3 PUSH2 0x3095 JUMP JUMPDEST PUSH2 0x30FB DUP2 DUP6 PUSH2 0x30A0 JUMP JUMPDEST SWAP4 POP PUSH2 0x3106 DUP4 PUSH2 0x30B1 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3137 JUMPI DUP2 MLOAD PUSH2 0x311E DUP9 DUP3 PUSH2 0x30C1 JUMP JUMPDEST SWAP8 POP PUSH2 0x3129 DUP4 PUSH2 0x30D9 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x310A JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x315C PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x316F PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x3182 PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x319A DUP3 DUP3 PUSH2 0x3041 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x31AF PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x31C2 PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x3086 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x31DA DUP3 DUP3 PUSH2 0x30E6 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3201 DUP2 DUP5 PUSH2 0x3144 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x3222 JUMPI PUSH2 0x3221 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3230 DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x3241 DUP7 DUP3 DUP8 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 PUSH2 0x3252 DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x3265 DUP2 PUSH2 0x307A JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3280 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 DUP5 SUB SLT ISZERO PUSH2 0x329C JUMPI PUSH2 0x329B PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x32AA DUP5 DUP3 DUP6 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0xE0 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x32F7 PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x330A PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD PUSH2 0x331D PUSH1 0x40 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x60 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x60 DUP7 ADD MSTORE PUSH2 0x3335 DUP3 DUP3 PUSH2 0x3041 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x80 DUP4 ADD MLOAD PUSH2 0x334A PUSH1 0x80 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0xA0 DUP4 ADD MLOAD PUSH2 0x335D PUSH1 0xA0 DUP7 ADD DUP3 PUSH2 0x3086 JUMP JUMPDEST POP PUSH1 0xC0 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0xC0 DUP7 ADD MSTORE PUSH2 0x3375 DUP3 DUP3 PUSH2 0x30E6 JUMP JUMPDEST SWAP2 POP POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x338E DUP4 DUP4 PUSH2 0x32DF JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x33AE DUP3 PUSH2 0x32B3 JUMP JUMPDEST PUSH2 0x33B8 DUP2 DUP6 PUSH2 0x32BE JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x33CA DUP6 PUSH2 0x32CF JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x3406 JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x33E7 DUP6 DUP3 PUSH2 0x3382 JUMP JUMPDEST SWAP5 POP PUSH2 0x33F2 DUP4 PUSH2 0x3396 JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x33CE JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3432 DUP2 DUP5 PUSH2 0x33A3 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x40 DUP4 DUP6 SUB SLT ISZERO PUSH2 0x3451 JUMPI PUSH2 0x3450 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x345F DUP6 DUP3 DUP7 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x20 PUSH2 0x3470 DUP6 DUP3 DUP7 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP4 ADD PUSH1 0x0 DUP4 ADD MLOAD PUSH2 0x34BE PUSH1 0x0 DUP7 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x20 DUP4 ADD MLOAD PUSH2 0x34D1 PUSH1 0x20 DUP7 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP PUSH1 0x40 DUP4 ADD MLOAD DUP5 DUP3 SUB PUSH1 0x40 DUP7 ADD MSTORE PUSH2 0x34E9 DUP3 DUP3 PUSH2 0x3041 JUMP JUMPDEST SWAP2 POP POP PUSH1 0x60 DUP4 ADD MLOAD PUSH2 0x34FE PUSH1 0x60 DUP7 ADD DUP3 PUSH2 0x3086 JUMP JUMPDEST POP DUP1 SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3515 DUP4 DUP4 PUSH2 0x34A6 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3535 DUP3 PUSH2 0x347A JUMP JUMPDEST PUSH2 0x353F DUP2 DUP6 PUSH2 0x3485 JUMP JUMPDEST SWAP4 POP DUP4 PUSH1 0x20 DUP3 MUL DUP6 ADD PUSH2 0x3551 DUP6 PUSH2 0x3496 JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP6 DUP2 LT ISZERO PUSH2 0x358D JUMPI DUP5 DUP5 SUB DUP10 MSTORE DUP2 MLOAD PUSH2 0x356E DUP6 DUP3 PUSH2 0x3509 JUMP JUMPDEST SWAP5 POP PUSH2 0x3579 DUP4 PUSH2 0x351D JUMP JUMPDEST SWAP3 POP PUSH1 0x20 DUP11 ADD SWAP10 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3555 JUMP JUMPDEST POP DUP3 SWAP8 POP DUP8 SWAP6 POP POP POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x35B9 DUP2 DUP5 PUSH2 0x352A JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH1 0x0 DUP1 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x41 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH2 0x3603 DUP3 PUSH2 0x3030 JUMP JUMPDEST DUP2 ADD DUP2 DUP2 LT PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT OR ISZERO PUSH2 0x3622 JUMPI PUSH2 0x3621 PUSH2 0x35CB JUMP JUMPDEST JUMPDEST DUP1 PUSH1 0x40 MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3635 PUSH2 0x2EE4 JUMP JUMPDEST SWAP1 POP PUSH2 0x3641 DUP3 DUP3 PUSH2 0x35FA JUMP JUMPDEST SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH8 0xFFFFFFFFFFFFFFFF DUP3 GT ISZERO PUSH2 0x3661 JUMPI PUSH2 0x3660 PUSH2 0x35CB JUMP JUMPDEST JUMPDEST PUSH2 0x366A DUP3 PUSH2 0x3030 JUMP JUMPDEST SWAP1 POP PUSH1 0x20 DUP2 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST DUP3 DUP2 DUP4 CALLDATACOPY PUSH1 0x0 DUP4 DUP4 ADD MSTORE POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3699 PUSH2 0x3694 DUP5 PUSH2 0x3646 JUMP JUMPDEST PUSH2 0x362B JUMP JUMPDEST SWAP1 POP DUP3 DUP2 MSTORE PUSH1 0x20 DUP2 ADD DUP5 DUP5 DUP5 ADD GT ISZERO PUSH2 0x36B5 JUMPI PUSH2 0x36B4 PUSH2 0x35C6 JUMP JUMPDEST JUMPDEST PUSH2 0x36C0 DUP5 DUP3 DUP6 PUSH2 0x3677 JUMP JUMPDEST POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 PUSH1 0x1F DUP4 ADD SLT PUSH2 0x36DD JUMPI PUSH2 0x36DC PUSH2 0x35C1 JUMP JUMPDEST JUMPDEST DUP2 CALLDATALOAD PUSH2 0x36ED DUP5 DUP3 PUSH1 0x20 DUP7 ADD PUSH2 0x3686 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x370F JUMPI PUSH2 0x370E PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x371D DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x372E DUP7 DUP3 DUP8 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x374F JUMPI PUSH2 0x374E PUSH2 0x2EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x375B DUP7 DUP3 DUP8 ADD PUSH2 0x36C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x376E DUP2 PUSH2 0x2F18 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x3789 PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3765 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 MLOAD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x60 DUP3 ADD PUSH1 0x0 DUP3 ADD MLOAD PUSH2 0x37D1 PUSH1 0x0 DUP6 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x20 DUP3 ADD MLOAD PUSH2 0x37E4 PUSH1 0x20 DUP6 ADD DUP3 PUSH2 0x2FDB JUMP JUMPDEST POP PUSH1 0x40 DUP3 ADD MLOAD PUSH2 0x37F7 PUSH1 0x40 DUP6 ADD DUP3 PUSH2 0x2FCC JUMP JUMPDEST POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3809 DUP4 DUP4 PUSH2 0x37BB JUMP JUMPDEST PUSH1 0x60 DUP4 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x382D DUP3 PUSH2 0x378F JUMP JUMPDEST PUSH2 0x3837 DUP2 DUP6 PUSH2 0x379A JUMP JUMPDEST SWAP4 POP PUSH2 0x3842 DUP4 PUSH2 0x37AB JUMP JUMPDEST DUP1 PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x3873 JUMPI DUP2 MLOAD PUSH2 0x385A DUP9 DUP3 PUSH2 0x37FD JUMP JUMPDEST SWAP8 POP PUSH2 0x3865 DUP4 PUSH2 0x3815 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3846 JUMP JUMPDEST POP DUP6 SWAP4 POP POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x389A DUP2 DUP5 PUSH2 0x3822 JUMP JUMPDEST SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 PUSH1 0x60 DUP5 DUP7 SUB SLT ISZERO PUSH2 0x38BB JUMPI PUSH2 0x38BA PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x38C9 DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x20 PUSH2 0x38DA DUP7 DUP3 DUP8 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x40 DUP5 ADD CALLDATALOAD PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x38FB JUMPI PUSH2 0x38FA PUSH2 0x2EF3 JUMP JUMPDEST JUMPDEST PUSH2 0x3907 DUP7 DUP3 DUP8 ADD PUSH2 0x36C8 JUMP JUMPDEST SWAP2 POP POP SWAP3 POP SWAP3 POP SWAP3 JUMP JUMPDEST PUSH2 0x391A DUP2 PUSH2 0x307A JUMP JUMPDEST DUP2 EQ PUSH2 0x3925 JUMPI PUSH1 0x0 DUP1 REVERT JUMPDEST POP JUMP JUMPDEST PUSH1 0x0 DUP2 CALLDATALOAD SWAP1 POP PUSH2 0x3937 DUP2 PUSH2 0x3911 JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP1 PUSH1 0x0 DUP1 PUSH1 0x80 DUP6 DUP8 SUB SLT ISZERO PUSH2 0x3957 JUMPI PUSH2 0x3956 PUSH2 0x2EEE JUMP JUMPDEST JUMPDEST PUSH1 0x0 PUSH2 0x3965 DUP8 DUP3 DUP9 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP5 POP POP PUSH1 0x20 PUSH2 0x3976 DUP8 DUP3 DUP9 ADD PUSH2 0x2F77 JUMP JUMPDEST SWAP4 POP POP PUSH1 0x40 PUSH2 0x3987 DUP8 DUP3 DUP9 ADD PUSH2 0x2F41 JUMP JUMPDEST SWAP3 POP POP PUSH1 0x60 PUSH2 0x3998 DUP8 DUP3 DUP9 ADD PUSH2 0x3928 JUMP JUMPDEST SWAP2 POP POP SWAP3 SWAP6 SWAP2 SWAP5 POP SWAP3 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 MSTORE PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A6564000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x39EB PUSH1 0xE DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x39F6 DUP3 PUSH2 0x39B5 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A1A DUP2 PUSH2 0x39DE JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x496E76616C696420696E64657800000000000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3A57 PUSH1 0xD DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3A62 DUP3 PUSH2 0x3A21 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3A86 DUP2 PUSH2 0x3A4A JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x32 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH32 0x4E487B7100000000000000000000000000000000000000000000000000000000 PUSH1 0x0 MSTORE PUSH1 0x22 PUSH1 0x4 MSTORE PUSH1 0x24 PUSH1 0x0 REVERT JUMPDEST PUSH1 0x0 PUSH1 0x2 DUP3 DIV SWAP1 POP PUSH1 0x1 DUP3 AND DUP1 PUSH2 0x3B03 JUMPI PUSH1 0x7F DUP3 AND SWAP2 POP JUMPDEST PUSH1 0x20 DUP3 LT DUP2 SUB PUSH2 0x3B16 JUMPI PUSH2 0x3B15 PUSH2 0x3ABC JUMP JUMPDEST JUMPDEST POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F6E6C79207468652062726F6B65722063616E2063616C6C2074686973206675 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6E6374696F6E0000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3B78 PUSH1 0x26 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3B83 DUP3 PUSH2 0x3B1C JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3BA7 DUP2 PUSH2 0x3B6B JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4E6F7420617574686F72697A656420746F206765742061636365737320636F6E PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x74726F6C00000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C0A PUSH1 0x24 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C15 DUP3 PUSH2 0x3BAE JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3C39 DUP2 PUSH2 0x3BFD JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373206E6F74206772616E7465640000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3C76 PUSH1 0x12 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3C81 DUP3 PUSH2 0x3C40 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3CA5 DUP2 PUSH2 0x3C69 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x416363657373206E6F74206772616E74656420746F207669657720646F63756D PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x656E740000000000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3D08 PUSH1 0x23 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x3D13 DUP3 PUSH2 0x3CAC JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x3D37 DUP2 PUSH2 0x3CFB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP DUP2 PUSH1 0x0 MSTORE PUSH1 0x20 PUSH1 0x0 KECCAK256 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 PUSH1 0x1F DUP4 ADD DIV SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHL SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x8 DUP4 MUL PUSH2 0x3DA0 PUSH32 0xFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFFF DUP3 PUSH2 0x3D63 JUMP JUMPDEST PUSH2 0x3DAA DUP7 DUP4 PUSH2 0x3D63 JUMP JUMPDEST SWAP6 POP DUP1 NOT DUP5 AND SWAP4 POP DUP1 DUP7 AND DUP5 OR SWAP3 POP POP POP SWAP4 SWAP3 POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3DE7 PUSH2 0x3DE2 PUSH2 0x3DDD DUP5 PUSH2 0x2F56 JUMP JUMPDEST PUSH2 0x3DC2 JUMP JUMPDEST PUSH2 0x2F56 JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 DUP2 SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH2 0x3E01 DUP4 PUSH2 0x3DCC JUMP JUMPDEST PUSH2 0x3E15 PUSH2 0x3E0D DUP3 PUSH2 0x3DEE JUMP JUMPDEST DUP5 DUP5 SLOAD PUSH2 0x3D70 JUMP JUMPDEST DUP3 SSTORE POP POP POP POP JUMP JUMPDEST PUSH1 0x0 SWAP1 JUMP JUMPDEST PUSH2 0x3E2A PUSH2 0x3E1D JUMP JUMPDEST PUSH2 0x3E35 DUP2 DUP5 DUP5 PUSH2 0x3DF8 JUMP JUMPDEST POP POP POP JUMP JUMPDEST JUMPDEST DUP2 DUP2 LT ISZERO PUSH2 0x3E59 JUMPI PUSH2 0x3E4E PUSH1 0x0 DUP3 PUSH2 0x3E22 JUMP JUMPDEST PUSH1 0x1 DUP2 ADD SWAP1 POP PUSH2 0x3E3B JUMP JUMPDEST POP POP JUMP JUMPDEST PUSH1 0x1F DUP3 GT ISZERO PUSH2 0x3E9E JUMPI PUSH2 0x3E6F DUP2 PUSH2 0x3D3E JUMP JUMPDEST PUSH2 0x3E78 DUP5 PUSH2 0x3D53 JUMP JUMPDEST DUP2 ADD PUSH1 0x20 DUP6 LT ISZERO PUSH2 0x3E87 JUMPI DUP2 SWAP1 POP JUMPDEST PUSH2 0x3E9B PUSH2 0x3E93 DUP6 PUSH2 0x3D53 JUMP JUMPDEST DUP4 ADD DUP3 PUSH2 0x3E3A JUMP JUMPDEST POP POP JUMPDEST POP POP POP JUMP JUMPDEST PUSH1 0x0 DUP3 DUP3 SHR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EC1 PUSH1 0x0 NOT DUP5 PUSH1 0x8 MUL PUSH2 0x3EA3 JUMP JUMPDEST NOT DUP1 DUP4 AND SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3EDA DUP4 DUP4 PUSH2 0x3EB0 JUMP JUMPDEST SWAP2 POP DUP3 PUSH1 0x2 MUL DUP3 OR SWAP1 POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH2 0x3EF3 DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH8 0xFFFFFFFFFFFFFFFF DUP2 GT ISZERO PUSH2 0x3F0C JUMPI PUSH2 0x3F0B PUSH2 0x35CB JUMP JUMPDEST JUMPDEST PUSH2 0x3F16 DUP3 SLOAD PUSH2 0x3AEB JUMP JUMPDEST PUSH2 0x3F21 DUP3 DUP3 DUP6 PUSH2 0x3E5D JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 SWAP1 POP PUSH1 0x1F DUP4 GT PUSH1 0x1 DUP2 EQ PUSH2 0x3F54 JUMPI PUSH1 0x0 DUP5 ISZERO PUSH2 0x3F42 JUMPI DUP3 DUP8 ADD MLOAD SWAP1 POP JUMPDEST PUSH2 0x3F4C DUP6 DUP3 PUSH2 0x3ECE JUMP JUMPDEST DUP7 SSTORE POP PUSH2 0x3FB4 JUMP JUMPDEST PUSH1 0x1F NOT DUP5 AND PUSH2 0x3F62 DUP7 PUSH2 0x3D3E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP3 DUP2 LT ISZERO PUSH2 0x3F8A JUMPI DUP5 DUP10 ADD MLOAD DUP3 SSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP6 ADD SWAP5 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x3F65 JUMP JUMPDEST DUP7 DUP4 LT ISZERO PUSH2 0x3FA7 JUMPI DUP5 DUP10 ADD MLOAD PUSH2 0x3FA3 PUSH1 0x1F DUP10 AND DUP3 PUSH2 0x3EB0 JUMP JUMPDEST DUP4 SSTORE POP JUMPDEST PUSH1 0x1 PUSH1 0x2 DUP9 MUL ADD DUP9 SSTORE POP POP POP JUMPDEST POP POP POP POP POP POP JUMP JUMPDEST PUSH2 0x3FC5 DUP2 PUSH2 0x2F56 JUMP JUMPDEST DUP3 MSTORE POP POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x3FD6 DUP3 PUSH2 0x2FEA JUMP JUMPDEST PUSH2 0x3FE0 DUP2 DUP6 PUSH2 0x39A4 JUMP JUMPDEST SWAP4 POP PUSH2 0x3FF0 DUP2 DUP6 PUSH1 0x20 DUP7 ADD PUSH2 0x3006 JUMP JUMPDEST PUSH2 0x3FF9 DUP2 PUSH2 0x3030 JUMP JUMPDEST DUP5 ADD SWAP2 POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 DUP2 SLOAD PUSH2 0x4011 DUP2 PUSH2 0x3AEB JUMP JUMPDEST PUSH2 0x401B DUP2 DUP7 PUSH2 0x39A4 JUMP JUMPDEST SWAP5 POP PUSH1 0x1 DUP3 AND PUSH1 0x0 DUP2 EQ PUSH2 0x4036 JUMPI PUSH1 0x1 DUP2 EQ PUSH2 0x404C JUMPI PUSH2 0x407F JUMP JUMPDEST PUSH1 0xFF NOT DUP4 AND DUP7 MSTORE DUP2 ISZERO ISZERO PUSH1 0x20 MUL DUP7 ADD SWAP4 POP PUSH2 0x407F JUMP JUMPDEST PUSH2 0x4055 DUP6 PUSH2 0x3D3E JUMP JUMPDEST PUSH1 0x0 JUMPDEST DUP4 DUP2 LT ISZERO PUSH2 0x4077 JUMPI DUP2 SLOAD DUP2 DUP10 ADD MSTORE PUSH1 0x1 DUP3 ADD SWAP2 POP PUSH1 0x20 DUP2 ADD SWAP1 POP PUSH2 0x4058 JUMP JUMPDEST DUP1 DUP9 ADD SWAP6 POP POP POP JUMPDEST POP POP POP SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x409D PUSH1 0x0 DUP4 ADD DUP8 PUSH2 0x3FBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x40AF DUP2 DUP7 PUSH2 0x3FCB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x40C3 DUP2 DUP6 PUSH2 0x4004 JUMP JUMPDEST SWAP1 POP PUSH2 0x40D2 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP6 SWAP5 POP POP POP POP POP JUMP JUMPDEST PUSH32 0x446F63756D656E742046657463686564204E6F742076616C6964210000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x4111 PUSH1 0x1B DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x411C DUP3 PUSH2 0x40DB JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x413C PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x414E DUP2 DUP6 PUSH2 0x3FCB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x4161 DUP2 PUSH2 0x4104 JUMP JUMPDEST SWAP1 POP PUSH2 0x4170 PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH32 0x43616E7420416363657373204861736800000000000000000000000000000000 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x41AE PUSH1 0x10 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x41B9 DUP3 PUSH2 0x4178 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x80 DUP3 ADD SWAP1 POP PUSH2 0x41D9 PUSH1 0x0 DUP4 ADD DUP7 PUSH2 0x3FBC JUMP JUMPDEST DUP2 DUP2 SUB PUSH1 0x20 DUP4 ADD MSTORE PUSH2 0x41EB DUP2 DUP6 PUSH2 0x3FCB JUMP JUMPDEST SWAP1 POP DUP2 DUP2 SUB PUSH1 0x40 DUP4 ADD MSTORE PUSH2 0x41FE DUP2 PUSH2 0x41A1 JUMP JUMPDEST SWAP1 POP PUSH2 0x420D PUSH1 0x60 DUP4 ADD DUP5 PUSH2 0x325C JUMP JUMPDEST SWAP5 SWAP4 POP POP POP POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP PUSH2 0x422A PUSH1 0x0 DUP4 ADD DUP5 PUSH2 0x3FBC JUMP JUMPDEST SWAP3 SWAP2 POP POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A206E6577206F776E657220697320746865207A65726F2061 PUSH1 0x0 DUP3 ADD MSTORE PUSH32 0x6464726573730000000000000000000000000000000000000000000000000000 PUSH1 0x20 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x428C PUSH1 0x26 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4297 DUP3 PUSH2 0x4230 JUMP JUMPDEST PUSH1 0x40 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x42BB DUP2 PUSH2 0x427F JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH32 0x4F776E61626C653A2063616C6C6572206973206E6F7420746865206F776E6572 PUSH1 0x0 DUP3 ADD MSTORE POP JUMP JUMPDEST PUSH1 0x0 PUSH2 0x42F8 PUSH1 0x20 DUP4 PUSH2 0x39A4 JUMP JUMPDEST SWAP2 POP PUSH2 0x4303 DUP3 PUSH2 0x42C2 JUMP JUMPDEST PUSH1 0x20 DUP3 ADD SWAP1 POP SWAP2 SWAP1 POP JUMP JUMPDEST PUSH1 0x0 PUSH1 0x20 DUP3 ADD SWAP1 POP DUP2 DUP2 SUB PUSH1 0x0 DUP4 ADD MSTORE PUSH2 0x4327 DUP2 PUSH2 0x42EB JUMP JUMPDEST SWAP1 POP SWAP2 SWAP1 POP JUMP INVALID TIMESTAMP PUSH19 0x6F6B657220476976696E6720446F63756D656E PUSH21 0x2041636365737320746F2052657370656374697665 KECCAK256 NUMBER PUSH13 0x69656E7421496E737572616E63 PUSH6 0x204669726D20 SELFBALANCE PUSH6 0x6E6572617465 PUSH20 0x20496E737572616E636520436C61696D20666F72 KECCAK256 PUSH4 0x6C49454E SLOAD 0x21 LOG2 PUSH5 0x6970667358 0x22 SLT KECCAK256 DUP5 0xE9 0x29 0xAB 0xCD 0xC ORIGIN 0xEE MOD 0xB2 0x27 SLT 0x2F PUSH6 0xE674974561EA SWAP5 BASEFEE 0xBF PUSH4 0x17543F06 0x4D 0xE7 0xCA 0x4D PUSH5 0x736F6C6343 STOP ADDMOD SGT STOP CALLER ","sourceMap":"304:10018:3:-:0;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;7427:296;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6352:243;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;5077:597;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;7060:287;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;5751:546;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;9755:278;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;1824:101:0;;;:::i;:::-;;7805:1874:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;1201:85:0;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;6852:133:3;;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;10134:185;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;3035:1259;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;6653:191;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;;;;;;:::i;:::-;;;;;;;;2074:198:0;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;4356:659:3;;;;;;;;;;;;;:::i;:::-;;:::i;:::-;;7427:296;7561:15;;:::i;:::-;7537:13;2819:7;:5;:7::i;:::-;2805:21;;:10;:21;;;:52;;;;2844:13;2830:27;;:10;:27;;;2805:52;:101;;;;2861:18;:33;2880:13;2861:33;;;;;;;;;;;;;;;:45;2895:10;2861:45;;;;;;;;;;;;;;;;;;;;;;;;;2805:101;2797:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;7605:15:::1;:30;7621:13;7605:30;;;;;;;;;;;;;;;:37;;;;7597:5;:45;7589:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;7678:15;:30;7694:13;7678:30;;;;;;;;;;;;;;;7709:5;7678:37;;;;;;;;:::i;:::-;;;;;;;;;;;;7671:44;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;7427:296:::0;;;;;:::o;6352:243::-;2503:7;:5;:7::i;:::-;2489:21;;:10;:21;;;2481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;6468:15:::1;:30;6484:13;6468:30;;;;;;;;;;;;;;;:37;;;;6460:5;:45;6452:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;6582:5;6534:15;:30;6550:13;6534:30;;;;;;;;;;;;;;;6565:5;6534:37;;;;;;;;:::i;:::-;;;;;;;;;;;;:45;;;:53;;;;;;;;;;;;;;;;;;6352:243:::0;;:::o;5077:597::-;5223:4;5199:13;2819:7;:5;:7::i;:::-;2805:21;;:10;:21;;;:52;;;;2844:13;2830:27;;:10;:27;;;2805:52;:101;;;;2861:18;:33;2880:13;2861:33;;;;;;;;;;;;;;;:45;2895:10;2861:45;;;;;;;;;;;;;;;;;;;;;;;;;2805:101;2797:128;;;;;;;;;;;;:::i;:::-;;;;;;;;;5256:15:::1;:30;5272:13;5256:30;;;;;;;;;;;;;;;:37;;;;5248:5;:45;5240:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;5425:15;:30;5441:13;5425:30;;;;;;;;;;;;;;;5456:5;5425:37;;;;;;;;:::i;:::-;;;;;;;;;;;;:51;;;;;;;;;;;;5411:65;;:10;:65;;;:114;;;;5480:18;:33;5499:13;5480:33;;;;;;;;;;;;;;;:45;5514:10;5480:45;;;;;;;;;;;;;;;;;;;;;;;;;5411:114;5403:163;;;;;;;;;;;;:::i;:::-;;;;;;;;;5617:21;:36;5639:13;5617:36;;;;;;;;;;;;;;;:43;5654:5;5617:43;;;;;;;;;;;:49;5661:4;5617:49;;;;;;;;;;;;;;;;;;;;;;;;;5610:56;;5077:597:::0;;;;;;:::o;7060:287::-;7133:17;2503:7;:5;:7::i;:::-;2489:21;;:10;:21;;;2481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;7318:15:::1;:21;7334:4;7318:21;;;;;;;;;;;;;;;7311:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;7060:287:::0;;;:::o;5751:546::-;2503:7;:5;:7::i;:::-;2489:21;;:10;:21;;;2481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;5913:4:::1;5861:56;;:15;:33;5877:16;5861:33;;;;;;;;;;;;;;;:48;5895:13;5861:48;;;;;;;;;;;;;;;;;;;;;;;;;:56;;;5853:87;;;;;;;;;;;;:::i;:::-;;;;;;;;;6172:5;6121:15;:33;6137:16;6121:33;;;;;;;;;;;;;;;:48;6155:13;6121:48;;;;;;;;;;;;;;;;:56;;;;;;;;;;;;;;;;;;6284:5;6230:18;:33;6249:13;6230:33;;;;;;;;;;;;;;;:51;6264:16;6230:51;;;;;;;;;;;;;;;;:59;;;;;;;;;;;;;;;;;;5751:546:::0;;:::o;9755:278::-;9860:21;2503:7;:5;:7::i;:::-;2489:21;;:10;:21;;;2481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;9910:15:::1;:30;9926:13;9910:30;;;;;;;;;;;;;;;:37;;;;9902:5;:45;9894:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;9983:20;:35;10004:13;9983:35;;;;;;;;;;;;;;;:42;10019:5;9983:42;;;;;;;;;;;9976:49;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;9755:278:::0;;;;:::o;1824:101:0:-;1094:13;:11;:13::i;:::-;1888:30:::1;1915:1;1888:18;:30::i;:::-;1824:101::o:0;7805:1874:3:-;7932:15;:37;7948:20;7932:37;;;;;;;;;;;;;;;:44;;;;7924:5;:52;7916:78;;;;;;;;;;;;:::i;:::-;;;;;;;;;8007:25;8035:15;:37;8051:20;8035:37;;;;;;;;;;;;;;;8073:5;8035:44;;;;;;;;:::i;:::-;;;;;;;;;;;;8007:72;;8090:12;8123:18;:40;8142:20;8123:40;;;;;;;;;;;;;;;:52;8164:10;8123:52;;;;;;;;;;;;;;;;;;;;;;;;;:118;;;;;8179:21;:43;8201:20;8179:43;;;;;;;;;;;;;;;:50;8223:5;8179:50;;;;;;;;;;;:62;8230:10;8179:62;;;;;;;;;;;;;;;;;;;;;;;;;8123:118;8113:128;;8256:8;:16;;;;;;;;;;;;8252:1420;;;8340:7;8332:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;8452:18;8473:8;:28;;:35;;;;8452:56;;8523:8;:28;;8557:10;8523:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8583:20;:42;8604:20;8583:42;;;;;;;;;;;;;;;:49;8626:5;8583:49;;;;;;;;;;;8638:58;;;;;;;;8651:10;8638:58;;;;;;8663:15;8638:58;;;;8680:6;8638:58;;;;8688:7;8638:58;;;;;8583:114;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;8748:20;8719:107;;8736:10;8719:107;;;8770:15;8787:6;8795:8;:21;;8818:7;8719:107;;;;;;;;;:::i;:::-;;;;;;;;8274:570;8252:1420;;;8868:8;:16;;;;;;;;;;;;8865:796;;;8900:20;:42;8921:20;8900:42;;;;;;;;;;;;;;;:49;8943:5;8900:49;;;;;;;;;;;8955:81;;;;;;;;8968:10;8955:81;;;;;;8980:15;8955:81;;;;;;;;;;;;;;;;;;;;;;;;;9028:7;8955:81;;;;;8900:137;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9086:20;9057:115;;9074:10;9057:115;;;9108:15;9125:6;9164:7;9057:115;;;;;;;;:::i;:::-;;;;;;;;8865:796;;;9229:5;9219:15;;9251:18;9272:8;:28;;:35;;;;9251:56;;9322:8;:28;;9356:10;9322:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9382:20;:42;9403:20;9382:42;;;;;;;;;;;;;;;:49;9425:5;9382:49;;;;;;;;;;;9437:83;;;;;;;;9450:10;9437:83;;;;;;9462:15;9437:83;;;;;;;;;;;;;;;;;;;;;;;;;9512:7;9437:83;;;;;9382:139;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;9570:20;9541:104;;9558:10;9541:104;;;9592:15;9609:6;9637:7;9541:104;;;;;;;;:::i;:::-;;;;;;;;9192:469;8865:796;8252:1420;7905:1774;;7805:1874;;;:::o;1201:85:0:-;1247:7;1273:6;;;;;;;;;;;1266:13;;1201:85;:::o;6852:133:3:-;6913:26;2503:7;:5;:7::i;:::-;2489:21;;:10;:21;;;2481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;6959:6:::1;:18;6966:10;6959:18;;;;;;;;;;;;;;;6952:25;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;6852:133:::0;:::o;10134:185::-;10236:4;10260:18;:36;10279:16;10260:36;;;;;;;;;;;;;;;:51;10297:13;10260:51;;;;;;;;;;;;;;;;;;;;;;;;;10253:58;;10134:185;;;;:::o;3035:1259::-;3163:16;2664:13;2650:27;;:10;:27;;;2642:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;3297:17:::1;3317:15;3297:35;;3343:19;3365:15;:27;3381:10;3365:27;;;;;;;;;;;;;;;:34;;;;3343:56;;3449:27;3479:103;;;;;;;;3488:11;3479:103;;;;3501:16;3479:103;;;;;;3519:13;3479:103;;;;;;3534:12;3479:103;;;;3548:9;3479:103;;;;3559:4;3479:103;;;;;;3579:1;3565:16;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;3479:103;;::::0;3449:133:::1;;3593:15;:27;3609:10;3593:27;;;;;;;;;;;;;;;3626:11;3593:45;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;3782:4;3731:15;:33;3747:16;3731:33;;;;;;;;;;;;;;;:48;3765:13;3731:48;;;;;;;;;;;;;;;;:55;;;;;;;;;;;;;;;;;;3890:4;3836:18;:36;3855:16;3836:36;;;;;;;;;;;;;;;:51;3873:13;3836:51;;;;;;;;;;;;;;;;:58;;;;;;;;;;;;;;;;;;3905:20;:32;3926:10;3905:32;;;;;;;;;;;;;;;:45;3938:11;3905:45;;;;;;;;;;;3956:103;;;;;;;;3969:10;3956:103;;;;;;3981:15;3956:103;;;;;;;;;;;;;;;;;;;;;;;;;4054:4;3956:103;;;;::::0;3905:155:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4071:31;4105:63;;;;;;;;4123:16;4105:63;;;;;;4141:13;4105:63;;;;;;4156:11;4105:63;;::::0;4071:97:::1;;4179:6;:15;4186:7;:5;:7::i;:::-;4179:15;;;;;;;;;;;;;;;4200:6;4179:28;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4259:13;4223:63;;4241:16;4223:63;;;4274:11;4223:63;;;;;;:::i;:::-;;;;;;;;3181:1113;;;;3035:1259:::0;;;;:::o;6653:191::-;6766:17;6739:16;2664:13;2650:27;;:10;:27;;;2642:54;;;;;;;;;;;;:::i;:::-;;;;;;;;;6803:15:::1;:33;6819:16;6803:33;;;;;;;;;;;;;;;6796:40;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;::::0;::::1;;;;;;;;;;;;;;;;;;6653:191:::0;;;;:::o;2074:198:0:-;1094:13;:11;:13::i;:::-;2182:1:::1;2162:22;;:8;:22;;::::0;2154:73:::1;;;;;;;;;;;;:::i;:::-;;;;;;;;;2237:28;2256:8;2237:18;:28::i;:::-;2074:198:::0;:::o;4356:659:3:-;2503:7;:5;:7::i;:::-;2489:21;;:10;:21;;;2481:72;;;;;;;;;;;;:::i;:::-;;;;;;;;;4497:15:::1;:30;4513:13;4497:30;;;;;;;;;;;;;;;:37;;;;4489:5;:45;4481:71;;;;;;;;;;;;:::i;:::-;;;;;;;;;4836:9;4784:21;:36;4806:13;4784:36;;;;;;;;;;;;;;;:43;4821:5;4784:43;;;;;;;;;;;:49;4828:4;4784:49;;;;;;;;;;;;;;;;:61;;;;;;;;;;;;;;;;;;4856:20;:35;4877:13;4856:35;;;;;;;;;;;;;;;:42;4892:5;4856:42;;;;;;;;;;;4904:102;;;;;;;;4917:10;4904:102;;;;;;4929:15;4904:102;;;;;;;;;;;;;;;;;;;;;;;;;5001:4;4904:102;;;;::::0;4856:151:::1;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;4356:659:::0;;;;:::o;1359:130:0:-;1433:12;:10;:12::i;:::-;1422:23;;:7;:5;:7::i;:::-;:23;;;1414:68;;;;;;;;;;;;:::i;:::-;;;;;;;;;1359:130::o;2426:187::-;2499:16;2518:6;;;;;;;;;;;2499:25;;2543:8;2534:6;;:17;;;;;;;;;;;;;;;;;;2597:8;2566:40;;2587:8;2566:40;;;;;;;;;;;;2489:124;2426:187;:::o;655:96:1:-;708:7;734:10;727:17;;655:96;:::o;-1:-1:-1:-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;:::i;:::-;;;:::o;:::-;;;;;;;;;;;;;;;;;;;;;:::o;7:75:4:-;40:6;73:2;67:9;57:19;;7:75;:::o;88:117::-;197:1;194;187:12;211:117;320:1;317;310:12;334:126;371:7;411:42;404:5;400:54;389:65;;334:126;;;:::o;466:96::-;503:7;532:24;550:5;532:24;:::i;:::-;521:35;;466:96;;;:::o;568:122::-;641:24;659:5;641:24;:::i;:::-;634:5;631:35;621:63;;680:1;677;670:12;621:63;568:122;:::o;696:139::-;742:5;780:6;767:20;758:29;;796:33;823:5;796:33;:::i;:::-;696:139;;;;:::o;841:77::-;878:7;907:5;896:16;;841:77;;;:::o;924:122::-;997:24;1015:5;997:24;:::i;:::-;990:5;987:35;977:63;;1036:1;1033;1026:12;977:63;924:122;:::o;1052:139::-;1098:5;1136:6;1123:20;1114:29;;1152:33;1179:5;1152:33;:::i;:::-;1052:139;;;;:::o;1197:474::-;1265:6;1273;1322:2;1310:9;1301:7;1297:23;1293:32;1290:119;;;1328:79;;:::i;:::-;1290:119;1448:1;1473:53;1518:7;1509:6;1498:9;1494:22;1473:53;:::i;:::-;1463:63;;1419:117;1575:2;1601:53;1646:7;1637:6;1626:9;1622:22;1601:53;:::i;:::-;1591:63;;1546:118;1197:474;;;;;:::o;1677:108::-;1754:24;1772:5;1754:24;:::i;:::-;1749:3;1742:37;1677:108;;:::o;1791:::-;1868:24;1886:5;1868:24;:::i;:::-;1863:3;1856:37;1791:108;;:::o;1905:99::-;1957:6;1991:5;1985:12;1975:22;;1905:99;;;:::o;2010:159::-;2084:11;2118:6;2113:3;2106:19;2158:4;2153:3;2149:14;2134:29;;2010:159;;;;:::o;2175:246::-;2256:1;2266:113;2280:6;2277:1;2274:13;2266:113;;;2365:1;2360:3;2356:11;2350:18;2346:1;2341:3;2337:11;2330:39;2302:2;2299:1;2295:10;2290:15;;2266:113;;;2413:1;2404:6;2399:3;2395:16;2388:27;2237:184;2175:246;;;:::o;2427:102::-;2468:6;2519:2;2515:7;2510:2;2503:5;2499:14;2495:28;2485:38;;2427:102;;;:::o;2535:357::-;2613:3;2641:39;2674:5;2641:39;:::i;:::-;2696:61;2750:6;2745:3;2696:61;:::i;:::-;2689:68;;2766:65;2824:6;2819:3;2812:4;2805:5;2801:16;2766:65;:::i;:::-;2856:29;2878:6;2856:29;:::i;:::-;2851:3;2847:39;2840:46;;2617:275;2535:357;;;;:::o;2898:90::-;2932:7;2975:5;2968:13;2961:21;2950:32;;2898:90;;;:::o;2994:99::-;3065:21;3080:5;3065:21;:::i;:::-;3060:3;3053:34;2994:99;;:::o;3099:114::-;3166:6;3200:5;3194:12;3184:22;;3099:114;;;:::o;3219:174::-;3308:11;3342:6;3337:3;3330:19;3382:4;3377:3;3373:14;3358:29;;3219:174;;;;:::o;3399:132::-;3466:4;3489:3;3481:11;;3519:4;3514:3;3510:14;3502:22;;3399:132;;;:::o;3537:179::-;3606:10;3627:46;3669:3;3661:6;3627:46;:::i;:::-;3705:4;3700:3;3696:14;3682:28;;3537:179;;;;:::o;3722:113::-;3792:4;3824;3819:3;3815:14;3807:22;;3722:113;;;:::o;3871:712::-;3980:3;4009:54;4057:5;4009:54;:::i;:::-;4079:76;4148:6;4143:3;4079:76;:::i;:::-;4072:83;;4179:56;4229:5;4179:56;:::i;:::-;4258:7;4289:1;4274:284;4299:6;4296:1;4293:13;4274:284;;;4375:6;4369:13;4402:63;4461:3;4446:13;4402:63;:::i;:::-;4395:70;;4488:60;4541:6;4488:60;:::i;:::-;4478:70;;4334:224;4321:1;4318;4314:9;4309:14;;4274:284;;;4278:14;4574:3;4567:10;;3985:598;;;3871:712;;;;:::o;4667:1629::-;4788:3;4824:4;4819:3;4815:14;4918:4;4911:5;4907:16;4901:23;4937:63;4994:4;4989:3;4985:14;4971:12;4937:63;:::i;:::-;4839:171;5101:4;5094:5;5090:16;5084:23;5120:63;5177:4;5172:3;5168:14;5154:12;5120:63;:::i;:::-;5020:173;5284:4;5277:5;5273:16;5267:23;5303:63;5360:4;5355:3;5351:14;5337:12;5303:63;:::i;:::-;5203:173;5466:4;5459:5;5455:16;5449:23;5519:3;5513:4;5509:14;5502:4;5497:3;5493:14;5486:38;5545:73;5613:4;5599:12;5545:73;:::i;:::-;5537:81;;5386:243;5716:4;5709:5;5705:16;5699:23;5735:63;5792:4;5787:3;5783:14;5769:12;5735:63;:::i;:::-;5639:169;5893:4;5886:5;5882:16;5876:23;5912:57;5963:4;5958:3;5954:14;5940:12;5912:57;:::i;:::-;5818:161;6076:4;6069:5;6065:16;6059:23;6129:3;6123:4;6119:14;6112:4;6107:3;6103:14;6096:38;6155:103;6253:4;6239:12;6155:103;:::i;:::-;6147:111;;5989:280;6286:4;6279:11;;4793:1503;4667:1629;;;;:::o;6302:377::-;6447:4;6485:2;6474:9;6470:18;6462:26;;6534:9;6528:4;6524:20;6520:1;6509:9;6505:17;6498:47;6562:110;6667:4;6658:6;6562:110;:::i;:::-;6554:118;;6302:377;;;;:::o;6685:619::-;6762:6;6770;6778;6827:2;6815:9;6806:7;6802:23;6798:32;6795:119;;;6833:79;;:::i;:::-;6795:119;6953:1;6978:53;7023:7;7014:6;7003:9;6999:22;6978:53;:::i;:::-;6968:63;;6924:117;7080:2;7106:53;7151:7;7142:6;7131:9;7127:22;7106:53;:::i;:::-;7096:63;;7051:118;7208:2;7234:53;7279:7;7270:6;7259:9;7255:22;7234:53;:::i;:::-;7224:63;;7179:118;6685:619;;;;;:::o;7310:109::-;7391:21;7406:5;7391:21;:::i;:::-;7386:3;7379:34;7310:109;;:::o;7425:210::-;7512:4;7550:2;7539:9;7535:18;7527:26;;7563:65;7625:1;7614:9;7610:17;7601:6;7563:65;:::i;:::-;7425:210;;;;:::o;7641:329::-;7700:6;7749:2;7737:9;7728:7;7724:23;7720:32;7717:119;;;7755:79;;:::i;:::-;7717:119;7875:1;7900:53;7945:7;7936:6;7925:9;7921:22;7900:53;:::i;:::-;7890:63;;7846:117;7641:329;;;;:::o;7976:140::-;8069:6;8103:5;8097:12;8087:22;;7976:140;;;:::o;8122:210::-;8247:11;8281:6;8276:3;8269:19;8321:4;8316:3;8312:14;8297:29;;8122:210;;;;:::o;8338:158::-;8431:4;8454:3;8446:11;;8484:4;8479:3;8475:14;8467:22;;8338:158;;;:::o;8580:1619::-;8691:3;8727:4;8722:3;8718:14;8821:4;8814:5;8810:16;8804:23;8840:63;8897:4;8892:3;8888:14;8874:12;8840:63;:::i;:::-;8742:171;9004:4;8997:5;8993:16;8987:23;9023:63;9080:4;9075:3;9071:14;9057:12;9023:63;:::i;:::-;8923:173;9187:4;9180:5;9176:16;9170:23;9206:63;9263:4;9258:3;9254:14;9240:12;9206:63;:::i;:::-;9106:173;9369:4;9362:5;9358:16;9352:23;9422:3;9416:4;9412:14;9405:4;9400:3;9396:14;9389:38;9448:73;9516:4;9502:12;9448:73;:::i;:::-;9440:81;;9289:243;9619:4;9612:5;9608:16;9602:23;9638:63;9695:4;9690:3;9686:14;9672:12;9638:63;:::i;:::-;9542:169;9796:4;9789:5;9785:16;9779:23;9815:57;9866:4;9861:3;9857:14;9843:12;9815:57;:::i;:::-;9721:161;9979:4;9972:5;9968:16;9962:23;10032:3;10026:4;10022:14;10015:4;10010:3;10006:14;9999:38;10058:103;10156:4;10142:12;10058:103;:::i;:::-;10050:111;;9892:280;10189:4;10182:11;;8696:1503;8580:1619;;;;:::o;10205:260::-;10326:10;10361:98;10455:3;10447:6;10361:98;:::i;:::-;10347:112;;10205:260;;;;:::o;10471:139::-;10567:4;10599;10594:3;10590:14;10582:22;;10471:139;;;:::o;10698:1119::-;10869:3;10898:80;10972:5;10898:80;:::i;:::-;10994:112;11099:6;11094:3;10994:112;:::i;:::-;10987:119;;11132:3;11177:4;11169:6;11165:17;11160:3;11156:27;11207:82;11283:5;11207:82;:::i;:::-;11312:7;11343:1;11328:444;11353:6;11350:1;11347:13;11328:444;;;11424:9;11418:4;11414:20;11409:3;11402:33;11475:6;11469:13;11503:116;11614:4;11599:13;11503:116;:::i;:::-;11495:124;;11642:86;11721:6;11642:86;:::i;:::-;11632:96;;11757:4;11752:3;11748:14;11741:21;;11388:384;11375:1;11372;11368:9;11363:14;;11328:444;;;11332:14;11788:4;11781:11;;11808:3;11801:10;;10874:943;;;;;10698:1119;;;;:::o;11823:477::-;12018:4;12056:2;12045:9;12041:18;12033:26;;12105:9;12099:4;12095:20;12091:1;12080:9;12076:17;12069:47;12133:160;12288:4;12279:6;12133:160;:::i;:::-;12125:168;;11823:477;;;;:::o;12306:474::-;12374:6;12382;12431:2;12419:9;12410:7;12406:23;12402:32;12399:119;;;12437:79;;:::i;:::-;12399:119;12557:1;12582:53;12627:7;12618:6;12607:9;12603:22;12582:53;:::i;:::-;12572:63;;12528:117;12684:2;12710:53;12755:7;12746:6;12735:9;12731:22;12710:53;:::i;:::-;12700:63;;12655:118;12306:474;;;;;:::o;12786:144::-;12883:6;12917:5;12911:12;12901:22;;12786:144;;;:::o;12936:214::-;13065:11;13099:6;13094:3;13087:19;13139:4;13134:3;13130:14;13115:29;;12936:214;;;;:::o;13156:162::-;13253:4;13276:3;13268:11;;13306:4;13301:3;13297:14;13289:22;;13156:162;;;:::o;13410:958::-;13529:3;13565:4;13560:3;13556:14;13652:4;13645:5;13641:16;13635:23;13671:63;13728:4;13723:3;13719:14;13705:12;13671:63;:::i;:::-;13580:164;13831:4;13824:5;13820:16;13814:23;13850:63;13907:4;13902:3;13898:14;13884:12;13850:63;:::i;:::-;13754:169;14007:4;14000:5;13996:16;13990:23;14060:3;14054:4;14050:14;14043:4;14038:3;14034:14;14027:38;14086:73;14154:4;14140:12;14086:73;:::i;:::-;14078:81;;13933:237;14255:4;14248:5;14244:16;14238:23;14274:57;14325:4;14320:3;14316:14;14302:12;14274:57;:::i;:::-;14180:161;14358:4;14351:11;;13534:834;13410:958;;;;:::o;14374:276::-;14503:10;14538:106;14640:3;14632:6;14538:106;:::i;:::-;14524:120;;14374:276;;;;:::o;14656:143::-;14756:4;14788;14783:3;14779:14;14771:22;;14656:143;;;:::o;14895:1151::-;15074:3;15103:84;15181:5;15103:84;:::i;:::-;15203:116;15312:6;15307:3;15203:116;:::i;:::-;15196:123;;15345:3;15390:4;15382:6;15378:17;15373:3;15369:27;15420:86;15500:5;15420:86;:::i;:::-;15529:7;15560:1;15545:456;15570:6;15567:1;15564:13;15545:456;;;15641:9;15635:4;15631:20;15626:3;15619:33;15692:6;15686:13;15720:124;15839:4;15824:13;15720:124;:::i;:::-;15712:132;;15867:90;15950:6;15867:90;:::i;:::-;15857:100;;15986:4;15981:3;15977:14;15970:21;;15605:396;15592:1;15589;15585:9;15580:14;;15545:456;;;15549:14;16017:4;16010:11;;16037:3;16030:10;;15079:967;;;;;14895:1151;;;;:::o;16052:493::-;16255:4;16293:2;16282:9;16278:18;16270:26;;16342:9;16336:4;16332:20;16328:1;16317:9;16313:17;16306:47;16370:168;16533:4;16524:6;16370:168;:::i;:::-;16362:176;;16052:493;;;;:::o;16551:117::-;16660:1;16657;16650:12;16674:117;16783:1;16780;16773:12;16797:180;16845:77;16842:1;16835:88;16942:4;16939:1;16932:15;16966:4;16963:1;16956:15;16983:281;17066:27;17088:4;17066:27;:::i;:::-;17058:6;17054:40;17196:6;17184:10;17181:22;17160:18;17148:10;17145:34;17142:62;17139:88;;;17207:18;;:::i;:::-;17139:88;17247:10;17243:2;17236:22;17026:238;16983:281;;:::o;17270:129::-;17304:6;17331:20;;:::i;:::-;17321:30;;17360:33;17388:4;17380:6;17360:33;:::i;:::-;17270:129;;;:::o;17405:308::-;17467:4;17557:18;17549:6;17546:30;17543:56;;;17579:18;;:::i;:::-;17543:56;17617:29;17639:6;17617:29;:::i;:::-;17609:37;;17701:4;17695;17691:15;17683:23;;17405:308;;;:::o;17719:146::-;17816:6;17811:3;17806;17793:30;17857:1;17848:6;17843:3;17839:16;17832:27;17719:146;;;:::o;17871:425::-;17949:5;17974:66;17990:49;18032:6;17990:49;:::i;:::-;17974:66;:::i;:::-;17965:75;;18063:6;18056:5;18049:21;18101:4;18094:5;18090:16;18139:3;18130:6;18125:3;18121:16;18118:25;18115:112;;;18146:79;;:::i;:::-;18115:112;18236:54;18283:6;18278:3;18273;18236:54;:::i;:::-;17955:341;17871:425;;;;;:::o;18316:340::-;18372:5;18421:3;18414:4;18406:6;18402:17;18398:27;18388:122;;18429:79;;:::i;:::-;18388:122;18546:6;18533:20;18571:79;18646:3;18638:6;18631:4;18623:6;18619:17;18571:79;:::i;:::-;18562:88;;18378:278;18316:340;;;;:::o;18662:799::-;18749:6;18757;18765;18814:2;18802:9;18793:7;18789:23;18785:32;18782:119;;;18820:79;;:::i;:::-;18782:119;18940:1;18965:53;19010:7;19001:6;18990:9;18986:22;18965:53;:::i;:::-;18955:63;;18911:117;19067:2;19093:53;19138:7;19129:6;19118:9;19114:22;19093:53;:::i;:::-;19083:63;;19038:118;19223:2;19212:9;19208:18;19195:32;19254:18;19246:6;19243:30;19240:117;;;19276:79;;:::i;:::-;19240:117;19381:63;19436:7;19427:6;19416:9;19412:22;19381:63;:::i;:::-;19371:73;;19166:288;18662:799;;;;;:::o;19467:118::-;19554:24;19572:5;19554:24;:::i;:::-;19549:3;19542:37;19467:118;;:::o;19591:222::-;19684:4;19722:2;19711:9;19707:18;19699:26;;19735:71;19803:1;19792:9;19788:17;19779:6;19735:71;:::i;:::-;19591:222;;;;:::o;19819:149::-;19921:6;19955:5;19949:12;19939:22;;19819:149;;;:::o;19974:219::-;20108:11;20142:6;20137:3;20130:19;20182:4;20177:3;20173:14;20158:29;;19974:219;;;;:::o;20199:167::-;20301:4;20324:3;20316:11;;20354:4;20349:3;20345:14;20337:22;;20199:167;;;:::o;20468:714::-;20625:4;20620:3;20616:14;20724:4;20717:5;20713:16;20707:23;20743:63;20800:4;20795:3;20791:14;20777:12;20743:63;:::i;:::-;20640:176;20908:4;20901:5;20897:16;20891:23;20927:63;20984:4;20979:3;20975:14;20961:12;20927:63;:::i;:::-;20826:174;21083:4;21076:5;21072:16;21066:23;21102:63;21159:4;21154:3;21150:14;21136:12;21102:63;:::i;:::-;21010:165;20594:588;20468:714;;:::o;21188:319::-;21327:10;21348:116;21460:3;21452:6;21348:116;:::i;:::-;21496:4;21491:3;21487:14;21473:28;;21188:319;;;;:::o;21513:148::-;21618:4;21650;21645:3;21641:14;21633:22;;21513:148;;;:::o;21767:1012::-;21956:3;21985:89;22068:5;21985:89;:::i;:::-;22090:121;22204:6;22199:3;22090:121;:::i;:::-;22083:128;;22235:91;22320:5;22235:91;:::i;:::-;22349:7;22380:1;22365:389;22390:6;22387:1;22384:13;22365:389;;;22466:6;22460:13;22493:133;22622:3;22607:13;22493:133;:::i;:::-;22486:140;;22649:95;22737:6;22649:95;:::i;:::-;22639:105;;22425:329;22412:1;22409;22405:9;22400:14;;22365:389;;;22369:14;22770:3;22763:10;;21961:818;;;21767:1012;;;;:::o;22785:513::-;22998:4;23036:2;23025:9;23021:18;23013:26;;23085:9;23079:4;23075:20;23071:1;23060:9;23056:17;23049:47;23113:178;23286:4;23277:6;23113:178;:::i;:::-;23105:186;;22785:513;;;;:::o;23304:799::-;23391:6;23399;23407;23456:2;23444:9;23435:7;23431:23;23427:32;23424:119;;;23462:79;;:::i;:::-;23424:119;23582:1;23607:53;23652:7;23643:6;23632:9;23628:22;23607:53;:::i;:::-;23597:63;;23553:117;23709:2;23735:53;23780:7;23771:6;23760:9;23756:22;23735:53;:::i;:::-;23725:63;;23680:118;23865:2;23854:9;23850:18;23837:32;23896:18;23888:6;23885:30;23882:117;;;23918:79;;:::i;:::-;23882:117;24023:63;24078:7;24069:6;24058:9;24054:22;24023:63;:::i;:::-;24013:73;;23808:288;23304:799;;;;;:::o;24109:116::-;24179:21;24194:5;24179:21;:::i;:::-;24172:5;24169:32;24159:60;;24215:1;24212;24205:12;24159:60;24109:116;:::o;24231:133::-;24274:5;24312:6;24299:20;24290:29;;24328:30;24352:5;24328:30;:::i;:::-;24231:133;;;;:::o;24370:759::-;24453:6;24461;24469;24477;24526:3;24514:9;24505:7;24501:23;24497:33;24494:120;;;24533:79;;:::i;:::-;24494:120;24653:1;24678:53;24723:7;24714:6;24703:9;24699:22;24678:53;:::i;:::-;24668:63;;24624:117;24780:2;24806:53;24851:7;24842:6;24831:9;24827:22;24806:53;:::i;:::-;24796:63;;24751:118;24908:2;24934:53;24979:7;24970:6;24959:9;24955:22;24934:53;:::i;:::-;24924:63;;24879:118;25036:2;25062:50;25104:7;25095:6;25084:9;25080:22;25062:50;:::i;:::-;25052:60;;25007:115;24370:759;;;;;;;:::o;25135:169::-;25219:11;25253:6;25248:3;25241:19;25293:4;25288:3;25284:14;25269:29;;25135:169;;;;:::o;25310:164::-;25450:16;25446:1;25438:6;25434:14;25427:40;25310:164;:::o;25480:366::-;25622:3;25643:67;25707:2;25702:3;25643:67;:::i;:::-;25636:74;;25719:93;25808:3;25719:93;:::i;:::-;25837:2;25832:3;25828:12;25821:19;;25480:366;;;:::o;25852:419::-;26018:4;26056:2;26045:9;26041:18;26033:26;;26105:9;26099:4;26095:20;26091:1;26080:9;26076:17;26069:47;26133:131;26259:4;26133:131;:::i;:::-;26125:139;;25852:419;;;:::o;26277:163::-;26417:15;26413:1;26405:6;26401:14;26394:39;26277:163;:::o;26446:366::-;26588:3;26609:67;26673:2;26668:3;26609:67;:::i;:::-;26602:74;;26685:93;26774:3;26685:93;:::i;:::-;26803:2;26798:3;26794:12;26787:19;;26446:366;;;:::o;26818:419::-;26984:4;27022:2;27011:9;27007:18;26999:26;;27071:9;27065:4;27061:20;27057:1;27046:9;27042:17;27035:47;27099:131;27225:4;27099:131;:::i;:::-;27091:139;;26818:419;;;:::o;27243:180::-;27291:77;27288:1;27281:88;27388:4;27385:1;27378:15;27412:4;27409:1;27402:15;27429:180;27477:77;27474:1;27467:88;27574:4;27571:1;27564:15;27598:4;27595:1;27588:15;27615:320;27659:6;27696:1;27690:4;27686:12;27676:22;;27743:1;27737:4;27733:12;27764:18;27754:81;;27820:4;27812:6;27808:17;27798:27;;27754:81;27882:2;27874:6;27871:14;27851:18;27848:38;27845:84;;27901:18;;:::i;:::-;27845:84;27666:269;27615:320;;;:::o;27941:225::-;28081:34;28077:1;28069:6;28065:14;28058:58;28150:8;28145:2;28137:6;28133:15;28126:33;27941:225;:::o;28172:366::-;28314:3;28335:67;28399:2;28394:3;28335:67;:::i;:::-;28328:74;;28411:93;28500:3;28411:93;:::i;:::-;28529:2;28524:3;28520:12;28513:19;;28172:366;;;:::o;28544:419::-;28710:4;28748:2;28737:9;28733:18;28725:26;;28797:9;28791:4;28787:20;28783:1;28772:9;28768:17;28761:47;28825:131;28951:4;28825:131;:::i;:::-;28817:139;;28544:419;;;:::o;28969:223::-;29109:34;29105:1;29097:6;29093:14;29086:58;29178:6;29173:2;29165:6;29161:15;29154:31;28969:223;:::o;29198:366::-;29340:3;29361:67;29425:2;29420:3;29361:67;:::i;:::-;29354:74;;29437:93;29526:3;29437:93;:::i;:::-;29555:2;29550:3;29546:12;29539:19;;29198:366;;;:::o;29570:419::-;29736:4;29774:2;29763:9;29759:18;29751:26;;29823:9;29817:4;29813:20;29809:1;29798:9;29794:17;29787:47;29851:131;29977:4;29851:131;:::i;:::-;29843:139;;29570:419;;;:::o;29995:168::-;30135:20;30131:1;30123:6;30119:14;30112:44;29995:168;:::o;30169:366::-;30311:3;30332:67;30396:2;30391:3;30332:67;:::i;:::-;30325:74;;30408:93;30497:3;30408:93;:::i;:::-;30526:2;30521:3;30517:12;30510:19;;30169:366;;;:::o;30541:419::-;30707:4;30745:2;30734:9;30730:18;30722:26;;30794:9;30788:4;30784:20;30780:1;30769:9;30765:17;30758:47;30822:131;30948:4;30822:131;:::i;:::-;30814:139;;30541:419;;;:::o;30966:222::-;31106:34;31102:1;31094:6;31090:14;31083:58;31175:5;31170:2;31162:6;31158:15;31151:30;30966:222;:::o;31194:366::-;31336:3;31357:67;31421:2;31416:3;31357:67;:::i;:::-;31350:74;;31433:93;31522:3;31433:93;:::i;:::-;31551:2;31546:3;31542:12;31535:19;;31194:366;;;:::o;31566:419::-;31732:4;31770:2;31759:9;31755:18;31747:26;;31819:9;31813:4;31809:20;31805:1;31794:9;31790:17;31783:47;31847:131;31973:4;31847:131;:::i;:::-;31839:139;;31566:419;;;:::o;31991:141::-;32040:4;32063:3;32055:11;;32086:3;32083:1;32076:14;32120:4;32117:1;32107:18;32099:26;;31991:141;;;:::o;32138:93::-;32175:6;32222:2;32217;32210:5;32206:14;32202:23;32192:33;;32138:93;;;:::o;32237:107::-;32281:8;32331:5;32325:4;32321:16;32300:37;;32237:107;;;;:::o;32350:393::-;32419:6;32469:1;32457:10;32453:18;32492:97;32522:66;32511:9;32492:97;:::i;:::-;32610:39;32640:8;32629:9;32610:39;:::i;:::-;32598:51;;32682:4;32678:9;32671:5;32667:21;32658:30;;32731:4;32721:8;32717:19;32710:5;32707:30;32697:40;;32426:317;;32350:393;;;;;:::o;32749:60::-;32777:3;32798:5;32791:12;;32749:60;;;:::o;32815:142::-;32865:9;32898:53;32916:34;32925:24;32943:5;32925:24;:::i;:::-;32916:34;:::i;:::-;32898:53;:::i;:::-;32885:66;;32815:142;;;:::o;32963:75::-;33006:3;33027:5;33020:12;;32963:75;;;:::o;33044:269::-;33154:39;33185:7;33154:39;:::i;:::-;33215:91;33264:41;33288:16;33264:41;:::i;:::-;33256:6;33249:4;33243:11;33215:91;:::i;:::-;33209:4;33202:105;33120:193;33044:269;;;:::o;33319:73::-;33364:3;33319:73;:::o;33398:189::-;33475:32;;:::i;:::-;33516:65;33574:6;33566;33560:4;33516:65;:::i;:::-;33451:136;33398:189;;:::o;33593:186::-;33653:120;33670:3;33663:5;33660:14;33653:120;;;33724:39;33761:1;33754:5;33724:39;:::i;:::-;33697:1;33690:5;33686:13;33677:22;;33653:120;;;33593:186;;:::o;33785:543::-;33886:2;33881:3;33878:11;33875:446;;;33920:38;33952:5;33920:38;:::i;:::-;34004:29;34022:10;34004:29;:::i;:::-;33994:8;33990:44;34187:2;34175:10;34172:18;34169:49;;;34208:8;34193:23;;34169:49;34231:80;34287:22;34305:3;34287:22;:::i;:::-;34277:8;34273:37;34260:11;34231:80;:::i;:::-;33890:431;;33875:446;33785:543;;;:::o;34334:117::-;34388:8;34438:5;34432:4;34428:16;34407:37;;34334:117;;;;:::o;34457:169::-;34501:6;34534:51;34582:1;34578:6;34570:5;34567:1;34563:13;34534:51;:::i;:::-;34530:56;34615:4;34609;34605:15;34595:25;;34508:118;34457:169;;;;:::o;34631:295::-;34707:4;34853:29;34878:3;34872:4;34853:29;:::i;:::-;34845:37;;34915:3;34912:1;34908:11;34902:4;34899:21;34891:29;;34631:295;;;;:::o;34931:1395::-;35048:37;35081:3;35048:37;:::i;:::-;35150:18;35142:6;35139:30;35136:56;;;35172:18;;:::i;:::-;35136:56;35216:38;35248:4;35242:11;35216:38;:::i;:::-;35301:67;35361:6;35353;35347:4;35301:67;:::i;:::-;35395:1;35419:4;35406:17;;35451:2;35443:6;35440:14;35468:1;35463:618;;;;36125:1;36142:6;36139:77;;;36191:9;36186:3;36182:19;36176:26;36167:35;;36139:77;36242:67;36302:6;36295:5;36242:67;:::i;:::-;36236:4;36229:81;36098:222;35433:887;;35463:618;35515:4;35511:9;35503:6;35499:22;35549:37;35581:4;35549:37;:::i;:::-;35608:1;35622:208;35636:7;35633:1;35630:14;35622:208;;;35715:9;35710:3;35706:19;35700:26;35692:6;35685:42;35766:1;35758:6;35754:14;35744:24;;35813:2;35802:9;35798:18;35785:31;;35659:4;35656:1;35652:12;35647:17;;35622:208;;;35858:6;35849:7;35846:19;35843:179;;;35916:9;35911:3;35907:19;35901:26;35959:48;36001:4;35993:6;35989:17;35978:9;35959:48;:::i;:::-;35951:6;35944:64;35866:156;35843:179;36068:1;36064;36056:6;36052:14;36048:22;36042:4;36035:36;35470:611;;;35433:887;;35023:1303;;;34931:1395;;:::o;36332:118::-;36419:24;36437:5;36419:24;:::i;:::-;36414:3;36407:37;36332:118;;:::o;36456:377::-;36544:3;36572:39;36605:5;36572:39;:::i;:::-;36627:71;36691:6;36686:3;36627:71;:::i;:::-;36620:78;;36707:65;36765:6;36760:3;36753:4;36746:5;36742:16;36707:65;:::i;:::-;36797:29;36819:6;36797:29;:::i;:::-;36792:3;36788:39;36781:46;;36548:285;36456:377;;;;:::o;36863:831::-;36948:3;36985:5;36979:12;37014:36;37040:9;37014:36;:::i;:::-;37066:71;37130:6;37125:3;37066:71;:::i;:::-;37059:78;;37168:1;37157:9;37153:17;37184:1;37179:164;;;;37357:1;37352:336;;;;37146:542;;37179:164;37263:4;37259:9;37248;37244:25;37239:3;37232:38;37323:6;37316:14;37309:22;37303:4;37299:33;37294:3;37290:43;37283:50;;37179:164;;37352:336;37419:38;37451:5;37419:38;:::i;:::-;37479:1;37493:154;37507:6;37504:1;37501:13;37493:154;;;37581:7;37575:14;37571:1;37566:3;37562:11;37555:35;37631:1;37622:7;37618:15;37607:26;;37529:4;37526:1;37522:12;37517:17;;37493:154;;;37676:1;37671:3;37667:11;37660:18;;37359:329;;37146:542;;36952:742;;36863:831;;;;:::o;37700:717::-;37908:4;37946:3;37935:9;37931:19;37923:27;;37960:71;38028:1;38017:9;38013:17;38004:6;37960:71;:::i;:::-;38078:9;38072:4;38068:20;38063:2;38052:9;38048:18;38041:48;38106:78;38179:4;38170:6;38106:78;:::i;:::-;38098:86;;38231:9;38225:4;38221:20;38216:2;38205:9;38201:18;38194:48;38259:75;38329:4;38320:6;38259:75;:::i;:::-;38251:83;;38344:66;38406:2;38395:9;38391:18;38382:6;38344:66;:::i;:::-;37700:717;;;;;;;:::o;38423:177::-;38563:29;38559:1;38551:6;38547:14;38540:53;38423:177;:::o;38606:366::-;38748:3;38769:67;38833:2;38828:3;38769:67;:::i;:::-;38762:74;;38845:93;38934:3;38845:93;:::i;:::-;38963:2;38958:3;38954:12;38947:19;;38606:366;;;:::o;38978:829::-;39242:4;39280:3;39269:9;39265:19;39257:27;;39294:71;39362:1;39351:9;39347:17;39338:6;39294:71;:::i;:::-;39412:9;39406:4;39402:20;39397:2;39386:9;39382:18;39375:48;39440:78;39513:4;39504:6;39440:78;:::i;:::-;39432:86;;39565:9;39559:4;39555:20;39550:2;39539:9;39535:18;39528:48;39593:131;39719:4;39593:131;:::i;:::-;39585:139;;39734:66;39796:2;39785:9;39781:18;39772:6;39734:66;:::i;:::-;38978:829;;;;;;:::o;39813:166::-;39953:18;39949:1;39941:6;39937:14;39930:42;39813:166;:::o;39985:366::-;40127:3;40148:67;40212:2;40207:3;40148:67;:::i;:::-;40141:74;;40224:93;40313:3;40224:93;:::i;:::-;40342:2;40337:3;40333:12;40326:19;;39985:366;;;:::o;40357:829::-;40621:4;40659:3;40648:9;40644:19;40636:27;;40673:71;40741:1;40730:9;40726:17;40717:6;40673:71;:::i;:::-;40791:9;40785:4;40781:20;40776:2;40765:9;40761:18;40754:48;40819:78;40892:4;40883:6;40819:78;:::i;:::-;40811:86;;40944:9;40938:4;40934:20;40929:2;40918:9;40914:18;40907:48;40972:131;41098:4;40972:131;:::i;:::-;40964:139;;41113:66;41175:2;41164:9;41160:18;41151:6;41113:66;:::i;:::-;40357:829;;;;;;:::o;41192:222::-;41285:4;41323:2;41312:9;41308:18;41300:26;;41336:71;41404:1;41393:9;41389:17;41380:6;41336:71;:::i;:::-;41192:222;;;;:::o;41420:225::-;41560:34;41556:1;41548:6;41544:14;41537:58;41629:8;41624:2;41616:6;41612:15;41605:33;41420:225;:::o;41651:366::-;41793:3;41814:67;41878:2;41873:3;41814:67;:::i;:::-;41807:74;;41890:93;41979:3;41890:93;:::i;:::-;42008:2;42003:3;41999:12;41992:19;;41651:366;;;:::o;42023:419::-;42189:4;42227:2;42216:9;42212:18;42204:26;;42276:9;42270:4;42266:20;42262:1;42251:9;42247:17;42240:47;42304:131;42430:4;42304:131;:::i;:::-;42296:139;;42023:419;;;:::o;42448:182::-;42588:34;42584:1;42576:6;42572:14;42565:58;42448:182;:::o;42636:366::-;42778:3;42799:67;42863:2;42858:3;42799:67;:::i;:::-;42792:74;;42875:93;42964:3;42875:93;:::i;:::-;42993:2;42988:3;42984:12;42977:19;;42636:366;;;:::o;43008:419::-;43174:4;43212:2;43201:9;43197:18;43189:26;;43261:9;43255:4;43251:20;43247:1;43236:9;43232:17;43225:47;43289:131;43415:4;43289:131;:::i;:::-;43281:139;;43008:419;;;:::o"},"methodIdentifiers":{"accessDocument(address,uint256,string)":"84b28487","brokerDashboard()":"c030224a","getAccessControl(address,uint256,address)":"472879d5","getAllDocuments(address)":"59ded538","getClientDocuments(address)":"e3766c2f","getDocumentDetails(address,uint256)":"23b60fd9","getDocumentTraceability(address,uint256)":"6029801b","hasAccessToInsurance(address,address)":"c2ee0dbe","markDocumentAsInvalid(address,uint256)":"32d125cd","owner()":"8da5cb5b","renounceOwnership()":"715018a6","revokeAccess(address,address)":"5f6ea340","setAccessControl(address,uint256,address,bool)":"f63f3f89","submitDocument(address,address,string)":"cecf15e3","transferOwnership(address)":"f2fde38b"}},"metadata":"{\"compiler\":{\"version\":\"0.8.19+commit.7dd6d404\"},\"language\":\"Solidity\",\"output\":{\"abi\":[{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"documentOwner\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"string\",\"name\":\"documentHash\",\"type\":\"string\"},{\"indexed\":false,\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"name\":\"DocumentAccessed\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"indexed\":false,\"internalType\":\"uint256\",\"name\":\"Index\",\"type\":\"uint256\"}],\"name\":\"DocumentGenerated\",\"type\":\"event\"},{\"anonymous\":false,\"inputs\":[{\"indexed\":true,\"internalType\":\"address\",\"name\":\"previousOwner\",\"type\":\"address\"},{\"indexed\":true,\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"OwnershipTransferred\",\"type\":\"event\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"InsuranceFirmAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"}],\"name\":\"accessDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"brokerDashboard\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"insuranceCompany\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"intendedClient\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"Index\",\"type\":\"uint256\"}],\"internalType\":\"struct InsuranceContract.documentGenerated[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAccessControl\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"}],\"name\":\"getAllDocuments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"documentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"traceabilityIndexes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct InsuranceContract.Document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"insuranceCompany\",\"type\":\"address\"}],\"name\":\"getClientDocuments\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"documentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"traceabilityIndexes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct InsuranceContract.Document[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDocumentDetails\",\"outputs\":[{\"components\":[{\"internalType\":\"uint256\",\"name\":\"indexNumber\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"documentHash\",\"type\":\"string\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"bool\",\"name\":\"isValid\",\"type\":\"bool\"},{\"internalType\":\"uint256[]\",\"name\":\"traceabilityIndexes\",\"type\":\"uint256[]\"}],\"internalType\":\"struct InsuranceContract.Document\",\"name\":\"\",\"type\":\"tuple\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"getDocumentTraceability\",\"outputs\":[{\"components\":[{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"timestamp\",\"type\":\"uint256\"},{\"internalType\":\"string\",\"name\":\"reason\",\"type\":\"string\"},{\"internalType\":\"bool\",\"name\":\"success\",\"type\":\"bool\"}],\"internalType\":\"struct InsuranceContract.Traceability[]\",\"name\":\"\",\"type\":\"tuple[]\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"insuranceCompany\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"}],\"name\":\"hasAccessToInsurance\",\"outputs\":[{\"internalType\":\"bool\",\"name\":\"\",\"type\":\"bool\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"}],\"name\":\"markDocumentAsInvalid\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"owner\",\"outputs\":[{\"internalType\":\"address\",\"name\":\"\",\"type\":\"address\"}],\"stateMutability\":\"view\",\"type\":\"function\"},{\"inputs\":[],\"name\":\"renounceOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"insuranceCompany\",\"type\":\"address\"}],\"name\":\"revokeAccess\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"InsuranceFirm\",\"type\":\"address\"},{\"internalType\":\"uint256\",\"name\":\"index\",\"type\":\"uint256\"},{\"internalType\":\"address\",\"name\":\"user\",\"type\":\"address\"},{\"internalType\":\"bool\",\"name\":\"hasAccess\",\"type\":\"bool\"}],\"name\":\"setAccessControl\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"insuranceCompany\",\"type\":\"address\"},{\"internalType\":\"address\",\"name\":\"clientAddress\",\"type\":\"address\"},{\"internalType\":\"string\",\"name\":\"documentHash\",\"type\":\"string\"}],\"name\":\"submitDocument\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"},{\"inputs\":[{\"internalType\":\"address\",\"name\":\"newOwner\",\"type\":\"address\"}],\"name\":\"transferOwnership\",\"outputs\":[],\"stateMutability\":\"nonpayable\",\"type\":\"function\"}],\"devdoc\":{\"kind\":\"dev\",\"methods\":{\"owner()\":{\"details\":\"Returns the address of the current owner.\"},\"renounceOwnership()\":{\"details\":\"Leaves the contract without owner. It will not be possible to call `onlyOwner` functions. Can only be called by the current owner. NOTE: Renouncing ownership will leave the contract without an owner, thereby disabling any functionality that is only available to the owner.\"},\"transferOwnership(address)\":{\"details\":\"Transfers ownership of the contract to a new account (`newOwner`). Can only be called by the current owner.\"}},\"version\":1},\"userdoc\":{\"kind\":\"user\",\"methods\":{},\"version\":1}},\"settings\":{\"compilationTarget\":{\"contracts/insurance.sol\":\"InsuranceContract\"},\"evmVersion\":\"paris\",\"libraries\":{},\"metadata\":{\"bytecodeHash\":\"ipfs\"},\"optimizer\":{\"enabled\":false,\"runs\":200},\"remappings\":[]},\"sources\":{\"@openzeppelin/contracts/access/Ownable.sol\":{\"keccak256\":\"0xba43b97fba0d32eb4254f6a5a297b39a19a247082a02d6e69349e071e2946218\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://fc980984badf3984b6303b377711220e067722bbd6a135b24669ff5069ef9f32\",\"dweb:/ipfs/QmPHXMSXj99XjSVM21YsY6aNtLLjLVXDbyN76J5HQYvvrz\"]},\"@openzeppelin/contracts/utils/Context.sol\":{\"keccak256\":\"0xa92e4fa126feb6907daa0513ddd816b2eb91f30a808de54f63c17d0e162c3439\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://a367861093b74443b137564d3f3c472f70bcf114739e62059c939f25e315706c\",\"dweb:/ipfs/Qmd7JMpcxD9RuQjK3uM3EzJUgSqdN8vzp8eytEiuwxQJ6h\"]},\"@openzeppelin/contracts/utils/math/SafeCast.sol\":{\"keccak256\":\"0x52a8cfb0f5239d11b457dcdd1b326992ef672714ca8da71a157255bddd13f3ad\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://495145362c7ff1c9ca88c58bbbbcb412e3c2004406647412394486552ff6c278\",\"dweb:/ipfs/QmNNCeng6d5eRPDn6tkWSQhjE39XWfQEfjA63rRwHmr1iH\"]},\"contracts/insurance.sol\":{\"keccak256\":\"0xf06ac174ea9eac56a43fdf72ae95513ee0074a94e41a542b301141fe47d82664\",\"license\":\"MIT\",\"urls\":[\"bzz-raw://83e7260bb721cfa46df0c231e1c70f0d3b276523e8ee4e2d5a8cb3fdd12341b2\",\"dweb:/ipfs/QmfBY8swXiXFN7RuX8ernmg5rDkPWdUkByhHxjzcwMiEtm\"]}},\"version\":1}"}}}}}